bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Weight  weightMatrixSqrt  =  squareRoot(((  Weight)data).getWeight(),  covarianceSingularityThreshold);  [CE]  '.class'  expected  [FE]          OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  Weight  weightMatrixSqrt  =  squareRoot(((  Weight)data).getWeight(),  covarianceSingularityThreshold);  [BUGGY]    if  (data  instanceof  Weight)  {  weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	Weight  weightMatrixSqrt  =  squareRoot(((  Weight)data).getWeight(),  covarianceSingularityThreshold);	      Weight    weightMatrixSqrt    =    squareRoot(((    Weight)data).getWeight());    	non-compiled	[CE]  '.class'  expected	7	None	replace
2	[BUG]  [BUGGY]  Weight  weightMatrixSqrt  =  getWeightMatrix(data);  [CE]  '.class'  expected  [FE]            OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  Weight  weightMatrixSqrt  =  getWeightMatrix(data);  [BUGGY]    if  (data  instanceof  Weight)  {  weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	Weight  weightMatrixSqrt  =  getWeightMatrix(data);	      Weight    weightMatrixSqrt    =    getWeightMatrix();    	non-compiled	[CE]  '.class'  expected	5	None	replace
3	[BUG]  [BUGGY]  if(optData  instanceof  Weight  ||  data  instanceof  Weight)  {  [CE]  '.class'  expected  [FE]        OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  if(optData  instanceof  Weight  ||  data  instanceof  Weight)  {  [BUGGY]    weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	if(optData  instanceof  Weight  ||  data  instanceof  Weight)  {	  if(data    instanceof    Weight    ||    data    instanceof    Weight)    {    	non-compiled	[CE]  '.class'  expected	1	None	replace
4	[BUG]  [BUGGY]  weightMatrixSqrt  =  squareRoot(((Weight)data).getWeight(),  covarianceSingularityThreshold);  [CE]  '.class'  expected  [FE]        OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  weightMatrixSqrt  =  squareRoot(((Weight)data).getWeight(),  covarianceSingularityThreshold);  [BUGGY]    if  (data  instanceof  Weight)  {  weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	weightMatrixSqrt  =  squareRoot(((Weight)data).getWeight(),  covarianceSingularityThreshold);	      weightMatrixSqrt    =    squareRoot(((Weight)data).getWeight());    	non-compiled	[CE]  '.class'  expected	9	None	replace
5	[BUG]  [BUGGY]  Weight  weightMatrixSqrt  =  data.getWeight()  +  1;  [CE]  '.class'  expected  [FE]        OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  Weight  weightMatrixSqrt  =  data.getWeight()  +  1;  [BUGGY]    if  (data  instanceof  Weight)  {  weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	Weight  weightMatrixSqrt  =  data.getWeight()  +  1;	      Weight    weightMatrixSqrt    =    data.getWeight();    	non-compiled	[CE]  '.class'  expected	3	None	replace
6	[BUG]  [BUGGY]  WeightMatrix  weightMatrixSqrt  =  squareRoot(((  Weight)data).getWeight()  +  1);  [CE]  '.class'  expected  [FE]        OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  WeightMatrix  weightMatrixSqrt  =  squareRoot(((  Weight)data).getWeight()  +  1);  [BUGGY]    if  (data  instanceof  Weight)  {  weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	WeightMatrix  weightMatrixSqrt  =  squareRoot(((  Weight)data).getWeight()  +  1);	      WeightMatrix    weightMatrixSqrt    =    squareRoot(((    Weight)data).getWeight());    	non-compiled	[CE]  '.class'  expected	6	None	replace
7	[BUG]  [BUGGY]  WeightMatrixSqrt  =  squareRoot(((Weight)data).getWeight());  break;  [CE]  '.class'  expected  [FE]          OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  WeightMatrixSqrt  =  squareRoot(((Weight)data).getWeight());  break;  [BUGGY]    weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	WeightMatrixSqrt  =  squareRoot(((Weight)data).getWeight());  break;	      	non-compiled	[CE]  '.class'  expected	2	None	replace
8	[BUG]  [BUGGY]  WeightMatrixSqrt  =  squareRoot(((Weight)data).getWeight());  [CE]  '.class'  expected  [FE]            OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  WeightMatrixSqrt  =  squareRoot(((Weight)data).getWeight());  [BUGGY]    weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	WeightMatrixSqrt  =  squareRoot(((Weight)data).getWeight());	      	non-compiled	[CE]  '.class'  expected	2	None	replace
9	[BUG]  [BUGGY]  RealMatrix  weightMatrixSqrt  =  squareRoot(((Weight)data).getWeight(),  covarianceSingularityThreshold);  [CE]  '.class'  expected  [FE]            OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  RealMatrix  weightMatrixSqrt  =  squareRoot(((Weight)data).getWeight(),  covarianceSingularityThreshold);  [BUGGY]    if  (data  instanceof  Weight)  {  weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	RealMatrix  weightMatrixSqrt  =  squareRoot(((Weight)data).getWeight(),  covarianceSingularityThreshold);	      RealMatrix    weightMatrixSqrt    =    squareRoot(((Weight)data).getWeight());    	non-compiled	[CE]  '.class'  expected	8	None	replace
10	[BUG]  [BUGGY]  WeightMatrix  weightMatrixSqrt  =  squareRoot(((  Weight)data).getWeight(),  covarianceSingularityThreshold);  [CE]  '.class'  expected  [FE]        OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  WeightMatrix  weightMatrixSqrt  =  squareRoot(((  Weight)data).getWeight(),  covarianceSingularityThreshold);  [BUGGY]    if  (data  instanceof  Weight)  {  weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	WeightMatrix  weightMatrixSqrt  =  squareRoot(((  Weight)data).getWeight(),  covarianceSingularityThreshold);	      WeightMatrix    weightMatrixSqrt    =    squareRoot(((    Weight)data).getWeight());    	non-compiled	[CE]  '.class'  expected	6	None	replace
11	[BUG]  [BUGGY]  Weight  weightMatrixSqrt  =  data.getWidth();  [CE]  '.class'  expected  [FE]          OutOfMemoryError    [CONTEXT]    private  void  parseOptimizationData(OptimizationData...  optData)  {    for  (OptimizationData  data  :  optData)  {    [BUGGY]  Weight  weightMatrixSqrt  =  data.getWidth();  [BUGGY]    if  (data  instanceof  Weight)  {  weightMatrixSqrt  =  squareRoot(((Weight)  data).getWeight());    break;  }  }  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  parseOptimizationData  [RETURN_TYPE]  void  optData  [VARIABLES]  OptimizationData[]  optData  OptimizationData  data  boolean  RealMatrix  j  jTj  weightMatrixSqrt  double  cost  covarianceSingularityThreshold  threshold  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java	0.3333333333333333	251	251	1	replace	Weight  weightMatrixSqrt  =  data.getWidth();	      Weight    weightMatrixSqrt    =    data.getHeight();    	non-compiled	[CE]  '.class'  expected	4	None	replace
