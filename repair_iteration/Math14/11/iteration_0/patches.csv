bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    weightMatrix.setEntry(i,  0,  weight[i]);  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]    weightMatrix.setEntry(i,  0,  weight[i]);  [BUGGY]  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	    weightMatrix.setEntry(i,  0,  weight[i]);		non-compiled	[CE]  '.class'  expected	22	None	add
2	[BUG]  [BUGGY]    weightMatrix.setEntry(i,  i,  weight[i]);  [CE]  '.class'  expected  [FE]      OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]    weightMatrix.setEntry(i,  i,  weight[i]);  [BUGGY]  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	    weightMatrix.setEntry(i,  i,  weight[i]);		non-compiled	[CE]  '.class'  expected	22	None	add
3	[BUG]  [BUGGY]    weightMatrix.setEntry(i,  0,  weight[i].getValue());  [CE]  '.class'  expected  [FE]        OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]    weightMatrix.setEntry(i,  0,  weight[i].getValue());  [BUGGY]  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	    weightMatrix.setEntry(i,  0,  weight[i].getValue());		non-compiled	[CE]  '.class'  expected	22	None	add
4	[BUG]  [BUGGY]    weightMatrix  =  MathUtils.createRealMatrix(weight[i],  i);  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]    weightMatrix  =  MathUtils.createRealMatrix(weight[i],  i);  [BUGGY]  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	    weightMatrix  =  MathUtils.createRealMatrix(weight[i],  i);		non-compiled	[CE]  '.class'  expected	22	None	add
5	[BUG]  [BUGGY]    weightMatrix  =  MathUtils.createRealMatrix(weight[i]);  [CE]  '.class'  expected  [FE]      OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]    weightMatrix  =  MathUtils.createRealMatrix(weight[i]);  [BUGGY]  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	    weightMatrix  =  MathUtils.createRealMatrix(weight[i]);		non-compiled	[CE]  '.class'  expected	22	None	add
6	[BUG]  [BUGGY]    weightMatrix  =  MathUtils.createRealMatrix(weight,  i);  [CE]  '.class'  expected  [FE]        OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]    weightMatrix  =  MathUtils.createRealMatrix(weight,  i);  [BUGGY]  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	    weightMatrix  =  MathUtils.createRealMatrix(weight,  i);		non-compiled	[CE]  '.class'  expected	22	None	add
7	[BUG]  [BUGGY]  weightMatrix.setEntry(i,  weight[i],  weight[i]);  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]  weightMatrix.setEntry(i,  weight[i],  weight[i]);  [BUGGY]  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	weightMatrix.setEntry(i,  weight[i],  weight[i]);	weightMatrix.setEntry(i,  i,  weight[i]);  	non-compiled	[CE]  '.class'  expected	21	None	replace
8	[BUG]  [BUGGY]  weightMatrix.setEntry(i,  weight,  weight[i]);  [CE]  '.class'  expected  [FE]      OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]  weightMatrix.setEntry(i,  weight,  weight[i]);  [BUGGY]  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	weightMatrix.setEntry(i,  weight,  weight[i]);	weightMatrix.setEntry(i,  i,  weight[i]);  	non-compiled	[CE]  '.class'  expected	21	None	replace
9	[BUG]  [BUGGY]  weightMatrix.setEntry(0,  i,  weight[i]);  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]  weightMatrix.setEntry(0,  i,  weight[i]);  [BUGGY]  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	weightMatrix.setEntry(0,  i,  weight[i]);	weightMatrix.setEntry(i,  i,  weight[i]);  	non-compiled	[CE]  '.class'  expected	21	None	replace
10	[BUG]  [BUGGY]    Weight[]  weight  =(weight[i]  <  0)?  null  :  weight[i].getMatrix();  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]    Weight[]  weight  =(weight[i]  <  0)?  null  :  weight[i].getMatrix();  [BUGGY]  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	    Weight[]  weight  =(weight[i]  <  0)?  null  :  weight[i].getMatrix();		non-compiled	[CE]  '.class'  expected	22	None	add
11	[BUG]  [BUGGY]    Weight[]  weight  =  getMean();  [CE]  '.class'  expected  [FE]      OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]    Weight[]  weight  =  getMean();  [BUGGY]  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	    Weight[]  weight  =  getMean();		non-compiled	[CE]  '.class'  expected	22	None	add
12	[BUG]  [BUGGY]    Weight[]  weight  =(weight[i]  <  0)?  null  :  weight[i].getValue();  [CE]  '.class'  expected  [FE]        OutOfMemoryError  [CONTEXT]  public  Weight(double[]  weight)  {  final  int  dim  =  weight.length;  weightMatrix  =  org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim,  dim);  for  (int  i  =  0;  i  <  dim;  i++)  {  [BUGGY]    Weight[]  weight  =(weight[i]  <  0)?  null  :  weight[i].getValue();  [BUGGY]  weightMatrix.setEntry(i,  i,  weight[i]);  }  }  [CLASS]  Weight  [METHOD]  <init>  [RETURN_TYPE]  Weight(double[])  double[]  weight  [VARIABLES]  boolean  RealMatrix  weightMatrix  double[]  weight  int  dim  i  	projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java	0.3333333333333333	45	45	1	replace	    Weight[]  weight  =(weight[i]  <  0)?  null  :  weight[i].getValue();		non-compiled	[CE]  '.class'  expected	22	None	add
