projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250WeightweightMatrixSqrt=Math.max(weightMatrixSqrt,optData.length);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250WeightweightMatrixSqrt=Math.min(weightMatrixSqrt,optData.length);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250WeightweightMatrixSqrt=Math.max(weightMatrixSqrt,optData.length));
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250for(OptimizationDatadata:optData){
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250for(OptimizationDatadata:optData.length){
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250for(OptimizationDatadata:optData.data){
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((Weight)optData).getWeight());
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((RealMatrix)optData).getWeight();
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((RealMatrix)optData).getWeight());
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250for(OptimizationDatadata:optData.values()){
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrix<Weight>weightMatrixSqrt=squareRoot(((Weight)optData).getWeight());
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250WeightweightMatrixSqrt=Math.min(weightMatrixSqrt,optData.length));
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250WeightweightMatrixSqrt=Math.max(weightMatrixSqrt,optData.length-1));
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrix<Weight>weightMatrixSqrt=squareRoot(((Weight)optData).getWeight(),weightMatrixSqrt);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((RealMatrix)optData).getWeight()+1;
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((Weight)data).getWeight());
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250WeightweightMatrixSqrt=Math.min(weightMatrixSqrt,optData.length-1);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250for(OptimizationDatadata:optData.getOptimizationData()){
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((RealMatrix)optData).getWeight(),covarianceSingularityThreshold);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250WeightweightMatrixSqrt=Math.max(weightMatrixSqrt,optData.length-1);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrix<Weight>weightMatrixSqrt=squareRoot(((Weight)optData).getWeight(),covarianceSingularityThreshold);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250for(OptimizationDatadata:optData.values){
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((Weight)optData).getWeight(),covarianceSingularityThreshold);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrix<Weight>weightMatrixSqrt=squareRoot(((Weight)optData).getWeight(),weightMatrixSqrt,covarianceSingularityThreshold);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrix<Weight>weightMatrixSqrt=squareRoot(((Weight)optData).getWeight(),cost);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrix<Weight>weightMatrixSqrt=squareRoot(((Weight)optData).getWeight(),threshold);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250WeightweightMatrixSqrt=Math.min(weightMatrixSqrt,optData.length-1));
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250WeightweightMatrixSqrt=Math.min(weightMatrixSqrt,optData.length-2);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((Weight)optData).getWeight(),cost);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((Weight)optData).getWeight(),threshold);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((RealMatrix)optData).getWeight(),cost);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((RealMatrix)optData).getWeight(),threshold);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250for(OptimizationDatadata:optData.getOptimizationData(),weightMatrixSqrt){
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250for(OptimizationDatadata:optData.cloneOptimizationData()){
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250RealMatrixweightMatrixSqrt=squareRoot(((Weight)data).getWeight(),covarianceSingularityThreshold);
projects/Math14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java250for(OptimizationDatadata:this.optData.getOptimizationData()){
