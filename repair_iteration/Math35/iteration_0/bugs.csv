bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] super(chromosomes, populationLimit); [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final List<Chromosome> chromosomes, final int populationLimit, final double elitismRate) { [BUGGY] super(chromosomes, populationLimit); [BUGGY] this.elitismRate = elitismRate; } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] List,int,double)  Chromosome> chromosomes final int populationLimit final double elitismRate [VARIABLES] List chromosomes boolean double elitismRate int populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	50	50	4	replace	
2	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final List<Chromosome> chromosomes, final int populationLimit, final double elitismRate) { [BUGGY] [BUGGY] super(chromosomes, populationLimit); this.elitismRate = elitismRate; } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] List,int,double)  Chromosome> chromosomes final int populationLimit final double elitismRate [VARIABLES] List chromosomes boolean double elitismRate int populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	50	50	4	add	
3	[BUG] [BUGGY] private double elitismRate = 0.9; [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] [BUGGY] private double elitismRate = 0.9; [BUGGY]  [CLASS] ElitisticListPopulation  [VARIABLES] 	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	
4	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] [BUGGY] [BUGGY] private double elitismRate = 0.9; [CLASS] ElitisticListPopulation  [VARIABLES] 	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	
5	[BUG] [BUGGY] this.elitismRate = elitismRate; [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final List<Chromosome> chromosomes, final int populationLimit, final double elitismRate) { super(chromosomes, populationLimit); [BUGGY] this.elitismRate = elitismRate; [BUGGY] } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] List,int,double)  Chromosome> chromosomes final int populationLimit final double elitismRate [VARIABLES] List chromosomes boolean double elitismRate int populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	
6	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final List<Chromosome> chromosomes, final int populationLimit, final double elitismRate) { super(chromosomes, populationLimit); [BUGGY] [BUGGY] this.elitismRate = elitismRate; } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] List,int,double)  Chromosome> chromosomes final int populationLimit final double elitismRate [VARIABLES] List chromosomes boolean double elitismRate int populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	
7	[BUG] [BUGGY] } [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final List<Chromosome> chromosomes, final int populationLimit, final double elitismRate) { super(chromosomes, populationLimit); this.elitismRate = elitismRate; [BUGGY] } [BUGGY]  [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] List,int,double)  Chromosome> chromosomes final int populationLimit final double elitismRate [VARIABLES] List chromosomes boolean double elitismRate int populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	52	52	4	replace	
8	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final List<Chromosome> chromosomes, final int populationLimit, final double elitismRate) { super(chromosomes, populationLimit); this.elitismRate = elitismRate; [BUGGY] [BUGGY] } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] List,int,double)  Chromosome> chromosomes final int populationLimit final double elitismRate [VARIABLES] List chromosomes boolean double elitismRate int populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	52	52	4	add	
9	[BUG] [BUGGY] super(populationLimit); [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final int populationLimit, final double elitismRate) { [BUGGY] super(populationLimit); [BUGGY] this.elitismRate = elitismRate; } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] ElitisticListPopulation(int,double)  final int populationLimit final double elitismRate [VARIABLES] double elitismRate int populationLimit boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	
10	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final int populationLimit, final double elitismRate) { [BUGGY] [BUGGY] super(populationLimit); this.elitismRate = elitismRate; } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] ElitisticListPopulation(int,double)  final int populationLimit final double elitismRate [VARIABLES] double elitismRate int populationLimit boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	
11	[BUG] [BUGGY] private double elitismRate = 0.9; [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] [BUGGY] private double elitismRate = 0.9; [BUGGY]  [CLASS] ElitisticListPopulation  [VARIABLES] 	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	
12	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] [BUGGY] [BUGGY] private double elitismRate = 0.9; [CLASS] ElitisticListPopulation  [VARIABLES] 	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	
13	[BUG] [BUGGY] this.elitismRate = elitismRate; [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final int populationLimit, final double elitismRate) { super(populationLimit); [BUGGY] this.elitismRate = elitismRate; [BUGGY] } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] ElitisticListPopulation(int,double)  final int populationLimit final double elitismRate [VARIABLES] double elitismRate int populationLimit boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	
14	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final int populationLimit, final double elitismRate) { super(populationLimit); [BUGGY] [BUGGY] this.elitismRate = elitismRate; } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] ElitisticListPopulation(int,double)  final int populationLimit final double elitismRate [VARIABLES] double elitismRate int populationLimit boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	
15	[BUG] [BUGGY] } [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final int populationLimit, final double elitismRate) { super(populationLimit); this.elitismRate = elitismRate; [BUGGY] } [BUGGY]  [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] ElitisticListPopulation(int,double)  final int populationLimit final double elitismRate [VARIABLES] double elitismRate int populationLimit boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	
16	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public ElitisticListPopulation(final int populationLimit, final double elitismRate) { super(populationLimit); this.elitismRate = elitismRate; [BUGGY] [BUGGY] } [CLASS] ElitisticListPopulation [METHOD] <init> [RETURN_TYPE] ElitisticListPopulation(int,double)  final int populationLimit final double elitismRate [VARIABLES] double elitismRate int populationLimit boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	add	
17	[BUG] [BUGGY] ElitisticListPopulation nextGeneration = new ElitisticListPopulation(this.getPopulationLimit(), this.getElitismRate()); [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public Population nextGeneration() {  [BUGGY] ElitisticListPopulation nextGeneration = new ElitisticListPopulation(this.getPopulationLimit(), this.getElitismRate()); [BUGGY]  List<Chromosome> oldChromosomes = this.getChromosomes(); Collections.sort(oldChromosomes);  int boundIndex = (int) FastMath.ceil((1.0 - this.getElitismRate()) * oldChromosomes.size()); for (int i=boundIndex; i<oldChromosomes.size(); i++) { nextGeneration.addChromosome(oldChromosomes.get(i)); } return nextGeneration; [CLASS] ElitisticListPopulation [METHOD] nextGeneration [RETURN_TYPE] Population  [VARIABLES] ElitisticListPopulation nextGeneration List oldChromosomes boolean double elitismRate int boundIndex i  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.0	76	76	4	replace	
18	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public Population nextGeneration() {  [BUGGY] [BUGGY] ElitisticListPopulation nextGeneration = new ElitisticListPopulation(this.getPopulationLimit(), this.getElitismRate()); List<Chromosome> oldChromosomes = this.getChromosomes(); Collections.sort(oldChromosomes);  int boundIndex = (int) FastMath.ceil((1.0 - this.getElitismRate()) * oldChromosomes.size()); for (int i=boundIndex; i<oldChromosomes.size(); i++) { nextGeneration.addChromosome(oldChromosomes.get(i)); } return nextGeneration; [CLASS] ElitisticListPopulation [METHOD] nextGeneration [RETURN_TYPE] Population  [VARIABLES] ElitisticListPopulation nextGeneration List oldChromosomes boolean double elitismRate int boundIndex i  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.0	76	76	4	add	
19	[BUG] [BUGGY] List<Chromosome> oldChromosomes = this.getChromosomes(); [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public Population nextGeneration() {  ElitisticListPopulation nextGeneration = new ElitisticListPopulation(this.getPopulationLimit(), this.getElitismRate()); [BUGGY] List<Chromosome> oldChromosomes = this.getChromosomes(); [BUGGY] Collections.sort(oldChromosomes);  int boundIndex = (int) FastMath.ceil((1.0 - this.getElitismRate()) * oldChromosomes.size()); for (int i=boundIndex; i<oldChromosomes.size(); i++) { nextGeneration.addChromosome(oldChromosomes.get(i)); } return nextGeneration; } [CLASS] ElitisticListPopulation [METHOD] nextGeneration [RETURN_TYPE] Population  [VARIABLES] ElitisticListPopulation nextGeneration List oldChromosomes boolean double elitismRate int boundIndex i  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.0	78	78	4	replace	
20	[BUG] [BUGGY] [FE] AssertionError testChromosomeListConstructorTooLow [CONTEXT] public Population nextGeneration() {  ElitisticListPopulation nextGeneration = new ElitisticListPopulation(this.getPopulationLimit(), this.getElitismRate()); [BUGGY] [BUGGY] List<Chromosome> oldChromosomes = this.getChromosomes(); Collections.sort(oldChromosomes);  int boundIndex = (int) FastMath.ceil((1.0 - this.getElitismRate()) * oldChromosomes.size()); for (int i=boundIndex; i<oldChromosomes.size(); i++) { nextGeneration.addChromosome(oldChromosomes.get(i)); } return nextGeneration; } [CLASS] ElitisticListPopulation [METHOD] nextGeneration [RETURN_TYPE] Population  [VARIABLES] ElitisticListPopulation nextGeneration List oldChromosomes boolean double elitismRate int boundIndex i  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.0	78	78	4	add	
