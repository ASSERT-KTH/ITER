bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(1.0));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(1.0));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(1.0));	  elitismRate    =    Math.max(0.0,    Math.abs(1.0));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
2	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0),  false);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0),  false);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(1.0),  false);	  elitismRate    =    Math.max(0.0,    Math.abs(1.0));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
3	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  true);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Validate.notNull(elitismRate,  true);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notNull(elitismRate,  true);	  Validate.notNull(elitismRate,    false);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
4	[BUG]  [BUGGY]  Validate.notEmpty(elitismRate,  false);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Validate.notEmpty(elitismRate,  false);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notEmpty(elitismRate,  false);	  Validate.notNull(elitismRate,    false);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
5	[BUG]  [BUGGY]  Validate.notEmpty(elitismRate,  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Validate.notEmpty(elitismRate,  true);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notEmpty(elitismRate,  true);	  Validate.notNull(elitismRate,    false);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.25;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	private  double  elitismRate  =  0.25;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	22	4	replace
7	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.25;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  0.25;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	22	4	replace
8	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  double  elitismRate  =  1.0d;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  double  elitismRate  =  1.0d;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    double  elitismRate  =  1.0d;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	53	None	add
9	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  double  elitismRate  =  1.0d;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  private  double  elitismRate  =  1.0d;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  double  elitismRate  =  1.0d;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	53	None	add
10	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  double  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	53	None	add
11	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  double  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	53	None	add
12	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  double  elitismRate  =  0.0d;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  private  double  elitismRate  =  0.0d;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  double  elitismRate  =  0.0d;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	53	None	add
13	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    *    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  /  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  /  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  /  DateTimeConstants.MILLIS_PER_SECOND));	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    *    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    iter    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	63	None	replace
16	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    iter    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	63	None	replace
17	[BUG]  [BUGGY]  Validate.notNull(identifier);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Validate.notNull(identifier);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notNull(identifier);	  private    double    elitismRate    =    0.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
18	[BUG]  [BUGGY]  Validate.notEmpty( "elitism ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Validate.notEmpty( "elitism ");  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notEmpty( "elitism ");	  private    double    elitismRate    =    0.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
19	[BUG]  [BUGGY]  Validate.notEmpty( "n ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Validate.notEmpty( "n ");  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notEmpty( "n ");	  private    double    elitismRate    =    0.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
20	[BUG]  [BUGGY]  double  elitismRate  =  getEmptyPopulationCount();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  getEmptyPopulationCount();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  getEmptyPopulationCount();	  int    elitismRate    =    getEmptyPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
21	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyPopulationCount()  -  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getEmptyPopulationCount()  -  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getEmptyPopulationCount()  -  1;	  int    elitismRate    =    getEmptyPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
22	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyPopulationCount()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getEmptyPopulationCount()  +  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getEmptyPopulationCount()  +  1;	  int    elitismRate    =    getEmptyPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
23	[BUG]  [BUGGY]  null  elitismRate  =  10.0;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  null  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	null  elitismRate  =  10.0;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    10.0;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
24	[BUG]  [BUGGY]  elitismRate  =  10.0;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  10.0;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    10.0;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
25	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	70	None	replace
26	[BUG]  [BUGGY]  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	70	None	replace
27	[BUG]  [BUGGY]  private  static  final  InsertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  private  static  final  InsertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  InsertionError  <  AssertionError>  error  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
28	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	replace
29	[BUG]  [BUGGY]  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	replace
30	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(AssertionError.class);  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(AssertionError.class);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(AssertionError.class);	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	replace
31	[BUG]  [BUGGY]  double  elitismRate  =  getPopulationCount()  -  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  getPopulationCount()  -  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  getPopulationCount()  -  1;	  int    elitismRate    =    getPopulationCount()    -    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
32	[BUG]  [BUGGY]  int  elitismRate  =  getBasePopulationCount();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getBasePopulationCount();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getBasePopulationCount();	  int    elitismRate    =    getPopulationCount()    -    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
33	[BUG]  [BUGGY]  null  elitismRate  =  0.0;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  null  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	null  elitismRate  =  0.0;	  private    double    elitismRate    =    1.0;    double    elitismRate    =    0.0;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
34	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	73	None	replace
35	[BUG]  [BUGGY]  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	73	None	replace
36	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(true);  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(true);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(true);	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	73	None	replace
37	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.0;	  private    long    elitismRate    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	88	None	replace
38	[BUG]  [BUGGY]  private  long  elitismRate  =  0.0L;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  long  elitismRate  =  0.0L;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  long  elitismRate  =  0.0L;	  private    long    elitismRate    =    0.0;    	non-compiled	[CE]  ';'  expected	88	None	replace
39	[BUG]  [BUGGY]  private  long  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  long  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  long  elitismRate  =  1.0;	  private    long    elitismRate    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	88	None	replace
40	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1.0));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1.0));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1.0));	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    +    10.0));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
41	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  10.0));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  10.0));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  10.0));	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    +    10.0));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
42	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  0.5));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  0.5));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  0.5));	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    +    10.0));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
43	[BUG]  [BUGGY]  Validate.notEmpty(this.elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Validate.notEmpty(this.elitismRate);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notEmpty(this.elitismRate);	  Validate.notEmpty(elitismRate);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	private  double  elitismRate  =  0.;	  double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	13	4	replace
45	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  0.;	  double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	13	4	replace
46	[BUG]  [BUGGY]  private  final  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	replace
47	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.pow(10,    elitismRate));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
48	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.pow(10,    elitismRate));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
49	[BUG]  [BUGGY]  null  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  null  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	null  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.pow(10,    elitismRate));    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
50	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  1));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  1));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  1));	  elitismRate    =    Math.max(0.0,    Math.abs(elitismRate    +    1));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
51	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError(0);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	59	None	replace
52	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1);	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError(0);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	59	None	replace
53	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError(0);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	59	None	replace
54	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1);	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError(0);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	59	None	replace
55	[BUG]  [BUGGY]  SecurityAssertionError.class.getSimpleName());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  SecurityAssertionError.class.getSimpleName());  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	SecurityAssertionError.class.getSimpleName());	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
56	[BUG]  [BUGGY]  private  double  elitismRate  =  10000.0;  SimpleAssertionError.class.getSimpleName());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  10000.0;  SimpleAssertionError.class.getSimpleName());  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  10000.0;  SimpleAssertionError.class.getSimpleName());	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
57	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  SimpleAssertionError.class.getSimpleName());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.01;  SimpleAssertionError.class.getSimpleName());  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  0.01;  SimpleAssertionError.class.getSimpleName());	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
58	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    this    =    new    AssertionError();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
59	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError(true);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError(true);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError(true);	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    this    =    new    AssertionError();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
60	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	replace
61	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  elitismRate.add(new  AssertionError  <  AssertionError>());  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  AssertionError>  elitismRate.add(new  AssertionError  <  AssertionError>());  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	AssertionError  <  AssertionError>  elitismRate.add(new  AssertionError  <  AssertionError>());	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  ';'  expected	56	None	replace
62	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrator  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrator  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrator  <  AssertionError>();	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	replace
63	[BUG]  [BUGGY]  null  elitismRate  =  1.0;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  null  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	null  elitismRate  =  1.0;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    1.0;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
64	[BUG]  [BUGGY]  elitismRate  =  1.0;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  1.0;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    1.0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
65	[BUG]  [BUGGY]  double  elitismRate  =  0.9;  private  double  elitismRate  =  0.9;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]        [BUGGY]  double  elitismRate  =  0.9;  private  double  elitismRate  =  0.9;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double    elitismRate    =    0.9;    private  double  elitismRate  =  0.9;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
66	[BUG]  [BUGGY]  double  elitismRate  =  0.9;  double  elitismRate  =  0.9;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]        [BUGGY]  double  elitismRate  =  0.9;  double  elitismRate  =  0.9;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double    elitismRate    =    0.9;    double  elitismRate  =  0.9;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
67	[BUG]  [BUGGY]  double  elitismRate  =  0.9;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]        [BUGGY]  double  elitismRate  =  0.9;  double  elitismRate  =  1.0;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double    elitismRate    =    0.9;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
68	[BUG]  [BUGGY]  double  elitismRate  =  0.9;  private  double  elitismRate  =  0.01;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]        [BUGGY]  double  elitismRate  =  0.9;  private  double  elitismRate  =  0.01;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double    elitismRate    =    0.9;    private  double  elitismRate  =  0.01;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  2.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	double  elitismRate  =  2.0;	  private    double    elitismRate    =    2.0;    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	10	4	replace
70	[BUG]  [BUGGY]  double  elitismRate  =  2.0;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  2.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  2.0;	  private    double    elitismRate    =    2.0;    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	10	4	replace
71	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    this    =    new    AssertionError();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
72	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.0,  elitismRate);	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
73	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
74	[BUG]  [BUGGY]  null  elitismRate  =  Math.max(0.0,  elitismRate);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  null  elitismRate  =  Math.max(0.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	null  elitismRate  =  Math.max(0.0,  elitismRate);	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
75	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  elitismRate);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  elitismRate);	  private    double    elitismRate    =    1.0;    elitismRate    =    Math.max(1.0,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
76	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(1.0,  elitismRate);	  private    double    elitismRate    =    1.0;    elitismRate    =    Math.max(1.0,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
77	[BUG]  [BUGGY]  private  int  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);	  private    double    elitismRate    =    1.0;    elitismRate    =    Math.max(1.0,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
78	[BUG]  [BUGGY]  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError(0);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	49	None	replace
79	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    thisError    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	76	None	replace
80	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    thisError    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	76	None	replace
81	[BUG]  [BUGGY]  private  final  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    thisError    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	76	None	replace
82	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRates  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRates  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRates  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	61	None	replace
83	[BUG]  [BUGGY]  long  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [CE]  self-reference  in  initializer  [FE]              AssertionError      [CONTEXT]        [BUGGY]  long  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	long  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));	  long    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	90	None	replace
84	[BUG]  [BUGGY]  short  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]                AssertionError      [CONTEXT]        [BUGGY]  short  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	short  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	  long    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	90	None	replace
85	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    thisError    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	replace
86	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    thisError    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	replace
87	[BUG]  [BUGGY]  Double  elitismRate  =  getPopulationCount()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Double  elitismRate  =  getPopulationCount()  +  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Double  elitismRate  =  getPopulationCount()  +  1;	  Double    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
88	[BUG]  [BUGGY]  Double  elitismRate  =  getPopulationCount()  -  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Double  elitismRate  =  getPopulationCount()  -  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Double  elitismRate  =  getPopulationCount()  -  1;	  Double    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
89	[BUG]  [BUGGY]  Double  elitismRate  =  getEmptyPopulationCount();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Double  elitismRate  =  getEmptyPopulationCount();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Double  elitismRate  =  getEmptyPopulationCount();	  Double    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
90	[BUG]  [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	57	None	replace
91	[BUG]  [BUGGY]  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	74	None	replace
92	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	74	None	replace
93	[BUG]  [BUGGY]  private  final  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	74	None	replace
94	[BUG]  [BUGGY]  long  elitismRate  =  getPopulationCount()  -  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  long  elitismRate  =  getPopulationCount()  -  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	long  elitismRate  =  getPopulationCount()  -  1;	  long    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
95	[BUG]  [BUGGY]  long  elitismRate  =  getPopulationCount()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  long  elitismRate  =  getPopulationCount()  +  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	long  elitismRate  =  getPopulationCount()  +  1;	  long    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
96	[BUG]  [BUGGY]  long  elitismRate  =  getEmptyPopulationCount();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  long  elitismRate  =  getEmptyPopulationCount();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	long  elitismRate  =  getEmptyPopulationCount();	  long    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
97	[BUG]  [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [CE]  self-reference  in  initializer  [FE]              AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));	  double    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	14	None	replace
98	[BUG]  [BUGGY]  double  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]                AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  double    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	14	None	replace
99	[BUG]  [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  self-reference  in  initializer  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));	  double    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	14	None	replace
100	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1));	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    -    1));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
101	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE  +  1));  [CE]  cannot  find  symbol  EXTENDS_PER_SIZE  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE  +  1));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE  +  1));	  int    elitismRate    =    Math.max(1.0,    Math.abs(EXTENDS_PER_SIZE));    	non-compiled	[CE]  cannot  find  symbol  EXTENDS_PER_SIZE	16	None	replace
102	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(SECOND_EXTENDS_PER_SIZE));  [CE]  cannot  find  symbol  SECOND_EXTENDS_PER_SIZE  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(SECOND_EXTENDS_PER_SIZE));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(SECOND_EXTENDS_PER_SIZE));	  int    elitismRate    =    Math.max(1.0,    Math.abs(EXTENDS_PER_SIZE));    	non-compiled	[CE]  cannot  find  symbol  SECOND_EXTENDS_PER_SIZE	16	None	replace
103	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE  +  2));  [CE]  cannot  find  symbol  EXTENDS_PER_SIZE  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE  +  2));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE  +  2));	  int    elitismRate    =    Math.max(1.0,    Math.abs(EXTENDS_PER_SIZE));    	non-compiled	[CE]  cannot  find  symbol  EXTENDS_PER_SIZE	16	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	private  static  double  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	40	4	replace
105	[BUG]  [BUGGY]  private  static  double  elitismRate  =  0.0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  double  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	40	4	replace
106	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  Validate.notEmpty(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0;  Validate.notEmpty(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  1.0;  Validate.notEmpty(elitismRate);	  private    double    elitismRate    =    1.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
107	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  Validate.notEmpty(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  10.0;  Validate.notEmpty(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  10.0;  Validate.notEmpty(elitismRate);	  private    double    elitismRate    =    10.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
108	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1));  [CE]  self-reference  in  initializer  [FE]                AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1));	  int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    +    1));    	non-compiled	[CE]  self-reference  in  initializer	15	None	replace
109	[BUG]  [BUGGY]  double  elitismRate  =  getEmptyColumnCount();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  getEmptyColumnCount();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  getEmptyColumnCount();	  int    elitismRate    =    getEmptyColumnCount();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
110	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyColumnCount()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getEmptyColumnCount()  +  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getEmptyColumnCount()  +  1;	  int    elitismRate    =    getEmptyColumnCount();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
111	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyColumnCount()  -  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getEmptyColumnCount()  -  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getEmptyColumnCount()  -  1;	  int    elitismRate    =    getEmptyColumnCount();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
112	[BUG]  [BUGGY]  Validate.notEmpty(registry);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Validate.notEmpty(registry);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notEmpty(registry);	  Validate.notNull(registry);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
113	[BUG]  [BUGGY]  Validate.notNull(registry,  false);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Validate.notNull(registry,  false);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notNull(registry,  false);	  Validate.notNull(registry);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
114	[BUG]  [BUGGY]  Validate.notNull(registry,  elitismRate);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Validate.notNull(registry,  elitismRate);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notNull(registry,  elitismRate);	  Validate.notNull(registry);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
115	[BUG]  [BUGGY]  double  elitismRate  =  getPopulationCount()  +  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  getPopulationCount()  +  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  getPopulationCount()  +  1;	  double    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
116	[BUG]  [BUGGY]  double  elitismRate  =  getEmptyRange();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  getEmptyRange();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  getEmptyRange();	  int    elitismRate    =    getEmptyRange();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
117	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyRange().doubleValue();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getEmptyRange().doubleValue();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getEmptyRange().doubleValue();	  int    elitismRate    =    getEmptyRange();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
118	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyRange()  +  1;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getEmptyRange()  +  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getEmptyRange()  +  1;	  int    elitismRate    =    getEmptyRange();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
119	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.01;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.01;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    0.01;    private  double  elitismRate  =  0.01;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	21	None	add
120	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.02;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.02;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    0.01;    private  double  elitismRate  =  0.02;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	21	None	add
121	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =0.9;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =0.9;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    0.01;    private  double  elitismRate  =0.9;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	21	None	add
122	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.04;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.04;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    0.01;    private  double  elitismRate  =  0.04;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	21	None	add
123	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.09;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.09;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    0.01;    private  double  elitismRate  =  0.09;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	21	None	add
124	[BUG]  [BUGGY]  null  elitismRate  =  0.5;  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  null  elitismRate  =  0.5;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	null  elitismRate  =  0.5;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    0.5;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
125	[BUG]  [BUGGY]  elitismRate  =  0.5;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  0.5;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  0.5;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    0.5;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
126	[BUG]  [BUGGY]  private  int  elitismRate  =  10.0;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    int    elitismRate    =    10.0;    	non-compiled	[CE]  possible  loss  of  precision	81	None	replace
127	[BUG]  [BUGGY]  int  elitismRate  =  10.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    int    elitismRate    =    10.0;    	non-compiled	[CE]  possible  loss  of  precision	81	None	replace
128	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.5,  elitismRate);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.5,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.5,  elitismRate);	  private    double    elitismRate    =    0.5;    elitismRate    =    Math.max(0.5,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
129	[BUG]  [BUGGY]  null  elitismRate  =  Math.max(0.5,  elitismRate);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  null  elitismRate  =  Math.max(0.5,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	null  elitismRate  =  Math.max(0.5,  elitismRate);	  private    double    elitismRate    =    0.5;    elitismRate    =    Math.max(0.5,    elitismRate);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	private  static  double  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	23	4	replace
131	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  double  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	23	4	replace
132	[BUG]  [BUGGY]  this.elitismRate  =  10.0;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this.elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	this.elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    elitismRate    =    10.0;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  2.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	private  static  double  elitismRate  =  2.0;	  private    double    elitismRate    =    2.0;    private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	8	4	replace
134	[BUG]  [BUGGY]  private  static  double  elitismRate  =  2.0;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  2.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  double  elitismRate  =  2.0;	  private    double    elitismRate    =    2.0;    private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	8	4	replace
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	private  static  double  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    private    double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	34	4	replace
136	[BUG]  [BUGGY]  private  static  double  elitismRate  =  10.0;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  double  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    private    double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	34	4	replace
137	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  10.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    private    double    elitismRate    =    10.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	34	None	replace
138	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.5;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  0.5;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    2.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
139	[BUG]  [BUGGY]  null  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]        [BUGGY]  null  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	null  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
140	[BUG]  [BUGGY]  SimpleAssertionError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  SimpleAssertionError.class.getSimpleName();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	SimpleAssertionError.class.getSimpleName();	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
141	[BUG]  [BUGGY]  AssertionError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  AssertionError.class.getSimpleName();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	AssertionError.class.getSimpleName();	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
142	[BUG]  [BUGGY]  SecurityAssertionError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  SecurityAssertionError.class.getSimpleName();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	SecurityAssertionError.class.getSimpleName();	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
143	[BUG]  [BUGGY]  elitismRate  =  0.0;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  0.0;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    0.0;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
144	[BUG]  [BUGGY]  private  int  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  private    double    elitismRate    =    10.0;    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
145	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  private    double    elitismRate    =    10.0;    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
146	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1));  [CE]  self-reference  in  initializer  [FE]              AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1));	  int    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	71	None	replace
147	[BUG]  [BUGGY]  long  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]                AssertionError      [CONTEXT]        [BUGGY]  long  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	long  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  int    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	71	None	replace
148	[BUG]  [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	70	None	replace
149	[BUG]  [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	70	None	replace
150	[BUG]  [BUGGY]  double  elitismRate  =  0.9;  private  double  elitismRate  =  0.;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]        [BUGGY]  double  elitismRate  =  0.9;  private  double  elitismRate  =  0.;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double    elitismRate    =    0.9;    private  double  elitismRate  =  0.;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	protected  double  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	35	4	replace
152	[BUG]  [BUGGY]  protected  double  elitismRate  =  10.0;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	35	4	replace
153	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	83	None	replace
154	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	83	None	replace
155	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  int  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.0;  int  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.0;  int  elitismRate  =  1.0;	  private    double    elitismRate    =    0.0;    double    elitismRate    =    1.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	44	None	replace
156	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	44	None	replace
157	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.0;  double  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.0;  double  elitismRate  =  1.0;	  private    double    elitismRate    =    0.0;    double    elitismRate    =    1.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	44	None	replace
158	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    10.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
159	[BUG]  [BUGGY]  protected  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    10.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
160	[BUG]  [BUGGY]  private  int  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  10.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    10.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
161	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	52	None	replace
162	[BUG]  [BUGGY]  private  int  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  possible  loss  of  precision	52	None	replace
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	protected  double  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    Validate.notNull(elitismRate);    	compilable	  [FE]  AssertionError  	52	4	replace
164	[BUG]  [BUGGY]  protected  double  elitismRate  =  1.0;  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    Validate.notNull(elitismRate);    	compilable	  [FE]  AssertionError  	52	4	replace
165	[BUG]  [BUGGY]  public  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	replace
166	[BUG]  [BUGGY]  public  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  public  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	replace
167	[BUG]  [BUGGY]  public  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  public  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	replace
168	[BUG]  [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	replace
169	[BUG]  [BUGGY]  private  final  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  private    double    elitismRate    =    10.0;    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
170	[BUG]  [BUGGY]  protected  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  private    double    elitismRate    =    10.0;    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
171	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  2.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  2.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  2.0;	  private    double    elitismRate    =    2.0;    private    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	9	None	replace
172	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1.0));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1.0));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1.0));	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    +    10.0));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
173	[BUG]  [BUGGY]  private  int  elitismRate  =  0.5;  int  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.5;  int  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.5;  int  elitismRate  =  0.0;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    0.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	32	None	replace
174	[BUG]  [BUGGY]  private  int  elitismRate  =  0.5;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.5;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.5;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
175	[BUG]  [BUGGY]  private  int  elitismRate  =  0.5;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.5;  double  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.5;  double  elitismRate  =  0.0;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    0.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	32	None	replace
176	[BUG]  [BUGGY]  public  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    this    =    new    AssertionError();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
177	[BUG]  [BUGGY]  protected  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  protected  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    this    =    new    AssertionError();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
178	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError( " ");  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError( " ");  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError( " ");	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	61	None	replace
179	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
180	[BUG]  [BUGGY]  private  int  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
181	[BUG]  [BUGGY]  private  long  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  long  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  long  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
182	[BUG]  [BUGGY]  private  final  double  elitismRate  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    double    elitismRate    =    10.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	26	None	replace
183	[BUG]  [BUGGY]  private  static  final  long  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  long  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  long  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    double    elitismRate    =    10.0;    	non-compiled	[CE]  possible  loss  of  precision	26	None	replace
184	[BUG]  [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	replace
185	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError().asSertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError().asSertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError().asSertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	replace
186	[BUG]  [BUGGY]  private  final  double  elitismRate  =  2.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  2.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  2.0;	  private    double    elitismRate    =    2.0;    double    elitismRate    =    0.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	89	None	replace
187	[BUG]  [BUGGY]  private  int  elitismRate  =  2.0;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  2.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  2.0;	  private    double    elitismRate    =    2.0;    double    elitismRate    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	89	None	replace
188	[BUG]  [BUGGY]  double  elitismRate  =  getErrorCount();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  getErrorCount();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  getErrorCount();	  double    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
189	[BUG]  [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	67	None	replace
190	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);	  private    double    elitismRate    =    1.0;    elitismRate    =    Math.max(1.0,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
191	[BUG]  [BUGGY]  private  final  double  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);	  private    double    elitismRate    =    1.0;    elitismRate    =    Math.max(1.0,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  0.5;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	private  static  double  elitismRate  =  0.5;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	29	4	replace
193	[BUG]  [BUGGY]  private  static  double  elitismRate  =  0.5;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  0.5;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  double  elitismRate  =  0.5;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	29	4	replace
194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.02;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	add	private  double  elitismRate  =  0.02;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	22	4	replace
195	[BUG]  [BUGGY]  private  double  elitismRate  =  0.02;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.02;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  0.02;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	22	4	replace
196	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    2.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
197	[BUG]  [BUGGY]  protected  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    2.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
198	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1)+  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1)+  1);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1)+  1);	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    +    1));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
199	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.pow(10,    elitismRate));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
200	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.pow(10,    elitismRate));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
201	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.pow(10,    elitismRate));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
202	[BUG]  [BUGGY]  private  static  double  elitismRate  =  10.0;  int  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  double  elitismRate  =  10.0;  int  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  double  elitismRate  =  10.0;  int  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    int    elitismRate    =    10.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	81	None	replace
203	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  int  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.0;  int  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  0.0;  int  elitismRate  =  0.0;	  private    double    elitismRate    =    10.0;    int    elitismRate    =    10.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	81	None	replace
204	[BUG]  [BUGGY]  Validate.notNull(this,  elitism);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Validate.notNull(this,  elitism);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notNull(this,  elitism);	  Validate.notNull(elitism);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
205	[BUG]  [BUGGY]  double  elitismRate  =  Math.max(2.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]              AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  Math.max(2.0,  Math.abs(elitismRate));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  Math.max(2.0,  Math.abs(elitismRate));	  double    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	14	None	replace
206	[BUG]  [BUGGY]  public  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    thisError    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	76	None	replace
207	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  -  1  -  1));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  -  1  -  1));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  -  1  -  1));	  elitismRate    =    Math.max(0.0,    Math.abs(elitismRate    -    1));    	non-compiled	[CE]  <identifier>  expected	87	None	replace
208	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AsSertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AsSertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AsSertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
209	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0)+  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0)+  1);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(1.0)+  1);	  elitismRate    =    Math.max(0.0,    Math.abs(1.0));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
210	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0),  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0),  1);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(1.0),  1);	  elitismRate    =    Math.max(0.0,    Math.abs(1.0));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
211	[BUG]  [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    iter    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	63	None	replace
212	[BUG]  [BUGGY]  public  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	replace
213	[BUG]  [BUGGY]  Double  elitismRate  =  getEnumPopulationCount();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Double  elitismRate  =  getEnumPopulationCount();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Double  elitismRate  =  getEnumPopulationCount();	  Double    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
214	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.03;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.03;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    0.01;    private  double  elitismRate  =  0.03;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	21	None	add
215	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	51	None	replace
216	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  error  =  null;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  error  =  null;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  error  =  null;	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	51	None	replace
217	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	53	None	add
218	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  AssertionError  <  Object>  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  AssertionError  <  Object>  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    AssertionError  <  Object>	  	non-compiled	[CE]  <identifier>  expected	53	None	add
219	[BUG]  [BUGGY]  Validate.notEmpty(elitismRate,  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Validate.notEmpty(elitismRate,  1);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	Validate.notEmpty(elitismRate,  1);	  Validate.notEmpty(elitismRate);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
220	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(SEMI_PER_SIZE));  [CE]  cannot  find  symbol  SEMI_PER_SIZE  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(SEMI_PER_SIZE));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(SEMI_PER_SIZE));	  int    elitismRate    =    Math.max(1.0,    Math.abs(EXTENDS_PER_SIZE));    	non-compiled	[CE]  cannot  find  symbol  SEMI_PER_SIZE	16	None	replace
221	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EMPTY_SIZE));  [CE]  cannot  find  symbol  EMPTY_SIZE  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EMPTY_SIZE));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EMPTY_SIZE));	  int    elitismRate    =    Math.max(1.0,    Math.abs(EXTENDS_PER_SIZE));    	non-compiled	[CE]  cannot  find  symbol  EMPTY_SIZE	16	None	replace
222	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1)+  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1)+  1);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1)+  1);	  elitismRate    =    Math.max(0.0,    Math.abs(elitismRate    +    1));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
223	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyRangeColumnCount();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getEmptyRangeColumnCount();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getEmptyRangeColumnCount();	  int    elitismRate    =    getEmptyColumnCount();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
224	[BUG]  [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    thisError    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	replace
225	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.5;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  0.5;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  0.5;	  private    double    elitismRate    =    0.5;    double    elitismRate    =    10.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	31	None	replace
226	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
227	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
228	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    this    =    new    AssertionError();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
229	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
230	[BUG]  [BUGGY]  private  static  final  long  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  static  final  long  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  long  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
231	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  SimpleAssertionError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  2.0;  SimpleAssertionError.class.getSimpleName();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  2.0;  SimpleAssertionError.class.getSimpleName();	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
232	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError(0);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	69	None	replace
233	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);	  private    double    elitismRate    =    0.5;    elitismRate    =    Math.max(0.5,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
234	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);	  private    double    elitismRate    =    0.5;    elitismRate    =    Math.max(0.5,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
235	[BUG]  [BUGGY]  private  int  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);	  private    double    elitismRate    =    0.5;    elitismRate    =    Math.max(0.5,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
236	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  elitismRate  =  Math.max(1.0,  elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.5;  elitismRate  =  Math.max(1.0,  elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  0.5;  elitismRate  =  Math.max(1.0,  elitismRate);	  private    double    elitismRate    =    0.5;    elitismRate    =    Math.max(0.5,    elitismRate);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
237	[BUG]  [BUGGY]  int  elitismRate  =  getPopulationCount()  *  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getPopulationCount()  *  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getPopulationCount()  *  1;	  int    elitismRate    =    getPopulationCount()    -    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
238	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  int  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.0;  int  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.0;  int  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    double    elitismRate    =    0.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	41	None	replace
239	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.0;  double  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.0;  double  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    double    elitismRate    =    0.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	41	None	replace
240	[BUG]  [BUGGY]  private  int  elitismRate  =  1.0;  int  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  1.0;  int  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  1.0;  int  elitismRate  =  0.0;	  private    double    elitismRate    =    1.0;    double    elitismRate    =    0.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	92	None	replace
241	[BUG]  [BUGGY]  int  elitismRate  =  getEmptySegmentCount();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getEmptySegmentCount();  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getEmptySegmentCount();	  int    elitismRate    =    getEmptyPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
242	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    0.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
243	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    0.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
244	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    0.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
245	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND)+  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND)+  1);  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND)+  1);	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    *    DateTimeConstants.MILLIS_PER_SECOND));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
246	[BUG]  [BUGGY]  public  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	73	None	replace
247	[BUG]  [BUGGY]  protected  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    this    =    new    AssertionError();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
248	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    this    =    new    AssertionError();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
249	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    0.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
250	[BUG]  [BUGGY]  private  int  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;	  private    double    elitismRate    =    2.0;    private    double    elitismRate    =    0.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	11	None	replace
251	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;	  private    double    elitismRate    =    2.0;    private    double    elitismRate    =    0.0;    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	11	None	replace
252	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	44	None	replace
253	[BUG]  [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	67	None	replace
254	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	53	None	add
255	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	53	None	add
256	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0d;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private    double    elitismRate    =    1.0d;    elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	53	None	add
257	[BUG]  [BUGGY]  private  final  double  elitismRate  =  10.0;  public  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  10.0;  public  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  10.0;  public  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	replace
258	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrator  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrator  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrator  <  AssertionError>();	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	replace
259	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError( " "));  [CE]  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError( " "));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError( " "));	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  	57	None	replace
260	[BUG]  [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	61	None	replace
261	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	61	None	replace
262	[BUG]  [BUGGY]  private  final  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	51	None	replace
263	[BUG]  [BUGGY]  double  elitismRate  =  0.9;  private  double  elitismRate  =  2.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]        [BUGGY]  double  elitismRate  =  0.9;  private  double  elitismRate  =  2.0;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double    elitismRate    =    0.9;    private  double  elitismRate  =  2.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
264	[BUG]  [BUGGY]  private  final  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError    <    AssertionError>();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	replace
265	[BUG]  [BUGGY]  private  int  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  2.0;  Validate.notNull(elitismRate);	  private    double    elitismRate    =    2.0;    Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
266	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(SXTENDS_PER_SIZE));  [CE]  cannot  find  symbol  SXTENDS_PER_SIZE  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(SXTENDS_PER_SIZE));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(SXTENDS_PER_SIZE));	  int    elitismRate    =    Math.max(1.0,    Math.abs(EXTENDS_PER_SIZE));    	non-compiled	[CE]  cannot  find  symbol  SXTENDS_PER_SIZE	16	None	replace
267	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(SIZE));  [CE]  cannot  find  symbol  SIZE  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(SIZE));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(SIZE));	  int    elitismRate    =    Math.max(1.0,    Math.abs(EXTENDS_PER_SIZE));    	non-compiled	[CE]  cannot  find  symbol  SIZE	16	None	replace
268	[BUG]  [BUGGY]  private  final  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    2.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	73	None	replace
269	[BUG]  [BUGGY]  int  elitismRate  =  getPopulationCount()  +  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        [BUGGY]  int  elitismRate  =  getPopulationCount()  +  1;  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	int  elitismRate  =  getPopulationCount()  +  1;	  int    elitismRate    =    getPopulationCount()    -    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
270	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	replace
271	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  /  2.0));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  /  2.0));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  /  2.0));	  elitismRate    =    Math.max(1.0,    Math.abs(elitismRate    +    10.0));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
272	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  final  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  final  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    error    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	70	None	replace
273	[BUG]  [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  private    double    elitismRate    =    0.5;    private    static    final    AssertionError    <    AssertionError>    thisError    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	replace
274	[BUG]  [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(2);  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(2);  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(2);	  private    double    elitismRate    =    10.0;    private    static    final    AssertionError    {    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError(0);    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	59	None	replace
275	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  1.0d;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  elitismRate  =  1.0d;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  static  final  double  elitismRate  =  1.0d;	  private    double    elitismRate    =    1.0;    private    double    elitismRate    =    1.0d;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	27	None	replace
276	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  private    double    elitismRate    =    1.0;    private    static    final    AssertionError    <    AssertionError>    elitismRate    =    new    AssertionError();    	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	replace
277	[BUG]  [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	public  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  private    double    elitismRate    =    0.0;    private    static    final    AssertionError    <    AssertionError>    this    =    new    AssertionError();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
278	[BUG]  [BUGGY]  protected  double  elitismRate  =  10.0;  elitismRate  =  10.0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  protected  double  elitismRate  =  10.0;  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	protected  double  elitismRate  =  10.0;  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    elitismRate    =    10.0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
279	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  elitismRate  =  1.0;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  1.0;  elitismRate  =  1.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  1.0;  elitismRate  =  1.0;	  private    double    elitismRate    =    10.0;    elitismRate    =    10.0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
280	[BUG]  [BUGGY]  private  int  elitismRate  =  10.0;  elitismRate  =  10.0;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  10.0;  elitismRate  =  10.0;  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  10.0;  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    elitismRate    =    10.0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
281	[BUG]  [BUGGY]  char  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]              AssertionError      [CONTEXT]        [BUGGY]  char  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	char  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  int    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	71	None	replace
282	[BUG]  [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1));  [CE]  self-reference  in  initializer  [FE]              AssertionError      [CONTEXT]        [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1));  [BUGGY]      private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1));	  double    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	14	None	replace
283	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  private  int  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  int  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	83	None	replace
284	[BUG]  [BUGGY]  if(elitismRate  >  0.0)  {  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]        [BUGGY]  if(elitismRate  >  0.0)  {  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  }  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	if(elitismRate  >  0.0)  {  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  }	  private    double    elitismRate    =    0.0;    elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
285	[BUG]  [BUGGY]  null  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  null  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	null  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
286	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  SimpleAssertionError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  private  double  elitismRate  =  0.01;  SimpleAssertionError.class.getSimpleName();  [BUGGY]        [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	36	36	4	replace	private  double  elitismRate  =  0.01;  SimpleAssertionError.class.getSimpleName();	  private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
