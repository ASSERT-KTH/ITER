bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.001L;	  private    double    elitismRate    =    0.001;    	non-compiled	[CE]  ';'  expected	55	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.0001;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
3	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0001;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0001;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.002;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.002;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
5	[BUG]  [BUGGY]  private  double  elitismRate  =  0.002;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.002;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.002;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.003;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.003;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
7	[BUG]  [BUGGY]  private  double  elitismRate  =  0.003;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.003;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.003;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
9	[BUG]  [BUGGY]  private  double  elitismRate  =  1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.005;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.005;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
11	[BUG]  [BUGGY]  private  double  elitismRate  =  0.005;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.005;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.005;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
12	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0001L;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0001L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0001L;	  private    double    elitismRate    =    0.001;    	non-compiled	[CE]  ';'  expected	55	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.004;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.004;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
14	[BUG]  [BUGGY]  private  double  elitismRate  =  0.004;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.004;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.004;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0002;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.0002;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
16	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0002;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0002;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0002;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.02;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.02;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
18	[BUG]  [BUGGY]  private  double  elitismRate  =  0.02;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.02;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.02;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
19	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
20	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	56	None	add
21	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	56	None	add
22	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	56	None	add
23	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  double  elitismRate  =  0.6;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  double  elitismRate  =  0.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  double  elitismRate  =  0.6;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	56	None	add
24	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	56	None	add
25	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
26	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
27	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
28	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
29	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
30	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
31	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
32	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	56	None	add
33	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	56	None	add
34	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
35	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
36	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
37	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
38	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
39	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
40	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
41	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
42	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
43	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
44	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
45	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
46	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
47	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
48	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
49	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  double  elitismRate  =  100;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  double  elitismRate  =  100;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  double  elitismRate  =  100;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	52	None	add
50	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  double  elitismRate  =  100;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  double  elitismRate  =  100;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    double  elitismRate  =  100;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	52	None	add
51	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
52	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());	  	non-compiled	[CE]  <identifier>  expected	52	None	add
53	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
54	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
55	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
56	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
57	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
58	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  double  elitismRate  =  1000;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    double  elitismRate  =  1000;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	52	None	add
59	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
60	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
61	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
62	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	52	None	add
63	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
64	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  double  elitismRate  =  1000;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  double  elitismRate  =  1000;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	52	None	add
65	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
66	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
67	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  return  elitismRate;  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  return  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  return  elitismRate;	  	non-compiled	[CE]  <identifier>  expected	52	None	add
68	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(10,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(10,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(10,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	52	None	add
69	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
70	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
71	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	52	None	add
72	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
73	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError  <  E>();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError  <  E>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError  <  E>();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
74	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  this.elitismRate  =  elitismRate;  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  this.elitismRate  =  elitismRate;	  	non-compiled	[CE]  <identifier>  expected	52	None	add
75	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.EXTENDS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.EXTENDS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.EXTENDS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
76	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_MINUTE);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_MINUTE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_MINUTE);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
77	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
78	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_SECOND);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_SECOND);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
79	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
80	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  double  elitismRate  =  0.001;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  double  elitismRate  =  0.001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    double  elitismRate  =  0.001;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
81	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
82	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
83	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
84	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
85	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
86	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
87	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	54	None	add
88	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
89	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
90	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
91	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  double  elitismRate  =  0.001;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  double  elitismRate  =  0.001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  double  elitismRate  =  0.001;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
92	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
93	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
94	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
95	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  0.001);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  0.001);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  0.001);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
96	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	54	None	add
97	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
98	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
99	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
100	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
101	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	54	None	add
102	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
103	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
104	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
105	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
106	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
107	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
108	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  0.0);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  0.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  1.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
110	[BUG]  [BUGGY]  protected  double  elitismRate  =  1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  1.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  2.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
112	[BUG]  [BUGGY]  protected  double  elitismRate  =  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  2.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
114	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  10.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
116	[BUG]  [BUGGY]  protected  double  elitismRate  =  10.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  10.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
117	[BUG]  [BUGGY]  final  protected  double  elitismRate  =  0.9;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]            AssertionError    [CONTEXT]      [BUGGY]  final  protected  double  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	final  protected  double  elitismRate  =  0.9;	  protected    double    elitismRate    =    0.9;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	69	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.5;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
119	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.5;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.5;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.01;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
121	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.01;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.01;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  20.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
123	[BUG]  [BUGGY]  protected  double  elitismRate  =  20.0;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  20.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  1.5;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
125	[BUG]  [BUGGY]  protected  double  elitismRate  =  1.5;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  1.5;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0.9;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
127	[BUG]  [BUGGY]  public  double  elitismRate  =  0.9;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0.9;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  3.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  3.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
129	[BUG]  [BUGGY]  protected  double  elitismRate  =  3.0;  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  3.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  3.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.2;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
131	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.2;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.2;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.25;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
133	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.25;  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.25;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
134	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  1000;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
135	[BUG]  [BUGGY]  protected  double  elitismRate  =  1000;  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  1000;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.1;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
137	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.1;  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.1;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  100.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
139	[BUG]  [BUGGY]  protected  double  elitismRate  =  100.0;  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  100.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.7;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
141	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.7;  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.7;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
142	[BUG]  [BUGGY]  protected  int  elitismRate  =  0.9;  [CE]  possible  loss  of  precision  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  protected  int  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  int  elitismRate  =  0.9;	  protected    double    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
143	[BUG]  [BUGGY]  protected  long  elitismRate  =  0.9;  [CE]  possible  loss  of  precision  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  protected  long  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  long  elitismRate  =  0.9;	  protected    double    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  5.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  5.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
145	[BUG]  [BUGGY]  protected  double  elitismRate  =  5.0;  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  5.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  5.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  1.0d;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
147	[BUG]  [BUGGY]  protected  double  elitismRate  =  1.0d;  [FE]  AssertionError  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  1.0d;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
148	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
149	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
150	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
151	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
152	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
153	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
154	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
155	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
156	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
157	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
158	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
159	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
160	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	72	None	add
161	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  System.arraycopy(elitism,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  System.arraycopy(elitism,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    System.arraycopy(elitism,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
162	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
163	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
164	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
165	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
166	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	72	None	add
167	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
168	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
169	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  null;  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  null;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  null;	  	non-compiled	[CE]  <identifier>  expected	72	None	add
170	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
171	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
172	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
173	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.NaN);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.NaN);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.NaN);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
174	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
175	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
176	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
177	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1000L;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
179	[BUG]  [BUGGY]  private  double  elitismRate  =  1000L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1000L;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  10000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
181	[BUG]  [BUGGY]  private  double  elitismRate  =  10000;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  500;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  500;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
183	[BUG]  [BUGGY]  private  double  elitismRate  =  500;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  500;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  500;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1000000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
185	[BUG]  [BUGGY]  private  double  elitismRate  =  1000000;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1000000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  2000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
187	[BUG]  [BUGGY]  private  double  elitismRate  =  2000;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  2000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
188	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  2;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
189	[BUG]  [BUGGY]  private  double  elitismRate  =  2;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  2;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  100000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
191	[BUG]  [BUGGY]  private  double  elitismRate  =  100000;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  100000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  3000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
193	[BUG]  [BUGGY]  private  double  elitismRate  =  3000;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  3000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1000l;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
195	[BUG]  [BUGGY]  private  double  elitismRate  =  1000l;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1000l;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
196	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  4;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  4;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
197	[BUG]  [BUGGY]  private  double  elitismRate  =  4;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  4;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  4;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
198	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  200;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  200;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
199	[BUG]  [BUGGY]  private  double  elitismRate  =  200;  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  200;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  200;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
200	[BUG]  [BUGGY]  private  long  elitismRate  =  1000L;  [CE]  possible  loss  of  precision  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  1000L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  1000L;	  private    double    elitismRate    =    1000;    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000000L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1000000L;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
202	[BUG]  [BUGGY]  private  double  elitismRate  =  1000000L;  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000000L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1000000L;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  5;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
204	[BUG]  [BUGGY]  private  double  elitismRate  =  5;  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  5;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  10001;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
206	[BUG]  [BUGGY]  private  double  elitismRate  =  10001;  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10001;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  3;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
208	[BUG]  [BUGGY]  private  double  elitismRate  =  3;  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  3;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  12000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  12000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
210	[BUG]  [BUGGY]  private  double  elitismRate  =  12000;  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  12000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  12000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  400;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  400;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
212	[BUG]  [BUGGY]  private  double  elitismRate  =  400;  [FE]  AssertionError  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  400;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  400;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
213	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10002;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  10002;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
214	[BUG]  [BUGGY]  private  double  elitismRate  =  10002;  [FE]  AssertionError  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10002;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10002;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  9000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  9000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
216	[BUG]  [BUGGY]  private  double  elitismRate  =  9000;  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  9000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  9000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
217	[BUG]  [BUGGY]  private  int  elitismRate  =  1000;  [CE]  possible  loss  of  precision  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  1000;	  private    double    elitismRate    =    1000;    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
218	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1000  +  1;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
219	[BUG]  [BUGGY]  private  double  elitismRate  =  1000  +  1;  [FE]  AssertionError  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1000  +  1;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
220	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0L;	  private    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	7	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.0f;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
222	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0f;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  Double.POSITIVE_INFINITY;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
224	[BUG]  [BUGGY]  private  double  elitismRate  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  Double.POSITIVE_INFINITY;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
225	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0l;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0l;	  private    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	7	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.0F;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
227	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0F;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0F;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0D;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.0D;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
229	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0D;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0D;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0D;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
230	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0s;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0s;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0s;	  private    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	7	None	replace
231	[BUG]  [BUGGY]  private  long  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  4.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  4.0;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
233	[BUG]  [BUGGY]  private  double  elitismRate  =  4.0;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  4.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  4.0;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
234	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
235	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
236	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
237	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
238	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
239	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
240	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
241	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	46	None	add
242	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
243	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	46	None	add
244	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
245	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	46	None	add
246	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
247	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
248	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  double  elitismRate  =  30.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  double  elitismRate  =  30.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  double  elitismRate  =  30.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	46	None	add
249	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
250	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
251	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  double  elitismRate  =  30.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  double  elitismRate  =  30.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    double  elitismRate  =  30.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	46	None	add
252	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
253	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
254	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
255	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	46	None	add
256	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
257	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
258	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
259	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	46	None	add
260	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(10.0);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(10.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(10.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
261	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EMPTY);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EMPTY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EMPTY);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
262	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
263	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
264	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0L;	  private    double    elitismRate    =    0.0;    	non-compiled	[CE]  ';'  expected	11	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.0d;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
266	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0d;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
267	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.0f;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
268	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0f;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0f;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
269	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  Double.NaN;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
270	[BUG]  [BUGGY]  private  double  elitismRate  =  Double.NaN;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  Double.NaN;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
271	[BUG]  [BUGGY]  private  int  elitismRate  =  0.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
272	[BUG]  [BUGGY]  private  long  elitismRate  =  0.0;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.0F;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
274	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0F;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0F;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
275	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0l;  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0l;	  private    double    elitismRate    =    0.0;    	non-compiled	[CE]  ';'  expected	11	None	replace
276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.0  +  1;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
277	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0  +  1;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0  +  1;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
279	[BUG]  [BUGGY]  public  double  elitismRate  =  0.0;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  40.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  40.0;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
281	[BUG]  [BUGGY]  private  double  elitismRate  =  40.0;  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  40.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  40.0;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
282	[BUG]  [BUGGY]  private  double  elitismRate  =(double)0.0);  [CE]  ';'  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =(double)0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =(double)0.0);	  private    double    elitismRate    =    0.0;    	non-compiled	[CE]  ';'  expected	11	None	replace
283	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
284	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  double  elitismRate  =  1.0d;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    double  elitismRate  =  1.0d;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	50	None	add
285	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
286	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  double  elitismRate  =  1.0d;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  double  elitismRate  =  1.0d;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	50	None	add
287	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
288	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
289	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
290	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d,  1.0d);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d,  1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d,  1.0d);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
291	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
292	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
293	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
294	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
295	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
296	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
297	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
298	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
299	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
300	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d,  1);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d,  1);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
301	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d,  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
302	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
303	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
304	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0d);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0d);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
305	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
306	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  }  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  }	  	non-compiled	[CE]  <identifier>  expected	50	None	add
307	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
308	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
309	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
310	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
311	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError  <  K,  V>();  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError  <  K,  V>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError  <  K,  V>();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
312	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
313	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  2.0L;	  private    double    elitismRate    =    2.0;    	non-compiled	[CE]  ';'  expected	9	None	replace
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  2.0d;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
315	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0d;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  2.0d;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
316	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.MIN_VALUE;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  Double.MIN_VALUE;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
317	[BUG]  [BUGGY]  private  double  elitismRate  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.MIN_VALUE;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  Double.MIN_VALUE;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
318	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  2.0f;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
319	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0f;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  2.0f;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  -1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  -1;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
321	[BUG]  [BUGGY]  private  double  elitismRate  =  -1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  -1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  -1;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  7.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  7.0;	  private    double    elitismRate    =    0.8;    	compilable	  [FE]  AssertionError  	45	4	replace
323	[BUG]  [BUGGY]  private  double  elitismRate  =  7.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  7.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  7.0;	  private    double    elitismRate    =    0.8;    	compilable	  [FE]  AssertionError  	45	4	replace
324	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
325	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
326	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
327	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
328	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
329	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	32	None	add
330	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
331	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  double  elitismRate  =  0.2;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  double  elitismRate  =  0.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  double  elitismRate  =  0.2;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	32	None	add
332	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
333	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	32	None	add
334	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
335	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
336	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
337	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	32	None	add
338	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
339	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
340	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
341	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
342	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
343	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	32	None	add
344	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
345	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
346	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
347	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
348	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	32	None	add
349	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
350	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
351	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
352	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
353	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	32	None	add
354	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
355	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  double  elitismRate  =  100.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  double  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    double  elitismRate  =  100.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	40	None	add
356	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  double  elitismRate  =  100.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  double  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  double  elitismRate  =  100.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	40	None	add
357	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
358	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
359	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
360	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
361	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
362	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
363	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
364	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
365	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	40	None	add
366	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  System.arraycopy(elitismRate,  0,  elitismRate,  100.0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  System.arraycopy(elitismRate,  0,  elitismRate,  100.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    System.arraycopy(elitismRate,  0,  elitismRate,  100.0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
367	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  assertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  assertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    assertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
368	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
369	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  System.arraycopy(elitismRate,  0,  elitismRate,  1);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  System.arraycopy(elitismRate,  0,  elitismRate,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    System.arraycopy(elitismRate,  0,  elitismRate,  1);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
370	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
371	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
372	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
373	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
374	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
375	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
376	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
377	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
378	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	40	None	add
379	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  100.0);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  100.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  100.0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
380	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
381	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
382	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
383	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(size());  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(size());  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(size());	  	non-compiled	[CE]  <identifier>  expected	40	None	add
384	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0L;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
385	[BUG]  [BUGGY]  private  double  elitismRate  =  0L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0L;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
386	[BUG]  [BUGGY]  private  long  elitismRate  =  0L;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0L;	  private    double    elitismRate    =    0;    	non-compiled	[CE]  possible  loss  of  precision	59	None	replace
387	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.NEGATIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  Double.NEGATIVE_INFINITY;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
388	[BUG]  [BUGGY]  private  double  elitismRate  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.NEGATIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  Double.NEGATIVE_INFINITY;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
389	[BUG]  [BUGGY]  private  int  elitismRate  =  0;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0;	  private    double    elitismRate    =    0;    	non-compiled	[CE]  possible  loss  of  precision	59	None	replace
390	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  10;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
391	[BUG]  [BUGGY]  private  double  elitismRate  =  10;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
392	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0l;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
393	[BUG]  [BUGGY]  private  double  elitismRate  =  0l;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0l;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
394	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  0;	  private    double    elitismRate    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	59	None	replace
395	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  9;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
396	[BUG]  [BUGGY]  private  double  elitismRate  =  9;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  9;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
397	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  7;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
398	[BUG]  [BUGGY]  private  double  elitismRate  =  7;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  7;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
399	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
400	[BUG]  [BUGGY]  public  double  elitismRate  =  0;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
401	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
402	[BUG]  [BUGGY]  protected  double  elitismRate  =  0;  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
403	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  8;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  8;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
404	[BUG]  [BUGGY]  private  double  elitismRate  =  8;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  8;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  8;	  private    double    elitismRate    =    0;    	compilable	  [FE]  AssertionError  	59	4	replace
405	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
406	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	44	None	add
407	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
408	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
409	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
410	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	44	None	add
411	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
412	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
413	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
414	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
415	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
416	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
417	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	44	None	add
418	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
419	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
420	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
421	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
422	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
423	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	44	None	add
424	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
425	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
426	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
427	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
428	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
429	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
430	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  double  elitismRate  =  0.8;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  double  elitismRate  =  0.8;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  double  elitismRate  =  0.8;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	44	None	add
431	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError  <  E>();  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError  <  E>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError  <  E>();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
432	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  }  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  }	  	non-compiled	[CE]  <identifier>  expected	44	None	add
433	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
434	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
435	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.;	  private    double    elitismRate    =    0.;    	compilable	  [FE]  AssertionError  	61	4	replace
436	[BUG]  [BUGGY]  private  double  elitismRate  =  1.;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.;	  private    double    elitismRate    =    0.;    	compilable	  [FE]  AssertionError  	61	4	replace
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.95;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.95;	  private    double    elitismRate    =    0.;    	compilable	  [FE]  AssertionError  	61	4	replace
438	[BUG]  [BUGGY]  private  double  elitismRate  =  0.95;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.95;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.95;	  private    double    elitismRate    =    0.;    	compilable	  [FE]  AssertionError  	61	4	replace
439	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
440	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
441	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  HashSet  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  HashSet  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  new  HashSet  <  AssertionError>();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
442	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
443	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	74	None	add
444	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  values().iterator().next();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  values().iterator().next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  values().iterator().next();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
445	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  elitismRate  =  Double.parseDouble(1.0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  elitismRate  =  Double.parseDouble(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    elitismRate  =  Double.parseDouble(1.0);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
446	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_MINUTE);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
447	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTENDS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTENDS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTENDS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
448	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNAL_ERROR);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNAL_ERROR);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNAL_ERROR);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
449	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
450	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Integer  elitismRate  =  Double.parseDouble( "AssertionError ".doubleValue());  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Integer  elitismRate  =  Double.parseDouble( "AssertionError ".doubleValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Integer  elitismRate  =  Double.parseDouble( "AssertionError ".doubleValue());	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
451	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
452	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_WEEK);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
453	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_MINUTE);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_MINUTE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_MINUTE);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
454	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNAL_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNAL_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNAL_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
455	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  HashSet  <  AssertionError>().iterator();  [CE]  cannot  find  symbol  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  HashSet  <  AssertionError>().iterator();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  new  HashSet  <  AssertionError>().iterator();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
456	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.HOUR_OF_DAY);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.HOUR_OF_DAY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.HOUR_OF_DAY);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
457	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXPR_SECOND);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXPR_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXPR_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
458	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNAL_SECOND);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNAL_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_EXTERNAL_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
459	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.HOUR_OF_MONTH);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.HOUR_OF_MONTH);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.HOUR_OF_MONTH);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
460	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Double  elitismRate  =  Double.parseDouble(1.0);  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Double  elitismRate  =  Double.parseDouble(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Double  elitismRate  =  Double.parseDouble(1.0);	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
461	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  HashMap  <  AssertionError,  Integer>();  [CE]  cannot  find  symbol  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  HashMap  <  AssertionError,  Integer>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  new  HashMap  <  AssertionError,  Integer>();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
462	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_WEEK);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_WEEK);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_WEEK);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
463	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  getPopulation().iterator().next().iterator().next();  [CE]  cannot  find  symbol  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  getPopulation().iterator().next().iterator().next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  getPopulation().iterator().next().iterator().next();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
464	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_SECOND);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
465	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.WEEK_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.WEEK_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.WEEK_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
466	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  {  this.elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.DEFAULT_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
467	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  HashSet  <  AssertionError>().iterator().next();  [CE]  cannot  find  symbol  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  HashSet  <  AssertionError>().iterator().next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  new  HashSet  <  AssertionError>().iterator().next();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
468	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  double  elitismRate  =  Double.parseDouble(1.0);  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  double  elitismRate  =  Double.parseDouble(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    double  elitismRate  =  Double.parseDouble(1.0);	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
469	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
470	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
471	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
472	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
473	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
474	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
475	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
476	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
477	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
478	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	24	None	add
479	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
480	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  double  elitismRate  =  20.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  double  elitismRate  =  20.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	24	None	add
481	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	24	None	add
482	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
483	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
484	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
485	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
486	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
487	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
488	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
489	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
490	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
491	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
492	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	24	None	add
493	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
494	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  double  elitismRate  =  20.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    double  elitismRate  =  20.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	24	None	add
495	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
496	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
497	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
498	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
499	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
500	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
501	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
502	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
503	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
504	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	48	None	add
505	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
506	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	48	None	add
507	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
508	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
509	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	48	None	add
510	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	48	None	add
511	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
512	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
513	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
514	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
515	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
516	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
517	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
518	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
519	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
520	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
521	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate;  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate;  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate;  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
522	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
523	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
524	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
525	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
526	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
527	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  double  elitismRate  =  0.3;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  double  elitismRate  =  0.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  double  elitismRate  =  0.3;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	48	None	add
528	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  -  1);  elitismRate  >  0;  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
529	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.5d;	  private    double    elitismRate    =    1.0d;    	compilable	  [FE]  AssertionError  	51	4	replace
530	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.5d;	  private    double    elitismRate    =    1.0d;    	compilable	  [FE]  AssertionError  	51	4	replace
531	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.0d  +  10.0;	  private    double    elitismRate    =    1.0d;    	compilable	  [FE]  AssertionError  	51	4	replace
532	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d  +  10.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0d  +  10.0;	  private    double    elitismRate    =    1.0d;    	compilable	  [FE]  AssertionError  	51	4	replace
533	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.0d  +  1;	  private    double    elitismRate    =    1.0d;    	compilable	  [FE]  AssertionError  	51	4	replace
534	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0d  +  1;	  private    double    elitismRate    =    1.0d;    	compilable	  [FE]  AssertionError  	51	4	replace
535	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d  /  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.0d  /  2.0;	  private    double    elitismRate    =    1.0d;    	compilable	  [FE]  AssertionError  	51	4	replace
536	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d  /  2.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d  /  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0d  /  2.0;	  private    double    elitismRate    =    1.0d;    	compilable	  [FE]  AssertionError  	51	4	replace
537	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.9;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.9;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
538	[BUG]  [BUGGY]  double  elitismRate  =  0.9;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.9;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.9;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
539	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.25;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.25;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
540	[BUG]  [BUGGY]  double  elitismRate  =  0.25;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.25;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.25;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
541	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.02;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.02;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
542	[BUG]  [BUGGY]  double  elitismRate  =  0.02;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.02;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.02;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
543	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  2.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  2.0;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
544	[BUG]  [BUGGY]  double  elitismRate  =  2.0;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  2.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  2.0;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
545	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.20;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.20;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
546	[BUG]  [BUGGY]  double  elitismRate  =  0.20;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.20;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.20;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
547	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.2;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.2;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
548	[BUG]  [BUGGY]  double  elitismRate  =  0.2;  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.2;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.2;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
549	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.09;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.09;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
550	[BUG]  [BUGGY]  double  elitismRate  =  0.09;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.09;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.09;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
551	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.04;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.04;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
552	[BUG]  [BUGGY]  double  elitismRate  =  0.04;  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.04;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.04;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
553	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.32;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.32;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
554	[BUG]  [BUGGY]  double  elitismRate  =  0.32;  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.32;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.32;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
555	[BUG]  [BUGGY]  double  elitismRate  =  0.01L;  [CE]  ';'  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.01L;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.01L;	      double    elitismRate    =    0.01;    	non-compiled	[CE]  ';'  expected	4	None	replace
556	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.15;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.15;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
557	[BUG]  [BUGGY]  double  elitismRate  =  0.15;  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.15;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.15;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
558	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.12;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.12;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
559	[BUG]  [BUGGY]  double  elitismRate  =  0.12;  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.12;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.12;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
560	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.03;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.03;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
561	[BUG]  [BUGGY]  double  elitismRate  =  0.03;  [FE]  AssertionError  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.03;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.03;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
562	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.05;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.05;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
563	[BUG]  [BUGGY]  double  elitismRate  =  0.05;  [FE]  AssertionError  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.05;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.05;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
564	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.95;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.95;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
565	[BUG]  [BUGGY]  double  elitismRate  =  0.95;  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.95;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.95;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
566	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.01;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  1.01;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
567	[BUG]  [BUGGY]  double  elitismRate  =  1.01;  [FE]  AssertionError  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.01;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  1.01;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
568	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.75;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.75;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
569	[BUG]  [BUGGY]  double  elitismRate  =  0.75;  [FE]  AssertionError  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.75;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.75;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
570	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.45;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.45;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
571	[BUG]  [BUGGY]  double  elitismRate  =  0.45;  [FE]  AssertionError  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.45;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.45;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
572	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.35;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.35;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
573	[BUG]  [BUGGY]  double  elitismRate  =  0.35;  [FE]  AssertionError  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.35;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.35;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
574	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.10;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.10;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
575	[BUG]  [BUGGY]  double  elitismRate  =  0.10;  [FE]  AssertionError  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.10;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.10;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
576	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.06;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.06;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
577	[BUG]  [BUGGY]  double  elitismRate  =  0.06;  [FE]  AssertionError  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.06;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.06;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
578	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.24;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.24;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
579	[BUG]  [BUGGY]  double  elitismRate  =  0.24;  [FE]  AssertionError  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.24;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.24;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
580	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
581	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
582	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
583	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
584	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	34	None	add
585	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
586	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
587	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
588	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	34	None	add
589	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	34	None	add
590	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	34	None	add
591	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
592	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
593	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
594	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
595	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
596	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
597	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
598	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
599	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
600	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
601	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
602	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
603	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	34	None	add
604	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
605	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
606	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
607	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EMPTY);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EMPTY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EMPTY);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
608	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate();  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
609	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.doubleValue();  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.doubleValue();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
610	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.25;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
611	[BUG]  [BUGGY]  private  double  elitismRate  =  1.25;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.25;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
612	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.75;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.75;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
613	[BUG]  [BUGGY]  private  double  elitismRate  =  0.75;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.75;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.75;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
614	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  2.5;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
615	[BUG]  [BUGGY]  private  double  elitismRate  =  2.5;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  2.5;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
616	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  double  elitismRate  =  0.25;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  double  elitismRate  =  0.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    double  elitismRate  =  0.25;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	30	None	add
617	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  double  elitismRate  =  0.25;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  double  elitismRate  =  0.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  double  elitismRate  =  0.25;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	30	None	add
618	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
619	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
620	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
621	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
622	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
623	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
624	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
625	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
626	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
627	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	30	None	add
628	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
629	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
630	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
631	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
632	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
633	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
634	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
635	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
636	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  0.25;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  0.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  0.25;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
637	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
638	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
639	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
640	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
641	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
642	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
643	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
644	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
645	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
646	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  8.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  8.0;	  private    double    elitismRate    =    3.0;    	compilable	  [FE]  AssertionError  	29	4	replace
647	[BUG]  [BUGGY]  private  double  elitismRate  =  8.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  8.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  8.0;	  private    double    elitismRate    =    3.0;    	compilable	  [FE]  AssertionError  	29	4	replace
648	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0L;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  3.0L;	  private    double    elitismRate    =    3.0;    	non-compiled	[CE]  ';'  expected	29	None	replace
649	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  10000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
650	[BUG]  [BUGGY]  private  double  elitismRate  =  10000.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
651	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
652	[BUG]  [BUGGY]  private  double  elitismRate  =  1000.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
653	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  90.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  90.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
654	[BUG]  [BUGGY]  private  double  elitismRate  =  90.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  90.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  90.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
655	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  80.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  80.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
656	[BUG]  [BUGGY]  private  double  elitismRate  =  80.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  80.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  80.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
657	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  50.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  50.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
658	[BUG]  [BUGGY]  private  double  elitismRate  =  50.0;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  50.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  50.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
659	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  100.0  +  10.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
660	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0  +  10.0;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  100.0  +  10.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
661	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  70.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  70.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
662	[BUG]  [BUGGY]  private  double  elitismRate  =  70.0;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  70.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  70.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
663	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  120.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  120.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
664	[BUG]  [BUGGY]  private  double  elitismRate  =  120.0;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  120.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  120.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
665	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0L;  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  100.0L;	  private    double    elitismRate    =    100.0;    	non-compiled	[CE]  ';'  expected	41	None	replace
666	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  5000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
667	[BUG]  [BUGGY]  private  double  elitismRate  =  5000.0;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  5000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
668	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  20000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
669	[BUG]  [BUGGY]  private  double  elitismRate  =  20000.0;  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  20000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
670	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  110.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  110.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
671	[BUG]  [BUGGY]  private  double  elitismRate  =  110.0;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  110.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  110.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
672	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10000000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  10000000;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
673	[BUG]  [BUGGY]  private  double  elitismRate  =  10000000;  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10000000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10000000;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
674	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  2000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
675	[BUG]  [BUGGY]  private  double  elitismRate  =  2000.0;  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2000.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  2000.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
676	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  60.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  60.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
677	[BUG]  [BUGGY]  private  double  elitismRate  =  60.0;  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  60.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  60.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
678	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  200.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  200.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
679	[BUG]  [BUGGY]  private  double  elitismRate  =  200.0;  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  200.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  200.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
680	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.2;	  private    double    elitismRate    =    0.7;    	compilable	  [FE]  AssertionError  	37	4	replace
681	[BUG]  [BUGGY]  private  double  elitismRate  =  1.2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.2;	  private    double    elitismRate    =    0.7;    	compilable	  [FE]  AssertionError  	37	4	replace
682	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
683	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  double  elitismRate  =  0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  double  elitismRate  =  0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  double  elitismRate  =  0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	58	None	add
684	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
685	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
686	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
687	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
688	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
689	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
690	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
691	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	58	None	add
692	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
693	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
694	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
695	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
696	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
697	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
698	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
699	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
700	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
701	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  }	  	non-compiled	[CE]  <identifier>  expected	58	None	add
702	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
703	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
704	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
705	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
706	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
707	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
708	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError  <  K,  V>();  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError  <  K,  V>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError  <  K,  V>();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
709	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
710	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EMPTY);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EMPTY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EMPTY);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
711	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
712	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  1.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
713	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  0.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
714	[BUG]  [BUGGY]  private  static  double  elitismRate  =  0.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  0.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
715	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0L;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  1.0L;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	73	None	replace
716	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  10.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
717	[BUG]  [BUGGY]  private  static  double  elitismRate  =  10.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  10.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
718	[BUG]  [BUGGY]  private  static  int  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  int  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  int  elitismRate  =  1.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	73	None	replace
719	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  1.0d;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
720	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0d;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  1.0d;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
721	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  0.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
722	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  0.5;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
723	[BUG]  [BUGGY]  private  static  double  elitismRate  =  0.5;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  0.5;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
724	[BUG]  [BUGGY]  private  final  static  double  elitismRate  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  final  static  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  static  double  elitismRate  =  1.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
725	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  1.0f;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
726	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0f;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  1.0f;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
727	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  2.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
728	[BUG]  [BUGGY]  private  static  double  elitismRate  =  2.0;  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  2.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
729	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0l;  [CE]  ';'  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  1.0l;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	73	None	replace
730	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  1;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
731	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1;  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  1;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
732	[BUG]  [BUGGY]  private  static  long  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  static  long  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  long  elitismRate  =  1.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	73	None	replace
733	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  20.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
734	[BUG]  [BUGGY]  private  static  double  elitismRate  =  20.0;  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  20.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
735	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  2;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
736	[BUG]  [BUGGY]  private  static  double  elitismRate  =  2;  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  2;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
737	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  1.0F;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
738	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0F;  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  1.0F;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
739	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  1.0d;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  1.0d;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
740	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  1L;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
741	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1L;  [FE]  AssertionError  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  1L;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
742	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  1.0L;  [CE]  ';'  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  1.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  1.0L;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	73	None	replace
743	[BUG]  [BUGGY]  Private  static  final  double  elitismRate  =  1.0;  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  Private  static  final  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Private  static  final  double  elitismRate  =  1.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
744	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  1.0f;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  1.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  1.0f;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
745	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.20;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.20;	  private    double    elitismRate    =    0.25;    	compilable	  [FE]  AssertionError  	31	4	replace
746	[BUG]  [BUGGY]  private  double  elitismRate  =  0.20;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.20;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.20;	  private    double    elitismRate    =    0.25;    	compilable	  [FE]  AssertionError  	31	4	replace
747	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.15;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.15;	  private    double    elitismRate    =    0.25;    	compilable	  [FE]  AssertionError  	31	4	replace
748	[BUG]  [BUGGY]  private  double  elitismRate  =  0.15;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.15;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.15;	  private    double    elitismRate    =    0.25;    	compilable	  [FE]  AssertionError  	31	4	replace
749	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25L;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.25L;	  private    double    elitismRate    =    0.25;    	non-compiled	[CE]  ';'  expected	31	None	replace
750	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.35;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.35;	  private    double    elitismRate    =    0.25;    	compilable	  [FE]  AssertionError  	31	4	replace
751	[BUG]  [BUGGY]  private  double  elitismRate  =  0.35;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.35;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.35;	  private    double    elitismRate    =    0.25;    	compilable	  [FE]  AssertionError  	31	4	replace
752	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
753	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	10	None	add
754	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
755	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
756	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
757	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
758	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
759	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
760	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	10	None	add
761	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
762	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
763	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
764	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
765	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
766	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
767	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
768	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
769	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
770	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
771	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
772	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  }	  	non-compiled	[CE]  <identifier>  expected	10	None	add
773	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
774	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
775	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
776	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
777	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
778	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
779	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
780	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  0.0);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  0.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
781	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
782	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
783	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
784	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
785	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
786	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
787	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
788	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
789	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
790	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
791	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
792	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
793	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
794	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	12	None	add
795	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  System.arraycopy(elitismRate,  0,  elitismRate,  10.0);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  System.arraycopy(elitismRate,  0,  elitismRate,  10.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    System.arraycopy(elitismRate,  0,  elitismRate,  10.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
796	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
797	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
798	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
799	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
800	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
801	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(10.0,  10.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(10.0,  10.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(10.0,  10.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
802	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
803	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
804	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  10.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  10.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  10.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
805	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
806	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
807	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
808	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(10.0);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(10.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(10.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
809	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
810	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
811	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
812	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  10.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
813	[BUG]  [BUGGY]  public  double  elitismRate  =  10.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  10.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
814	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0L;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0L;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	75	None	replace
815	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  1.0d;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
816	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0d;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
817	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  2.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
818	[BUG]  [BUGGY]  public  double  elitismRate  =  2.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  2.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
819	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0.5;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
820	[BUG]  [BUGGY]  public  double  elitismRate  =  0.5;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0.5;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
821	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  1.0f;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
822	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0f;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0f;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
823	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  20.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
824	[BUG]  [BUGGY]  public  double  elitismRate  =  20.0;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  20.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
825	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  Double.POSITIVE_INFINITY;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
826	[BUG]  [BUGGY]  public  double  elitismRate  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  Double.POSITIVE_INFINITY;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
827	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  1.0F;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
828	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0F;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0F;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
829	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0l;  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0l;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	75	None	replace
830	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0D;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  1.0D;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
831	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0D;  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0D;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0D;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
832	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  Double.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  Double.NaN;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
833	[BUG]  [BUGGY]  public  double  elitismRate  =  Double.NaN;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  Double.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  Double.NaN;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
834	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  30.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  30.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
835	[BUG]  [BUGGY]  public  double  elitismRate  =  30.0;  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  30.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  30.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
836	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0M;  [CE]  ';'  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0M;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0M;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	75	None	replace
837	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  1;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
838	[BUG]  [BUGGY]  public  double  elitismRate  =  1;  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
839	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0.2;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
840	[BUG]  [BUGGY]  public  double  elitismRate  =  0.2;  [FE]  AssertionError  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0.2;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
841	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  5.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  5.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
842	[BUG]  [BUGGY]  public  double  elitismRate  =  5.0;  [FE]  AssertionError  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  5.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  5.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
843	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  1000;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
844	[BUG]  [BUGGY]  public  double  elitismRate  =  1000;  [FE]  AssertionError  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1000;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
845	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0A;  [CE]  ';'  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0A;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0A;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	75	None	replace
846	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  40.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  40.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
847	[BUG]  [BUGGY]  public  double  elitismRate  =  40.0;  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  40.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  40.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
848	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0.01;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
849	[BUG]  [BUGGY]  public  double  elitismRate  =  0.01;  [FE]  AssertionError  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0.01;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
850	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  1.5;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
851	[BUG]  [BUGGY]  public  double  elitismRate  =  1.5;  [FE]  AssertionError  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.5;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
852	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  4.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  4.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
853	[BUG]  [BUGGY]  public  double  elitismRate  =  4.0;  [FE]  AssertionError  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  4.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  4.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
854	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0.1;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
855	[BUG]  [BUGGY]  public  double  elitismRate  =  0.1;  [FE]  AssertionError  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0.1;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
856	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  2;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
857	[BUG]  [BUGGY]  public  double  elitismRate  =  2;  [FE]  AssertionError  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  2;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
858	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  1.2;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
859	[BUG]  [BUGGY]  public  double  elitismRate  =  1.2;  [FE]  AssertionError  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.2;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
860	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
861	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
862	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
863	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	62	None	add
864	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  double  elitismRate  =  5.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  double  elitismRate  =  5.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  double  elitismRate  =  5.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	62	None	add
865	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
866	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	62	None	add
867	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
868	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
869	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
870	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
871	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
872	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	62	None	add
873	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
874	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
875	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
876	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
877	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
878	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
879	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
880	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
881	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	62	None	add
882	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
883	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
884	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
885	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
886	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
887	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
888	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	62	None	add
889	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
890	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
891	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	6	None	add
892	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	6	None	add
893	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
894	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
895	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
896	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
897	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
898	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
899	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
900	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
901	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  System.arraycopy(elitism,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  System.arraycopy(elitism,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    System.arraycopy(elitism,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
902	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
903	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
904	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	6	None	add
905	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
906	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
907	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
908	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
909	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
910	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
911	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
912	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
913	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.NaN);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.NaN);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.NaN);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
914	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	6	None	add
915	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
916	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
917	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
918	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
919	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
920	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.6;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
921	[BUG]  [BUGGY]  private  double  elitismRate  =  1.6;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.6;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
922	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.4;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.4;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
923	[BUG]  [BUGGY]  private  double  elitismRate  =  1.4;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.4;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.4;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
924	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.3;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
925	[BUG]  [BUGGY]  private  double  elitismRate  =  1.3;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.3;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
926	[BUG]  [BUGGY]  double  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
927	[BUG]  [BUGGY]  long  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  long  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	long  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
928	[BUG]  [BUGGY]  Double  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Double  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Double  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
929	[BUG]  [BUGGY]  int  elitismRate  =  getErrorCount();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getErrorCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getErrorCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
930	[BUG]  [BUGGY]  short  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  short  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	short  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
931	[BUG]  [BUGGY]  int  elitismRate  =  getPopulationCount()  -  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getPopulationCount()  -  1;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getPopulationCount()  -  1;	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
932	[BUG]  [BUGGY]  int  elitismRate  =  getBasePopulationCount();  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getBasePopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getBasePopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
933	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyRange();  [CE]  cannot  find  symbol  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyRange();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyRange();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
934	[BUG]  [BUGGY]  int  elitismRate  =  getColumnCount();  [CE]  cannot  find  symbol  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getColumnCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getColumnCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
935	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyPopulationCount();  [CE]  cannot  find  symbol  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
936	[BUG]  [BUGGY]  int  elitismRate  =  getEndPopulationCount();  [CE]  cannot  find  symbol  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEndPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEndPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
937	[BUG]  [BUGGY]  int  elitismRate  =  getPopulationCount()  +  1;  [CE]  cannot  find  symbol  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getPopulationCount()  +  1;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getPopulationCount()  +  1;	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
938	[BUG]  [BUGGY]  int  elitismRate  =  getImmediatePopulationCount();  [CE]  cannot  find  symbol  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getImmediatePopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getImmediatePopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
939	[BUG]  [BUGGY]  static  int  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  static  int  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	static  int  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
940	[BUG]  [BUGGY]  int  elitismRate  =  getEscapedPopulationCount();  [CE]  cannot  find  symbol  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEscapedPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEscapedPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
941	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyRangeCount();  [CE]  cannot  find  symbol  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyRangeCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyRangeCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
942	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyColumnCount();  [CE]  cannot  find  symbol  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyColumnCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyColumnCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
943	[BUG]  [BUGGY]  Integer  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  Integer  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Integer  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
944	[BUG]  [BUGGY]  int  elitismRate  =  getEmptySize();  [CE]  cannot  find  symbol  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptySize();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptySize();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
945	[BUG]  [BUGGY]  float  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  float  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	float  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
946	[BUG]  [BUGGY]  int  elitismRate  =  getDeviceCount();  [CE]  cannot  find  symbol  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getDeviceCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getDeviceCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
947	[BUG]  [BUGGY]  int  elitismRate  =  getIndex();  [CE]  cannot  find  symbol  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getIndex();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getIndex();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
948	[BUG]  [BUGGY]  private  double  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
949	[BUG]  [BUGGY]  int  elitismRate  =  getNumberOfElements();  [CE]  cannot  find  symbol  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getNumberOfElements();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getNumberOfElements();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
950	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyIndex();  [CE]  cannot  find  symbol  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyIndex();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyIndex();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
951	[BUG]  [BUGGY]  int  elitismRate  =  getSinglePopulationCount();  [CE]  cannot  find  symbol  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getSinglePopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getSinglePopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
952	[BUG]  [BUGGY]  int  elitismRate  =  getEnd();  [CE]  cannot  find  symbol  [FE]                                                                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEnd();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEnd();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
953	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  double  elitismRate  =  0.;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  double  elitismRate  =  0.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  double  elitismRate  =  0.;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	60	None	add
954	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  double  elitismRate  =  0.;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  double  elitismRate  =  0.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    double  elitismRate  =  0.;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	60	None	add
955	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
956	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
957	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
958	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
959	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
960	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
961	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
962	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
963	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
964	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
965	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
966	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
967	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
968	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
969	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
970	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
971	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	60	None	add
972	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
973	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	60	None	add
974	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
975	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
976	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
977	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
978	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
979	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError  <  E>();  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError  <  E>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError  <  E>();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
980	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
981	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
982	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
983	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
984	[BUG]  [BUGGY]  double  elitismRate  =  0.;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
985	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.8;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.8;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
986	[BUG]  [BUGGY]  double  elitismRate  =  0.8;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.8;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.8;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
987	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.7;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.7;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
988	[BUG]  [BUGGY]  double  elitismRate  =  0.7;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.7;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.7;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
989	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.6;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.6;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
990	[BUG]  [BUGGY]  double  elitismRate  =  0.6;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.6;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.6;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
991	[BUG]  [BUGGY]  long  elitismRate  =  0.5;  [CE]  possible  loss  of  precision  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  long  elitismRate  =  0.5;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	long  elitismRate  =  0.5;	      double    elitismRate    =    0.5;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
992	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.5;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  1.5;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
993	[BUG]  [BUGGY]  double  elitismRate  =  1.5;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.5;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  1.5;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
994	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.1;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.1;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
995	[BUG]  [BUGGY]  double  elitismRate  =  0.1;  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.1;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.1;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
996	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.3;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.3;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
997	[BUG]  [BUGGY]  double  elitismRate  =  0.3;  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.3;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.3;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
998	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
999	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  double  elitismRate  =  0.05;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  double  elitismRate  =  0.05;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  double  elitismRate  =  0.05;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	66	None	add
1000	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1001	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1002	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	66	None	add
1003	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1004	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1005	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1006	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
1007	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1008	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1009	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1010	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1011	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1012	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
1013	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1014	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1015	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1016	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1017	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	66	None	add
1018	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1019	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1020	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1021	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1022	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  double  elitismRate  =  0.01;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  double  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  double  elitismRate  =  0.01;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	66	None	add
1023	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1024	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
1025	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1026	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.exp(1.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.exp(1.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.exp(1.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	66	None	add
1027	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
1028	[BUG]  [BUGGY]  Validate.notEmpty(elitismRate);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(elitismRate);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1029	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  false);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  false);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  false);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1030	[BUG]  [BUGGY]  Validate.notNull(registry);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(registry);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(registry);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1031	[BUG]  [BUGGY]  Validate.notNull(this,  elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(this,  elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(this,  elitismRate);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1032	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  null);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  null);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  null);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1033	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  true);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  true);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  true);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1034	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  1.0);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  1.0);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1035	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  1);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  1);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1036	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  Double.POSITIVE_INFINITY);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  Double.POSITIVE_INFINITY);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1037	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  private  static  final  long  serialVersionUID());  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  private  static  final  long  serialVersionUID());  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  private  static  final  long  serialVersionUID());	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1038	[BUG]  [BUGGY]  Validate.notNull(elitismRate  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate  +  1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate  +  1);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1039	[BUG]  [BUGGY]  Validate.notNull(elitismRate  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate  -  1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate  -  1);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1040	[BUG]  [BUGGY]  Validate.notNull(status);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(status);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(status);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1041	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  Double.NaN);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  Double.NaN);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  Double.NaN);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1042	[BUG]  [BUGGY]  Validate.notNull(this.elitismRate);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(this.elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(this.elitismRate);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1043	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  Double.NEGATIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  Double.NEGATIVE_INFINITY);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  Double.NEGATIVE_INFINITY);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1044	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  this);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  this);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  this);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1045	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  private  static  final  long  serialVersionUID);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  private  static  final  long  serialVersionUID);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  private  static  final  long  serialVersionUID);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1046	[BUG]  [BUGGY]  validate(elitismRate,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  validate(elitismRate,  false);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	validate(elitismRate,  false);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
1047	[BUG]  [BUGGY]  Validate.notFalse(elitismRate);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  Validate.notFalse(elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notFalse(elitismRate);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1048	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  -1);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  -1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  -1);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1049	[BUG]  [BUGGY]  Validate.notImmutable(elitismRate);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  Validate.notImmutable(elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notImmutable(elitismRate);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1050	[BUG]  [BUGGY]  Validate.notNull(this);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(this);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(this);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1051	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  0.0);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  0.0);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  0.0);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1052	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  private  static  final  long  serialVersionUID  =  1L;  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  private  static  final  long  serialVersionUID  =  1L;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  private  static  final  long  serialVersionUID  =  1L;	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1053	[BUG]  [BUGGY]  validate(elitismRate);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  validate(elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	validate(elitismRate);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
1054	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  0.5);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  0.5);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  0.5);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1055	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1));  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1056	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0));  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(1.0));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1057	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1058	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.5,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.5,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.5,  Math.abs(elitismRate));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1059	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  -  1));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  -  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  -  1));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1060	[BUG]  [BUGGY]  elitismRate  =  Math.min(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.min(0.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.min(0.0,  Math.abs(elitismRate));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1061	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Math.abs(elitismRate  +  1)));  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Math.abs(elitismRate  +  1)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(Math.abs(elitismRate  +  1)));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1062	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DAY));  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DAY));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DAY));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1063	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  1000));  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  1000));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  1000));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1064	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Math.abs(elitismRate)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(Math.abs(elitismRate)));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1065	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate)+  1);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate)+  1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate)+  1);	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1066	[BUG]  [BUGGY]  elitismRate  =  Math.max(2.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(2.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(2.0,  Math.abs(elitismRate));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1067	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Short.valueOf(elitismRate)));  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Short.valueOf(elitismRate)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(Short.valueOf(elitismRate)));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1068	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_SECOND));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_SECOND));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1069	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MAX_VALUE));  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MAX_VALUE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MAX_VALUE));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1070	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_MINUTE));  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_MINUTE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_MINUTE));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1071	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  2));  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  2));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  2));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1072	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.HOUR_OF_DAY));  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.HOUR_OF_DAY));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.HOUR_OF_DAY));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1073	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DECEMBER));  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DECEMBER));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DECEMBER));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1074	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate)-  1);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate)-  1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate)-  1);	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1075	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MILLIS));  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MILLIS));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MILLIS));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1076	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  double  elitismRate  =  1000;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    double  elitismRate  =  1000;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	42	None	add
1077	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  double  elitismRate  =  1000;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  double  elitismRate  =  1000;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	42	None	add
1078	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1079	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1080	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1081	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1082	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1083	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1084	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1085	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1086	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  elitismRate  =  1000;  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    elitismRate  =  1000;	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1087	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
1088	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  double  elitismRate  =  100;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  double  elitismRate  =  100;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    double  elitismRate  =  100;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	42	None	add
1089	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT,  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1090	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1091	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  double  elitismRate  =  10000;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  double  elitismRate  =  10000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    double  elitismRate  =  10000;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	42	None	add
1092	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1093	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1094	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  return  elitismRate;  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  return  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  return  elitismRate;	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1095	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1096	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  1000);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  1000);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  1000);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1097	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1098	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_MINUTE);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1099	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  this.elitismRate  =  elitismRate;  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis());  this.elitismRate  =  elitismRate;	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1100	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1101	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
1102	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_MINUTE);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_MINUTE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.SECONDS_PER_MINUTE);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1103	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1104	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.HOUR_OF_MONTH);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.HOUR_OF_MONTH);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.HOUR_OF_MONTH);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1105	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.EXTENDS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.EXTENDS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.EXTENDS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
1106	[BUG]  [BUGGY]  private  long  elitismRate  =  0.5;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.5;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1107	[BUG]  [BUGGY]  private  long  elitismRate  =  0.9L;  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.9L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.9L;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  ';'  expected	70	None	replace
1108	[BUG]  [BUGGY]  private  int  elitismRate  =  0.01;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.01;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1109	[BUG]  [BUGGY]  private  int  elitismRate  =  0.;  [CE]  possible  loss  of  precision  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1110	[BUG]  [BUGGY]  private  long  elitismRate  =  10.0;  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  10.0;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1111	[BUG]  [BUGGY]  private  long  elitismRate  =  0.7;  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.7;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1112	[BUG]  [BUGGY]  private  long  elitismRate  =  2.0;  [CE]  possible  loss  of  precision  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  2.0;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1113	[BUG]  [BUGGY]  private  long  elitismRate  =  0.8;  [CE]  possible  loss  of  precision  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.8;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.8;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1114	[BUG]  [BUGGY]  public  int  elitismRate  =  0.9;  [CE]  possible  loss  of  precision  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  public  int  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  int  elitismRate  =  0.9;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1115	[BUG]  [BUGGY]  private  long  elitismRate  =  0.2;  [CE]  possible  loss  of  precision  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.2;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1116	[BUG]  [BUGGY]  private  int  elitismRate  =  0.25;  [CE]  possible  loss  of  precision  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.25;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1117	[BUG]  [BUGGY]  private  long  elitismRate  =  1.0L;  [CE]  ';'  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  1.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  1.0L;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  ';'  expected	70	None	replace
1118	[BUG]  [BUGGY]  private  long  elitismRate  =  0.01;  [CE]  possible  loss  of  precision  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.01;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1119	[BUG]  [BUGGY]  Private  int  elitismRate  =  0.9;  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  Private  int  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Private  int  elitismRate  =  0.9;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
1120	[BUG]  [BUGGY]  private  short  elitismRate  =  0.9;  [CE]  possible  loss  of  precision  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  short  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  short  elitismRate  =  0.9;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1121	[BUG]  [BUGGY]  private  long  elitismRate  =  0.0L;  [CE]  ';'  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.0L;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  ';'  expected	70	None	replace
1122	[BUG]  [BUGGY]  private  long  elitismRate  =  0.9f;  [CE]  possible  loss  of  precision  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.9f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.9f;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1123	[BUG]  [BUGGY]  private  long  elitismRate  =  0.001L;  [CE]  ';'  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.001L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.001L;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  ';'  expected	70	None	replace
1124	[BUG]  [BUGGY]  private  long  elitismRate  =  0.1;  [CE]  possible  loss  of  precision  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.1;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1125	[BUG]  [BUGGY]  private  long  elitismRate  =  0.001;  [CE]  possible  loss  of  precision  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.001;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1126	[BUG]  [BUGGY]  private  long  elitismRate  =  0.6;  [CE]  possible  loss  of  precision  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.6;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
1127	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1128	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  double  elitismRate  =  1.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  double  elitismRate  =  1.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  double  elitismRate  =  1.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	26	None	add
1129	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1130	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1131	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1132	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  double  elitismRate  =  1.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  double  elitismRate  =  1.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    double  elitismRate  =  1.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	26	None	add
1133	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1134	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	26	None	add
1135	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1136	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1137	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1138	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1139	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1140	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1141	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1142	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1143	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1144	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1145	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	26	None	add
1146	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1147	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	26	None	add
1148	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1149	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  double  elitismRate  =  2.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    double  elitismRate  =  2.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	26	None	add
1150	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1151	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1152	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1153	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1154	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(true);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1155	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1156	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1157	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.2f;	  private    double    elitismRate    =    0.2;    	compilable	  [FE]  AssertionError  	33	4	replace
1158	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.2f;	  private    double    elitismRate    =    0.2;    	compilable	  [FE]  AssertionError  	33	4	replace
1159	[BUG]  [BUGGY]  long  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      [BUGGY]  long  elitismRate  =  1.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	long  elitismRate  =  1.0;	      double    elitismRate    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
1160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Double  elitismRate  =  1.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	Double  elitismRate  =  1.0;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1161	[BUG]  [BUGGY]  Double  elitismRate  =  1.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Double  elitismRate  =  1.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Double  elitismRate  =  1.0;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.0d;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  1.0d;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1163	[BUG]  [BUGGY]  double  elitismRate  =  1.0d;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.0d;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  1.0d;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.0f;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  1.0f;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1165	[BUG]  [BUGGY]  double  elitismRate  =  1.0f;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.0f;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  1.0f;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1166	[BUG]  [BUGGY]  Private  double  elitismRate  =  1.0;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Private  double  elitismRate  =  1.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Private  double  elitismRate  =  1.0;	      double    elitismRate    =    1.0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
1167	[BUG]  [BUGGY]  double  elitismRate  =  1.0L;  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.0L;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  1.0L;	      double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	1	None	replace
1168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  20.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  20.0;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1169	[BUG]  [BUGGY]  double  elitismRate  =  20.0;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  20.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  20.0;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1170	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1171	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1172	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  10.0));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  10.0));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  10.0));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1173	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DAY));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DAY));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DAY));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1174	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate  +  1)));  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate  +  1)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate  +  1)));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1175	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1000));  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1000));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  1000));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1176	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1));  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1177	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_SECOND));  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_SECOND));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_SECOND));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1178	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Short.valueOf(elitismRate)));  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Short.valueOf(elitismRate)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(Short.valueOf(elitismRate)));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1179	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_MINUTE));  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_MINUTE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_MINUTE));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1180	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.HOUR_OF_DAY));  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.HOUR_OF_DAY));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.HOUR_OF_DAY));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1181	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MAX_VALUE));  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MAX_VALUE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MAX_VALUE));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1182	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate)  +  1);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate)  +  1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate)  +  1);	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1183	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MILLIS));  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MILLIS));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MILLIS));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1184	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DECEMBER));  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DECEMBER));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DECEMBER));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1185	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate)));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1186	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECTION));  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECTION));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECTION));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1187	[BUG]  [BUGGY]  elitismRate  =  Math.max(5.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(5.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(5.0,  Math.abs(elitismRate));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1188	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_YEAR));  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_YEAR));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_YEAR));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1189	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_WEEK));  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_WEEK));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_WEEK));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1190	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1191	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1192	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1193	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1194	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitism,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitism,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    System.arraycopy(elitism,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1195	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1196	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    assertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1197	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    final  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
1198	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1199	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1200	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1201	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1202	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	68	None	add
1203	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1204	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1205	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1206	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);  [CE]  cannot  find  symbol  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
1207	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1208	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1209	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1210	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1211	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    assertionError  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1212	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismSize);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismSize);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismSize);	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1213	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1214	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1215	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(true);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(true);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1216	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(null);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(null);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(null);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1217	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1218	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1219	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(1.0f);  [CE]  cannot  find  symbol  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
1220	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.01L;	  private    double    elitismRate    =    0.01;    	non-compiled	[CE]  ';'  expected	23	None	replace
1221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.01f;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1222	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01f;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.01f;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.04;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.04;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1224	[BUG]  [BUGGY]  private  double  elitismRate  =  0.04;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.04;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.04;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1225	[BUG]  [BUGGY]  long  elitismRate  =  0.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]      [BUGGY]  long  elitismRate  =  0.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	long  elitismRate  =  0.0;	      double    elitismRate    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
1226	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Double  elitismRate  =  0.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	Double  elitismRate  =  0.0;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
1227	[BUG]  [BUGGY]  Double  elitismRate  =  0.0;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Double  elitismRate  =  0.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Double  elitismRate  =  0.0;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
1228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  3.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  3.0;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
1229	[BUG]  [BUGGY]  double  elitismRate  =  3.0;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  3.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  3.0;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
1230	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.00;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.00;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
1231	[BUG]  [BUGGY]  private  double  elitismRate  =  0.00;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.00;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.00;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
1232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  00.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  00.0;	  private    double    elitismRate    =    20.0;    	compilable	  [FE]  AssertionError  	25	4	replace
1233	[BUG]  [BUGGY]  private  double  elitismRate  =  00.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  00.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  00.0;	  private    double    elitismRate    =    20.0;    	compilable	  [FE]  AssertionError  	25	4	replace
1234	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  20.0  +  10.0;	  private    double    elitismRate    =    20.0;    	compilable	  [FE]  AssertionError  	25	4	replace
1235	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0  +  10.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  20.0  +  10.0;	  private    double    elitismRate    =    20.0;    	compilable	  [FE]  AssertionError  	25	4	replace
1236	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	64	None	add
1237	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1238	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1239	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  1.7;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  1.7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  double  elitismRate  =  1.7;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	64	None	add
1240	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1241	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1242	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	64	None	add
1243	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	64	None	add
1244	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1245	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1246	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1247	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1248	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	64	None	add
1249	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	64	None	add
1250	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1251	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1252	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1253	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
1254	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1255	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1256	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	64	None	add
1257	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1258	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1259	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
1260	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  0.7;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  double  elitismRate  =  0.7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  double  elitismRate  =  0.7;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	64	None	add
1261	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  }  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  }	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1262	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1263	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(2.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(2.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(2.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1264	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1265	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
1266	[BUG]  [BUGGY]  Validate.notEmpty(population);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(population);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(population);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1267	[BUG]  [BUGGY]  Validate.notEmpty(elitism);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(elitism);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(elitism);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1268	[BUG]  [BUGGY]  Validate.notNull(elitism);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitism);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitism);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1269	[BUG]  [BUGGY]  Validate.notEmpty(peer);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(peer);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(peer);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1270	[BUG]  [BUGGY]  Validate.notNull(this.population);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(this.population);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(this.population);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1271	[BUG]  [BUGGY]  Validate.notEmpty(this.population);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(this.population);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(this.population);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1272	[BUG]  [BUGGY]  Validate.notNull(population,  elitismRate);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(population,  elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(population,  elitismRate);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1273	[BUG]  [BUGGY]  Validate.notNull(elitismError);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismError);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismError);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1274	[BUG]  [BUGGY]  validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  validate.notNull(elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	validate.notNull(elitismRate);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1275	[BUG]  [BUGGY]  Validate.notEmpty(elitismError);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(elitismError);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(elitismError);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1276	[BUG]  [BUGGY]  Validate.notEmpty(null);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(null);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(null);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1277	[BUG]  [BUGGY]  Validate.notNull(elemRate);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elemRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elemRate);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1278	[BUG]  [BUGGY]  Validate.notNull(elitismPrettyPrinter);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismPrettyPrinter);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismPrettyPrinter);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1279	[BUG]  [BUGGY]  Validate.notEmpty(peek());  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(peek());  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(peek());	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1280	[BUG]  [BUGGY]  Validate.notEmpty(type);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(type);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(type);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1281	[BUG]  [BUGGY]  Validate.notEmpty(size);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(size);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(size);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1282	[BUG]  [BUGGY]  Validate.notFalse(population);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  Validate.notFalse(population);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notFalse(population);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1283	[BUG]  [BUGGY]  Validate.notNull(elitismRoot);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRoot);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRoot);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1284	[BUG]  [BUGGY]  Validate.notEmpty(size());  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(size());  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(size());	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1285	[BUG]  [BUGGY]  Validate.notEmpty(elitismPrettyPrinter);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(elitismPrettyPrinter);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(elitismPrettyPrinter);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1286	[BUG]  [BUGGY]  Validate.notEmpty(number);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(number);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(number);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1287	[BUG]  [BUGGY]  Validate.notImmutable(population);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  Validate.notImmutable(population);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notImmutable(population);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1288	[BUG]  [BUGGY]  Validate.notNull(null);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(null);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(null);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1289	[BUG]  [BUGGY]  Validate.notEmpty(Population.EMPTY);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(Population.EMPTY);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(Population.EMPTY);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1290	[BUG]  [BUGGY]  Validate.notNull(global);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(global);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(global);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1291	[BUG]  [BUGGY]  private  int  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  1.0;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1292	[BUG]  [BUGGY]  private  float  elitismRate  =  0.9;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  float  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  float  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1293	[BUG]  [BUGGY]  private  int  elitismRate  =  0.5;  [CE]  possible  loss  of  precision  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.5;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1294	[BUG]  [BUGGY]  private  int  elitismRate  =  10.0;  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  10.0;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1295	[BUG]  [BUGGY]  private  char  elitismRate  =  0.9;  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  char  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  char  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1296	[BUG]  [BUGGY]  private  int  elitismRate  =  2.0;  [CE]  possible  loss  of  precision  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  2.0;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1297	[BUG]  [BUGGY]  Private  double  elitismRate  =  0.9;  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  Private  double  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Private  double  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
1298	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	71	4	replace
1299	[BUG]  [BUGGY]  private  static  double  elitismRate  =  0.9;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	71	4	replace
1300	[BUG]  [BUGGY]  private  byte  elitismRate  =  0.9;  [CE]  possible  loss  of  precision  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  byte  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  byte  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1301	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.9;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	71	None	replace
1302	[BUG]  [BUGGY]  private  int  elitismRate  =  0.7;  [CE]  possible  loss  of  precision  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.7;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1303	[BUG]  [BUGGY]  private  int  elitismRate  =  0.1;  [CE]  possible  loss  of  precision  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.1;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1304	[BUG]  [BUGGY]  private  int  elitismRate  =  20.0;  [CE]  possible  loss  of  precision  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  20.0;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1305	[BUG]  [BUGGY]  private  int  elitismRate  =  1.5;  [CE]  possible  loss  of  precision  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  1.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  1.5;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1306	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1307	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
1308	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  2.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  double  elitismRate  =  2.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
1309	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
1310	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1311	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1312	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1313	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  2.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    double  elitismRate  =  2.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
1314	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1315	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1316	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
1317	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
1318	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1319	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1320	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1321	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1322	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1323	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1324	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
1325	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1326	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
1327	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1328	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1329	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1330	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate.clone();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1331	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1332	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1333	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1334	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXTENDS);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1335	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
1336	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.1;	  private    double    elitismRate    =    1.01;    	compilable	  [FE]  AssertionError  	39	4	replace
1337	[BUG]  [BUGGY]  private  double  elitismRate  =  1.1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.1;	  private    double    elitismRate    =    1.01;    	compilable	  [FE]  AssertionError  	39	4	replace
1338	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  30.0L;	  private    double    elitismRate    =    30.0;    	non-compiled	[CE]  ';'  expected	47	None	replace
1339	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3600.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  3600.0;	  private    double    elitismRate    =    30.0;    	compilable	  [FE]  AssertionError  	47	4	replace
1340	[BUG]  [BUGGY]  private  double  elitismRate  =  3600.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3600.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  3600.0;	  private    double    elitismRate    =    30.0;    	compilable	  [FE]  AssertionError  	47	4	replace
1341	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  310.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  310.0;	  private    double    elitismRate    =    30.0;    	compilable	  [FE]  AssertionError  	47	4	replace
1342	[BUG]  [BUGGY]  private  double  elitismRate  =  310.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  310.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  310.0;	  private    double    elitismRate    =    30.0;    	compilable	  [FE]  AssertionError  	47	4	replace
1343	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1344	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	14	None	add
1345	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1346	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1347	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1348	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	14	None	add
1349	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1350	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
1351	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1352	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1353	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1354	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1355	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1356	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
1357	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	14	None	add
1358	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
1359	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1360	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1361	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1362	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1363	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
1364	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1365	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1366	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1367	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1368	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1369	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5,  1.0);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5,  1.0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1370	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
1371	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
1372	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  <  K,  V>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
1373	[BUG]  [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1374	[BUG]  [BUGGY]  long  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]            AssertionError    [CONTEXT]      [BUGGY]  long  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	long  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1375	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1376	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [CE]  self-reference  in  initializer  [FE]                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1377	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(2.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(2.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(2.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1378	[BUG]  [BUGGY]  Integer  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  Integer  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Integer  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1379	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate)));  [CE]  self-reference  in  initializer  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate)));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1380	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  self-reference  in  initializer  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1381	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE));  [CE]  cannot  find  symbol  EXTENDS_PER_SIZE  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  EXTENDS_PER_SIZE	20	None	replace
1382	[BUG]  [BUGGY]  float  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  float  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	float  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1383	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS));  [CE]  cannot  find  symbol  EXTENDS  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  EXTENDS	20	None	replace
1384	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elemRate));  [CE]  cannot  find  symbol  elemRate  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elemRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elemRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  elemRate	20	None	replace
1385	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(size()  -  1));  [CE]  cannot  find  symbol  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(size()  -  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(size()  -  1));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1386	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(shortValue));  [CE]  cannot  find  symbol  shortValue  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(shortValue));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(shortValue));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  shortValue	20	None	replace
1387	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate  +  1)));  [CE]  self-reference  in  initializer  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate  +  1)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate  +  1)));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1388	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SECOND));  [CE]  cannot  find  symbol  EXTENDS_PER_SECOND  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SECOND));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SECOND));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  EXTENDS_PER_SECOND	20	None	replace
1389	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(short));  [CE]  '.class'  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(short));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(short));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  '.class'  expected	20	None	replace
1390	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_LIST));  [CE]  cannot  find  symbol  EXTENDS_PER_LIST  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_LIST));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_LIST));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  EXTENDS_PER_LIST	20	None	replace
1391	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(size));  [CE]  cannot  find  symbol  size  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(size));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(size));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  size	20	None	replace
1392	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DAY));  [CE]  self-reference  in  initializer  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DAY));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DAY));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1393	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate),  1);  [CE]  self-reference  in  initializer  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate),  1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate),  1);	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1394	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DECEMBER));  [CE]  self-reference  in  initializer  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DECEMBER));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_DECEMBER));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1395	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_LIST));  [CE]  cannot  find  symbol  EXTENDS_LIST  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_LIST));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_LIST));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  EXTENDS_LIST	20	None	replace
1396	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EMPTY_LIST));  [CE]  cannot  find  symbol  EMPTY_LIST  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EMPTY_LIST));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EMPTY_LIST));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  EMPTY_LIST	20	None	replace
1397	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate).doubleValue());  [CE]  self-reference  in  initializer  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate).doubleValue());  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate).doubleValue());	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1398	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MILLIS));  [CE]  self-reference  in  initializer  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MILLIS));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MILLIS));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1399	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  10.0));  [CE]  self-reference  in  initializer  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  10.0));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  10.0));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
1400	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_MILLIS));  [CE]  cannot  find  symbol  EXTENDS_PER_MILLIS  [FE]                                                                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_MILLIS));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_MILLIS));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  EXTENDS_PER_MILLIS	20	None	replace
1401	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1402	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1403	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1404	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1405	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	38	None	add
1406	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1407	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1408	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1409	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1410	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1411	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	38	None	add
1412	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1413	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1414	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1415	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1416	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1417	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1418	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1419	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1420	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  }	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1421	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1422	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1423	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1424	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0F);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0F);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0F);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1425	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1426	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(-1,  1);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(-1,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(-1,  1);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1427	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	38	None	add
1428	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1429	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  double  elitismRate  =  1.01;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  double  elitismRate  =  1.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  double  elitismRate  =  1.01;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	38	None	add
1430	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1431	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  5.0L;	  private    double    elitismRate    =    5.0;    	non-compiled	[CE]  ';'  expected	63	None	replace
1432	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.4;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.4;	  private    double    elitismRate    =    0.3;    	compilable	  [FE]  AssertionError  	49	4	replace
1433	[BUG]  [BUGGY]  private  double  elitismRate  =  0.4;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.4;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.4;	  private    double    elitismRate    =    0.3;    	compilable	  [FE]  AssertionError  	49	4	replace
1434	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  100L;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1435	[BUG]  [BUGGY]  private  double  elitismRate  =  100L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  100L;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1436	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  100l;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1437	[BUG]  [BUGGY]  private  double  elitismRate  =  100l;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  100l;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1438	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  50;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  50;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1439	[BUG]  [BUGGY]  private  double  elitismRate  =  50;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  50;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  50;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1440	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  60;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  60;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1441	[BUG]  [BUGGY]  private  double  elitismRate  =  60;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  60;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  60;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1442	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  90;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  90;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1443	[BUG]  [BUGGY]  private  double  elitismRate  =  90;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  90;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  90;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1444	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  120;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  120;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1445	[BUG]  [BUGGY]  private  double  elitismRate  =  120;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  120;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  120;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1446	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  20;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1447	[BUG]  [BUGGY]  private  double  elitismRate  =  20;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  20;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1448	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  12;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  12;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1449	[BUG]  [BUGGY]  private  double  elitismRate  =  12;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  12;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  12;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1450	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  30;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1451	[BUG]  [BUGGY]  private  double  elitismRate  =  30;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  30;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1452	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  360;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  360;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1453	[BUG]  [BUGGY]  private  double  elitismRate  =  360;  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  360;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  360;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1454	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1455	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  double  elitismRate  =  3.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  double  elitismRate  =  3.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  double  elitismRate  =  3.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	28	None	add
1456	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1457	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1458	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1459	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1460	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1461	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1462	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  double  elitismRate  =  3.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  double  elitismRate  =  3.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    double  elitismRate  =  3.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	28	None	add
1463	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1464	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1465	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1466	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1467	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1468	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(1.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1469	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1470	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1471	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1472	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1473	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1474	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.max(0.0,  Math.abs(elitismRate)));	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1475	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1476	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitism  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1477	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1478	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1479	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1480	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1481	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0F);  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0F);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0F);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1482	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1483	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  }  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  }	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1484	[BUG]  [BUGGY]  double  elitismRate  =  1.0.0;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.0.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  1.0.0;	      double    elitismRate    =    10.0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1485	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  100.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  100.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1486	[BUG]  [BUGGY]  double  elitismRate  =  100.0;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  100.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  100.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  9.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  9.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1488	[BUG]  [BUGGY]  double  elitismRate  =  9.0;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  9.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  9.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1489	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1000.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  1000.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1490	[BUG]  [BUGGY]  double  elitismRate  =  1000.0;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1000.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  1000.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1491	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  90.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  90.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1492	[BUG]  [BUGGY]  double  elitismRate  =  90.0;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  90.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  90.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1493	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1000;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  1000;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1494	[BUG]  [BUGGY]  double  elitismRate  =  1000;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1000;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  1000;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
1495	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.5L;	  private    double    elitismRate    =    1.5;    	non-compiled	[CE]  ';'  expected	27	None	replace
1496	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10.0L;	  private    double    elitismRate    =    10.0;    	non-compiled	[CE]  ';'  expected	13	None	replace
1497	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0.0;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0.0;	  private    double    elitismRate    =    10.0;    	non-compiled	[CE]  ';'  expected	13	None	replace
1498	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  10.0  +  10.0;	  private    double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	13	4	replace
1499	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0  +  10.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10.0  +  10.0;	  private    double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	13	4	replace
1500	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  9.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  9.0;	  private    double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	13	4	replace
1501	[BUG]  [BUGGY]  private  double  elitismRate  =  9.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  9.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  9.0;	  private    double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	13	4	replace
1502	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  10.0f;	  private    double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	13	4	replace
1503	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0f;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10.0f;	  private    double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	13	4	replace
1504	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1505	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1506	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1507	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	36	None	add
1508	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1509	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	36	None	add
1510	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1511	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  0.7;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  0.7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  double  elitismRate  =  0.7;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	36	None	add
1512	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1513	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1514	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1515	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1516	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1517	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1518	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1519	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	36	None	add
1520	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1521	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	36	None	add
1522	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1523	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1524	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0F);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0F);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0F);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1525	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1526	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1527	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1528	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  0.01;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  double  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  double  elitismRate  =  0.01;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	36	None	add
1529	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1530	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1531	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1532	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1533	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  }  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  }	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1534	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  double  elitismRate  =  0.01;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  double  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    double  elitismRate  =  0.01;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	22	None	add
1535	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.01;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  double  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  double  elitismRate  =  0.01;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	22	None	add
1536	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1537	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1538	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1539	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1540	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1541	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1542	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
1543	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1544	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1545	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1546	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  0.01;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  0.01;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
1547	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
1548	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1549	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1550	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
1551	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1552	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1553	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  }	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1554	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0f,  1.0f);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1555	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.0f);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1556	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1557	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1558	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1559	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1560	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0.5f);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1561	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1562	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0,  2.0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1563	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  E>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
1564	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.5f;	  private    double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	15	4	replace
1565	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5f;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5f;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.5f;	  private    double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	15	4	replace
1566	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5L;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.5L;	  private    double    elitismRate    =    0.5;    	non-compiled	[CE]  ';'  expected	15	None	replace
1567	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5l;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.5l;	  private    double    elitismRate    =    0.5;    	non-compiled	[CE]  ';'  expected	15	None	replace
1568	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.5  +  1;	  private    double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	15	4	replace
1569	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.5  +  1;	  private    double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	15	4	replace
1570	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1571	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1572	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1573	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1574	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1575	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1576	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1577	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1578	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1579	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1580	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1581	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1582	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1583	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1584	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1585	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1586	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1587	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1588	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1589	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1590	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1591	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	48	None	add
1592	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1593	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1594	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
1595	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
1596	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1597	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
1598	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1599	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
1600	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1601	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1602	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1603	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
1604	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
1605	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1606	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
1607	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1608	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1609	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1610	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
1611	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1612	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
1613	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1614	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1615	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	52	None	add
1616	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1617	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1618	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError  <  Integer>();  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError  <  Integer>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError  <  Integer>();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1619	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1620	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1621	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Validate.notNull(elitismRate);  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Validate.notNull(elitismRate);	  	non-compiled	[CE]  >  expected	68	None	add
1622	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Map.Entry  <  String,Object>  entry  =  new  AssertionError();  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Map.Entry  <  String,Object>  entry  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Map.Entry  <  String,Object>  entry  =  new  AssertionError();	  	non-compiled	[CE]  >  expected	68	None	add
1623	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError  <  Node>();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError  <  Node>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    final  AssertionError  <  Node>  elitismRate  =  new  AssertionError  <  Node>();	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
1624	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1625	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError  <  Integer>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError  <  Integer>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    assertionError  =  new  AssertionError  <  Integer>();	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1626	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Map.Entry  <  String,Object>  entry  =  new  AssertionError(elitismRate);  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Map.Entry  <  String,Object>  entry  =  new  AssertionError(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Map.Entry  <  String,Object>  entry  =  new  AssertionError(elitismRate);	  	non-compiled	[CE]  >  expected	68	None	add
1627	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(1.0,  Math.max(1.0,  elitismRate));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(1.0,  Math.max(1.0,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    assertionError  =  new  AssertionError(1.0,  Math.max(1.0,  elitismRate));	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1628	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Integer>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1629	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    assertionError  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1630	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(0.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(0.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1631	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitismRate,  0,  new  AssertionError(1.0,  elitismRate));  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  System.arraycopy(elitismRate,  0,  new  AssertionError(1.0,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    System.arraycopy(elitismRate,  0,  new  AssertionError(1.0,  elitismRate));	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1632	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(-1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(-1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(-1);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1633	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    assertionError  =  new  AssertionError(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1634	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(1);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1635	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(1.0,  Math.min(1.0,  elitismRate));  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  assertionError  =  new  AssertionError(1.0,  Math.min(1.0,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    assertionError  =  new  AssertionError(1.0,  Math.min(1.0,  elitismRate));	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1636	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <=  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <=  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <=  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	68	None	add
1637	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1638	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Map.Entry  <  String,Object>  entry  =  new  AssertionError(0);  [CE]  >  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Map.Entry  <  String,Object>  entry  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Map.Entry  <  String,Object>  entry  =  new  AssertionError(0);	  	non-compiled	[CE]  >  expected	68	None	add
1639	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(0.5);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(0.5);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>(0.5);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1640	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Attribute>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Attribute>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Attribute>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	68	None	add
1641	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.001;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.001;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1642	[BUG]  [BUGGY]  double  elitismRate  =  0.001;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.001;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.001;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1643	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.9;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  1.9;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1644	[BUG]  [BUGGY]  double  elitismRate  =  1.9;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  1.9;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  1.9;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1645	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.4;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.4;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1646	[BUG]  [BUGGY]  double  elitismRate  =  0.4;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.4;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.4;	      double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	1	4	replace
1647	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1648	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1649	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1650	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1651	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1652	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1653	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1654	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1655	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1656	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1657	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1658	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1659	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1660	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1661	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1662	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1663	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1664	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1665	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1666	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1667	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1668	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError  <  Integer>();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError  <  Integer>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError  <  Integer>();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1669	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
1670	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iterator  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iterator  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  iterator  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
1671	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01l;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.01l;	  private    double    elitismRate    =    0.01;    	non-compiled	[CE]  ';'  expected	23	None	replace
1672	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.01  +  1;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1673	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.01  +  1;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1674	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.03;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.03;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1675	[BUG]  [BUGGY]  private  double  elitismRate  =  0.03;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.03;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.03;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1676	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.09;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.09;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1677	[BUG]  [BUGGY]  private  double  elitismRate  =  0.09;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.09;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.09;	  private    double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	23	4	replace
1678	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1679	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1680	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1681	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1682	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1683	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1684	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1685	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1686	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1687	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1688	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1689	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1690	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1691	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1692	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1693	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1694	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1695	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1696	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1697	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1698	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1699	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1700	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1701	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
1702	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	38	None	add
1703	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.1L;	  private    double    elitismRate    =    0.1;    	non-compiled	[CE]  ';'  expected	35	None	replace
1704	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  10.0));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  10.0));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  10.0));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1705	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1L));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1L));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1L));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1706	[BUG]  [BUGGY]  elitismRate  =  Math.max(0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0,  Math.abs(elitismRate));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1707	[BUG]  [BUGGY]  elitismRate  =  Math.max(-1.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(-1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(-1.0,  Math.abs(elitismRate));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1708	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  /  2.0));  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  /  2.0));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  /  2.0));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1709	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(value));  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(value));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(value));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1710	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.001,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.001,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.001,  Math.abs(elitismRate));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1711	[BUG]  [BUGGY]  elitismRate  =  Math.min(1.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.min(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.min(1.0,  Math.abs(elitismRate));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1712	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1L));  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1L));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1L));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1713	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1714	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1715	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1716	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1717	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1718	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1719	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1720	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1721	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1722	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1723	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1724	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1725	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1726	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1727	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1728	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1729	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1730	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1731	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1732	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1733	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1734	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1735	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1736	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	44	None	add
1737	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
1738	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1739	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1740	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
1741	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1742	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1743	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1744	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
1745	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
1746	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1747	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
1748	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
1749	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1750	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1751	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1752	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1753	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1754	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1755	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1756	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1757	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1758	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
1759	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1760	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1761	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1762	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
1763	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
1764	[BUG]  [BUGGY]  private  long  elitismRate  =  0.;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1765	[BUG]  [BUGGY]  private  int  elitismRate  =  0.8;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.8;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.8;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1766	[BUG]  [BUGGY]  private  int  elitismRate  =  1.9;  [CE]  possible  loss  of  precision  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  1.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  1.9;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1767	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  Double  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  Double  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	71	4	replace
1768	[BUG]  [BUGGY]  private  Double  elitismRate  =  0.9;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  Double  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  Double  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	71	4	replace
1769	[BUG]  [BUGGY]  private  int  elitismRate  =  0.2;  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.2;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1770	[BUG]  [BUGGY]  private  int  elitismRate  =  0.001;  [CE]  possible  loss  of  precision  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.001;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1771	[BUG]  [BUGGY]  private  int  elitismRate  =  0.6;  [CE]  possible  loss  of  precision  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.6;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1772	[BUG]  [BUGGY]  private  final  long  elitismRate  =  0.9;  [CE]  possible  loss  of  precision  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  final  long  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  long  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1773	[BUG]  [BUGGY]  private  Long  elitismRate  =  0.9;  [CE]  incompatible  types  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  Long  elitismRate  =  0.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  Long  elitismRate  =  0.9;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  incompatible  types	71	None	replace
1774	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1775	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1776	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1777	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1778	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1779	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1780	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1781	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1782	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1783	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1784	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1785	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1786	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1787	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1788	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1789	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1790	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1791	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1792	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1793	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1794	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1795	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1796	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	36	None	add
1797	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
1798	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0.doubleValue();	  private    double    elitismRate    =    0.0;    	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	replace
1799	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0D;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.0D;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
1800	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0D;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0D;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0D;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
1801	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =(double)0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =(double)0.0;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
1802	[BUG]  [BUGGY]  private  double  elitismRate  =(double)0.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =(double)0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =(double)0.0;	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
1803	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1804	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1805	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
1806	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1807	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1808	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
1809	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
1810	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1811	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1812	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1813	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
1814	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
1815	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  super.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  super.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  super.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
1816	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1817	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
1818	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1819	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1820	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1821	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1822	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1823	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
1824	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  iterator  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  iterator  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  iterator  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1825	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  null  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  null  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  null  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
1826	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
1827	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.000;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
1828	[BUG]  [BUGGY]  private  double  elitismRate  =  0.000;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.000;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
1829	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.001  +  1;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
1830	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.001  +  1;	  private    double    elitismRate    =    0.001;    	compilable	  [FE]  AssertionError  	55	4	replace
1831	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1832	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1833	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1834	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1835	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
1836	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1837	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
1838	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
1839	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1840	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
1841	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1842	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1843	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
1844	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1845	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1846	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1847	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1848	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1849	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1850	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1851	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1852	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1853	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1854	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
1855	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
1856	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1857	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  100  +  1;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1858	[BUG]  [BUGGY]  private  double  elitismRate  =  100  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  100  +  1;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1859	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  40;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  40;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1860	[BUG]  [BUGGY]  private  double  elitismRate  =  40;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  40;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  40;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1861	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  99;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  99;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1862	[BUG]  [BUGGY]  private  double  elitismRate  =  99;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  99;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  99;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
1863	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1864	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1865	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1866	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1867	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1868	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1869	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1870	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1871	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1872	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1873	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1874	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1875	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1876	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1877	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1878	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1879	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1880	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1881	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1882	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1883	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  10.0;	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1884	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
1885	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1886	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1887	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  <identifier>  expected	28	None	add
1888	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  -1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  -1.0;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
1889	[BUG]  [BUGGY]  private  double  elitismRate  =  -1.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  -1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  -1.0;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
1890	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0l;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  2.0l;	  private    double    elitismRate    =    2.0;    	non-compiled	[CE]  ';'  expected	9	None	replace
1891	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1892	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1893	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1894	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1895	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1896	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1897	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1898	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1899	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1900	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1901	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1902	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1903	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1904	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1905	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1906	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1907	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1908	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1909	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1910	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1911	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1912	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	56	None	add
1913	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1914	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1915	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
1916	[BUG]  [BUGGY]  private  double  elitismRate  =  1000  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1000  *  DateTimeConstants.MILLIS_PER_SECOND;	  private    double    elitismRate    =    1000;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	43	None	replace
1917	[BUG]  [BUGGY]  private  double  elitismRate  =  1000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1000L  *  DateTimeConstants.MILLIS_PER_SECOND;	  private    double    elitismRate    =    1000;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	43	None	replace
1918	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10000L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  10000L;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
1919	[BUG]  [BUGGY]  private  double  elitismRate  =  10000L;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10000L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  10000L;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
1920	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  4000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  4000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
1921	[BUG]  [BUGGY]  private  double  elitismRate  =  4000;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  4000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  4000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
1922	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1923	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1924	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1925	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1926	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
1927	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1928	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1929	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
1930	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
1931	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1932	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
1933	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1934	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
1935	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
1936	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1937	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1938	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1939	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1940	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1941	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1942	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1943	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1944	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
1945	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1946	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1947	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1948	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1949	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1950	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1951	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1952	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1953	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1954	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1955	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1956	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1957	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1958	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  super.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  super.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  super.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1959	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1960	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1961	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1962	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    System.arraycopy(elitismRate,  0,  elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1963	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1964	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1965	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1966	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	34	None	add
1967	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	34	None	add
1968	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  3.2;	  private    double    elitismRate    =    3.0;    	compilable	  [FE]  AssertionError  	29	4	replace
1969	[BUG]  [BUGGY]  private  double  elitismRate  =  3.2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  3.2;	  private    double    elitismRate    =    3.0;    	compilable	  [FE]  AssertionError  	29	4	replace
1970	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1971	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1972	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1973	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1974	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1975	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1976	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1977	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1978	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1979	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1980	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1981	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1982	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1983	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1984	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1985	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1986	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1987	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1988	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1989	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1990	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1991	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1992	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1993	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	26	None	add
1994	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	26	None	add
1995	[BUG]  [BUGGY]  private  double  elitismRate  =  Double.NEGATIVE_INITIALIZER;  [CE]  cannot  find  symbol  NEGATIVE_INITIALIZER  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.NEGATIVE_INITIALIZER;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  Double.NEGATIVE_INITIALIZER;	  private    double    elitismRate    =    10.0;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE_INITIALIZER	13	None	replace
1996	[BUG]  [BUGGY]  private  double  elitismRate  =  Double.NEGATIVE_INFINITE;  [CE]  cannot  find  symbol  NEGATIVE_INFINITE  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  Double.NEGATIVE_INFINITE;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  Double.NEGATIVE_INFINITE;	  private    double    elitismRate    =    10.0;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE_INFINITE	13	None	replace
1997	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.25  +  1;	  private    double    elitismRate    =    0.25;    	compilable	  [FE]  AssertionError  	31	4	replace
1998	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.25  +  1;	  private    double    elitismRate    =    0.25;    	compilable	  [FE]  AssertionError  	31	4	replace
1999	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2000	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2001	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2002	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2003	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2004	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2005	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2006	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2007	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  <  Integer>  elitismRate  =  new  AssertionError  <  Integer>();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2008	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2009	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2010	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2011	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2012	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  super.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  super.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  super.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2013	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2014	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2015	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2016	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2017	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2018	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2019	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2020	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  null  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  null  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  null  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2021	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  iterator  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  iterator  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  iterator  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2022	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.7L;	  private    double    elitismRate    =    1.7;    	non-compiled	[CE]  ';'  expected	65	None	replace
2023	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.8;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.8;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
2024	[BUG]  [BUGGY]  private  double  elitismRate  =  1.8;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.8;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.8;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
2025	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.9;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
2026	[BUG]  [BUGGY]  private  double  elitismRate  =  1.9;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.9;	  private    double    elitismRate    =    1.7;    	compilable	  [FE]  AssertionError  	65	4	replace
2027	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2028	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2029	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2030	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2031	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2032	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2033	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2034	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2035	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2036	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2037	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2038	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2039	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2040	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2041	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2042	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2043	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2044	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2045	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2046	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2047	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	14	None	add
2048	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
2049	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2050	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2051	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2052	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
2053	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2054	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2055	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
2056	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
2057	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2058	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2059	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2060	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2061	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2062	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2063	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2064	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
2065	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2066	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2067	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2068	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2069	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2070	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  <identifier>  expected	40	None	add
2071	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
2072	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2073	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2074	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
2075	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2076	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2077	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
2078	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2079	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2080	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2081	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2082	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2083	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2084	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2085	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
2086	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
2087	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
2088	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
2089	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2090	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2091	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2092	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2093	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
2094	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2095	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
2096	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	54	None	add
2097	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =.00;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =.00;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
2098	[BUG]  [BUGGY]  private  double  elitismRate  =.00;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =.00;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =.00;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
2099	[BUG]  [BUGGY]  private  int  elitismRate  =  100.0;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  100.0;	  private    double    elitismRate    =    100.0;    	non-compiled	[CE]  possible  loss  of  precision	41	None	replace
2100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  100.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
2101	[BUG]  [BUGGY]  private  static  double  elitismRate  =  100.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  100.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
2102	[BUG]  [BUGGY]  private  long  elitismRate  =  100.0;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  100.0;	  private    double    elitismRate    =    100.0;    	non-compiled	[CE]  possible  loss  of  precision	41	None	replace
2103	[BUG]  [BUGGY]  private  long  elitismRate  =  0.9l;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.9l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.9l;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  ';'  expected	70	None	replace
2104	[BUG]  [BUGGY]  private  long  elitismRate  =  0.9d;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.9d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.9d;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
2105	[BUG]  [BUGGY]  private  long  elitismRate  =  1.9;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  1.9;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  1.9;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
2106	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(value));  [CE]  cannot  find  symbol  value  [FE]          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(value));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(value));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  value	20	None	replace
2107	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate)+  1);  [CE]  self-reference  in  initializer  [FE]            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate)+  1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate)+  1);	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2108	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismMask));  [CE]  cannot  find  symbol  elitismMask  [FE]              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismMask));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismMask));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  elitismMask	20	None	replace
2109	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismLocation));  [CE]  cannot  find  symbol  elitismLocation  [FE]                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismLocation));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismLocation));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  elitismLocation	20	None	replace
2110	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(ELEFT_LIMIT));  [CE]  cannot  find  symbol  ELEFT_LIMIT  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(ELEFT_LIMIT));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(ELEFT_LIMIT));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  ELEFT_LIMIT	20	None	replace
2111	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate),  0.5);  [CE]  self-reference  in  initializer  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate),  0.5);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate),  0.5);	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2112	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate)-1);  [CE]  self-reference  in  initializer  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate)-1);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate)-1);	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2113	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_MINUTE));  [CE]  self-reference  in  initializer  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_MINUTE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_MINUTE));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  6.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  6.0;	  private    double    elitismRate    =    5.0;    	compilable	  [FE]  AssertionError  	63	4	replace
2115	[BUG]  [BUGGY]  private  double  elitismRate  =  6.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  6.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  6.0;	  private    double    elitismRate    =    5.0;    	compilable	  [FE]  AssertionError  	63	4	replace
2116	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0s;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0s;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0s;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	75	None	replace
2117	[BUG]  [BUGGY]  public  double  elitismRate  =  2.0L;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  2.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  2.0L;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	75	None	replace
2118	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0.0d;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2119	[BUG]  [BUGGY]  public  double  elitismRate  =  0.0d;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0.0d;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  2.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  2.0d;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2121	[BUG]  [BUGGY]  public  double  elitismRate  =  2.0d;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  2.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  2.0d;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0.3;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2123	[BUG]  [BUGGY]  public  double  elitismRate  =  0.3;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0.3;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2124	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0S;  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0S;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  1.0S;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	75	None	replace
2125	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2126	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2127	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2128	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
2129	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
2130	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2131	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2132	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
2133	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
2134	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2135	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
2136	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2137	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
2138	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2139	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2140	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2141	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2142	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2143	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2144	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2145	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2146	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2147	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
2148	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	30	None	add
2149	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	30	None	add
2150	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2151	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2152	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2153	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
2154	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
2155	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2156	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2157	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
2158	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2159	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
2160	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
2161	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2162	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
2163	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2164	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2165	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
2166	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2167	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2168	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2169	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError  {  return  new  AssertionError();  [CE]  >  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError  {  return  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError  {  return  new  AssertionError();	  	non-compiled	[CE]  >  expected	42	None	add
2170	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2171	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  null  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  null  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  null  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
2172	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2173	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2174	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError  <  Integer>();  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError  <  Integer>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError  <  Integer>();	  	non-compiled	[CE]  <identifier>  expected	42	None	add
2175	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	42	None	add
2176	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2177	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
2178	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2179	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2180	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
2181	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2182	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
2183	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
2184	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
2185	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2186	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
2187	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2188	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2189	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2190	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2191	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2192	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
2193	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2194	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2195	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
2196	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	58	None	add
2197	[BUG]  [BUGGY]  Validate.notNull(exp);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(exp);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(exp);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2198	[BUG]  [BUGGY]  Validate.notNull(elitismStart);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismStart);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismStart);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2199	[BUG]  [BUGGY]  Validate.notNull(elitismPosition);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismPosition);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismPosition);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2200	[BUG]  [BUGGY]  Validate.notEmpty(value);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(value);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(value);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2201	[BUG]  [BUGGY]  Validate.notNull(elitismElement);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismElement);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismElement);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2202	[BUG]  [BUGGY]  Validate.notNull(value);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(value);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(value);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2203	[BUG]  [BUGGY]  Validate.notNull(elitismPtr);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismPtr);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismPtr);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2204	[BUG]  [BUGGY]  Validate.isTrue(population!=  false);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  Validate.isTrue(population!=  false);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.isTrue(population!=  false);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2205	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2206	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2207	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2208	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
2209	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
2210	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2211	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
2212	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
2213	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2214	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2215	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2216	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
2217	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2218	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2219	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
2220	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2221	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
2222	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2223	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0d);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0d);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2224	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2225	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	50	None	add
2226	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2227	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2228	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2229	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2230	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2231	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2232	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2233	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2234	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2235	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2236	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2237	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2238	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2239	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2240	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2241	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2242	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2243	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2244	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2245	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2246	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2247	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2248	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2249	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2250	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2251	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2252	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	22	None	add
2253	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2254	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2255	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2256	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
2257	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2258	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2259	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
2260	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
2261	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2262	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2263	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
2264	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2265	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
2266	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
2267	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2268	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2269	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2270	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
2271	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2272	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
2273	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	66	None	add
2274	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2275	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2276	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2277	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2278	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2279	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2280	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2281	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
2282	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2283	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2284	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
2285	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
2286	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
2287	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2288	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
2289	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2290	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2291	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
2292	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2293	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2294	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2295	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
2296	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2297	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2298	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2299	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2300	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
2301	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	60	None	add
2302	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	60	None	add
2303	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  30.0  +  10.0;	  private    double    elitismRate    =    30.0;    	compilable	  [FE]  AssertionError  	47	4	replace
2304	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0  +  10.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  30.0  +  10.0;	  private    double    elitismRate    =    30.0;    	compilable	  [FE]  AssertionError  	47	4	replace
2305	[BUG]  [BUGGY]  private  long  elitismRate  =  20.0;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  20.0;	  private    double    elitismRate    =    20.0;    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
2306	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0L;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  20.0L;	  private    double    elitismRate    =    20.0;    	non-compiled	[CE]  ';'  expected	25	None	replace
2307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.00;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.00;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
2308	[BUG]  [BUGGY]  double  elitismRate  =  0.00;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.00;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.00;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
2309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
2310	[BUG]  [BUGGY]  double  elitismRate  =  0;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0;	      double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	3	4	replace
2311	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.31;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.31;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
2312	[BUG]  [BUGGY]  double  elitismRate  =  0.31;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.31;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.31;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
2313	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.17;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.17;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
2314	[BUG]  [BUGGY]  double  elitismRate  =  0.17;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.17;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.17;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
2315	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(value));  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(value));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(value));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
2316	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.00,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.00,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.00,  Math.abs(elitismRate));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
2317	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(0.5));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(0.5));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(0.5));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
2318	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  /  2.0));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  /  2.0));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  /  2.0));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
2319	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1L));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1L));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1L));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
2320	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0S;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0S;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0S;	  private    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	7	None	replace
2321	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.0  +  1;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
2322	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0  +  1;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
2323	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  BigDecimal.MAX_VALUE);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  BigDecimal.MAX_VALUE);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  BigDecimal.MAX_VALUE);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2324	[BUG]  [BUGGY]  Validate.isTrue(elitismRate!=  null);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Validate.isTrue(elitismRate!=  null);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.isTrue(elitismRate!=  null);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2325	[BUG]  [BUGGY]  Validate.isTrue(elitismRate  ==  null);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Validate.isTrue(elitismRate  ==  null);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.isTrue(elitismRate  ==  null);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2326	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  BigDecimal.ZERO);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  BigDecimal.ZERO);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  BigDecimal.ZERO);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2327	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  BigDecimal.MIN_VALUE);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  BigDecimal.MIN_VALUE);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  BigDecimal.MIN_VALUE);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2328	[BUG]  [BUGGY]  Validate.isTrue(elitismRate!=  false);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  Validate.isTrue(elitismRate!=  false);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.isTrue(elitismRate!=  false);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2329	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  0);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  0);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  0);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2330	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  -1.0);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  -1.0);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  -1.0);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2331	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  NumberFormat.getNumberInstance());  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  NumberFormat.getNumberInstance());  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  NumberFormat.getNumberInstance());	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2332	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2333	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2334	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2335	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2336	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2337	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2338	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2339	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2340	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2341	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2342	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2343	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2344	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2345	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2346	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2347	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2348	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2349	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2350	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2351	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2352	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2353	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2354	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(0.0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2355	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2356	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	24	None	add
2357	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2358	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  Double.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  Double.NaN;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
2359	[BUG]  [BUGGY]  private  static  double  elitismRate  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  Double.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  Double.NaN;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
2360	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  1.0l;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  1.0l;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  1.0l;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	73	None	replace
2361	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  10.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  10.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
2362	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.5;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  0.5;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
2363	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2364	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2365	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2366	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2367	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2368	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2369	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2370	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2371	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2372	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2373	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2374	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2375	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2376	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2377	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2378	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2379	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2380	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2381	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2382	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2383	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2384	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2385	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2386	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
2387	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2388	[BUG]  [BUGGY]  double  elitismRate  =  0.5L;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.5L;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.5L;	      double    elitismRate    =    0.5;    	non-compiled	[CE]  ';'  expected	5	None	replace
2389	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.2  +  10.0;	  private    double    elitismRate    =    0.2;    	compilable	  [FE]  AssertionError  	33	4	replace
2390	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2  +  10.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.2  +  10.0;	  private    double    elitismRate    =    0.2;    	compilable	  [FE]  AssertionError  	33	4	replace
2391	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError();  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
2392	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  assertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  assertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    assertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	74	None	add
2393	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    final  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2394	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
2395	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  Map.Entry  <  AssertionError,  Object>  entry  =  map.entrySet().iterator();  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  Map.Entry  <  AssertionError,  Object>  entry  =  map.entrySet().iterator();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  Map.Entry  <  AssertionError,  Object>  entry  =  map.entrySet().iterator();	  	non-compiled	[CE]  >  expected	74	None	add
2396	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError.this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError.this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    AssertionError.this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	74	None	add
2397	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
2398	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  Lists.newArrayList();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2399	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
2400	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2401	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  Maps.newHashMap();  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  Maps.newHashMap();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  Maps.newHashMap();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2402	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  elitismRate  =  Double.doubleToLongBits(1.0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  elitismRate  =  Double.doubleToLongBits(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    elitismRate  =  Double.doubleToLongBits(1.0);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
2403	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)this.populationList.iterator().next();  [CE]  cannot  find  symbol  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)this.populationList.iterator().next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =(AssertionError)this.populationList.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2404	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError  <  Node>();  [CE]  cannot  find  symbol  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError  <  Node>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    final  AssertionError  <  Node>  elitismRate  =  new  AssertionError  <  Node>();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2405	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate.iterator();  [CE]  cannot  find  symbol  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate.iterator();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate.iterator();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2406	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)this.populationList.iterator();  [CE]  cannot  find  symbol  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)this.populationList.iterator();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =(AssertionError)this.populationList.iterator();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2407	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
2408	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  cannot  find  symbol  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2409	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  this.elitismRate  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  this.elitismRate  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    this.elitismRate  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2410	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismMap.values().iterator();  [CE]  cannot  find  symbol  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismMap.values().iterator();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismMap.values().iterator();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2411	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  assertionError  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  assertionError  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    assertionError  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  <identifier>  expected	74	None	add
2412	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2413	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  assertionError  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  assertionError  =  new  AssertionError(1.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    assertionError  =  new  AssertionError(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	74	None	add
2414	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  AssertionErrorIterator  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =  new  AssertionErrorIterator  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =  new  AssertionErrorIterator  <  AssertionError>();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2415	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.NaN);  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.NaN);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    AssertionError  elitismRate  =  new  AssertionError(1.0,  Double.NaN);	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
2416	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismMap.iterator();  [CE]  cannot  find  symbol  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismMap.iterator();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismMap.iterator();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2417	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismList.iterator();  [CE]  cannot  find  symbol  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismList.iterator();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismList.iterator();	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2418	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismMap.get(elitismRate);  [CE]  cannot  find  symbol  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismMap.get(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    Iterator  <  AssertionError>  elitismRate  =(AssertionError)super.elitismMap.get(elitismRate);	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
2419	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2420	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2421	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2422	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2423	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2424	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2425	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2426	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2427	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2428	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2429	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2430	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2431	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2432	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2433	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2434	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2435	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2436	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2437	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  this.elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2438	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2439	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2440	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2441	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2442	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
2443	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2444	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
2445	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.05L;	  private    double    elitismRate    =    0.05;    	non-compiled	[CE]  ';'  expected	67	None	replace
2446	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2447	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2448	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2449	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2450	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2451	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  AssertionError  {  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2452	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2453	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2454	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2455	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2456	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2457	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2458	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  false  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2459	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2460	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2461	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2462	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  elitismError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2463	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2464	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  oldError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2465	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2466	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  result  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2467	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2468	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2469	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
2470	[BUG]  [BUGGY]  private  long  elitismRate  =  0;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0;	  private    double    elitismRate    =    0;    	non-compiled	[CE]  possible  loss  of  precision	59	None	replace
2471	[BUG]  [BUGGY]  int  elitismRate  =  getEdgeCount();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEdgeCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEdgeCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2472	[BUG]  [BUGGY]  int  elitismRate  =  getEnumPopulationCount();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEnumPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEnumPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2473	[BUG]  [BUGGY]  int  elitismRate  =  getDimensionCount();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getDimensionCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getDimensionCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2474	[BUG]  [BUGGY]  int  elitismRate  =  getInitialValue();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getInitialValue();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getInitialValue();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2475	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyCount();  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2476	[BUG]  [BUGGY]  int  elitismRate  =  getDelimiter();  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getDelimiter();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getDelimiter();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2477	[BUG]  [BUGGY]  int  elitismRate  =  getDoubleCount();  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getDoubleCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getDoubleCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2478	[BUG]  [BUGGY]  int  elitismRate  =  getChronology();  [CE]  cannot  find  symbol  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getChronology();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getChronology();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2479	[BUG]  [BUGGY]  int  elitismRate  =  getInitialValueCount();  [CE]  cannot  find  symbol  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getInitialValueCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getInitialValueCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2480	[BUG]  [BUGGY]  int  elitismRate  =  getEnumCount();  [CE]  cannot  find  symbol  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEnumCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEnumCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2481	[BUG]  [BUGGY]  int  elitismRate  =  getItemCount();  [CE]  cannot  find  symbol  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getItemCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getItemCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2482	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.8;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.8;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2483	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.8;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.8;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.8;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2484	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.3;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2485	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.3;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.3;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2486	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.001;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2487	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.001;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.001;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.001;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2488	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.6;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2489	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.6;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.6;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2490	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2491	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2492	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2493	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(1.0,  1.0);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
2494	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError();	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
2495	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2496	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2497	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2498	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(1.0,  Double.POSITIVE_INFINITY);	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
2499	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2500	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2501	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2502	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError();  }	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
2503	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2504	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(0);  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(0);	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
2505	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NaN;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NaN;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2506	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  assertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  assertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    assertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
2507	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  double.doubleValue();  [CE]  class  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  double.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  double.doubleValue();	  	non-compiled	[CE]  class  expected	10	None	add
2508	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	10	None	add
2509	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.MAX_VALUE);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.MAX_VALUE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.MAX_VALUE);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2510	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
2511	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(1.0,  1.0,  1.0);  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(1.0,  1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    final  AssertionError  <  private  static  final  AssertionError  {  return  new  AssertionError(1.0,  1.0,  1.0);	  	non-compiled	[CE]  illegal  start  of  type	10	None	add
2512	[BUG]  [BUGGY]  private  final  double  elitismRate  =  2.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  2.0;	  private    double    elitismRate    =    2.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	9	None	replace
2513	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  2.0F;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
2514	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0F;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0F;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  2.0F;	  private    double    elitismRate    =    2.0;    	compilable	  [FE]  AssertionError  	9	4	replace
2515	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	11	None	replace
2516	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  new  Double(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  new  Double(0.0);	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
2517	[BUG]  [BUGGY]  private  double  elitismRate  =  new  Double(0.0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  new  Double(0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  new  Double(0.0);	  private    double    elitismRate    =    0.0;    	compilable	  [FE]  AssertionError  	11	4	replace
2518	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2519	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2520	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2521	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2522	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2523	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2524	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2525	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2526	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2527	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2528	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2529	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2530	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2531	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2532	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2533	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2534	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	40	None	add
2535	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2536	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  100.0;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  100.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  100.0;  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2537	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2538	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2539	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2540	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2541	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2542	[BUG]  [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
2543	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2544	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2545	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	66	None	add
2546	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2547	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2548	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.05;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.05;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.05;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2549	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  assertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  assertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    assertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2550	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2551	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2552	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  int  elitismRate  =(int)Math.pow(10,  Math.max(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  int  elitismRate  =(int)Math.pow(10,  Math.max(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    int  elitismRate  =(int)Math.pow(10,  Math.max(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	66	None	add
2553	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2554	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2555	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  int  elitismRate  =(int)Math.pow(10,  Math.log(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  int  elitismRate  =(int)Math.pow(10,  Math.log(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    int  elitismRate  =(int)Math.pow(10,  Math.log(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	66	None	add
2556	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.01;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.01;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.01;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2557	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.5;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2558	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2559	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2560	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2561	[BUG]  [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.05;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.05;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
2562	[BUG]  [BUGGY]  private  int  elitismRate  =  100;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  100;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  100;	  private    double    elitismRate    =    100;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
2563	[BUG]  [BUGGY]  private  long  elitismRate  =  100L;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  100L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  100L;	  private    double    elitismRate    =    100;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
2564	[BUG]  [BUGGY]  private  long  elitismRate  =  100;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  100;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  100;	  private    double    elitismRate    =    100;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
2565	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  110;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  110;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
2566	[BUG]  [BUGGY]  private  double  elitismRate  =  110;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  110;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  110;	  private    double    elitismRate    =    100;    	compilable	  [FE]  AssertionError  	53	4	replace
2567	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2568	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2569	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
2570	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	72	None	add
2571	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  Node>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
2572	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2573	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2574	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	72	None	add
2575	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2576	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2577	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2578	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2579	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2580	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  System.arraycopy(elitism,  0,  this.elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  System.arraycopy(elitism,  0,  this.elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    System.arraycopy(elitism,  0,  this.elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	72	None	add
2581	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2582	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Math.abs(elitismRate));	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2583	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;	  	non-compiled	[CE]  illegal  start  of  type	72	None	add
2584	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  N,  V>  elitismRate  =  new  AssertionError();  [CE]  cannot  find  symbol  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  N,  V>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  N,  V>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
2585	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2586	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  Node>  elitismRate  =(AssertionError)super.elitismRate;  [CE]  cannot  find  symbol  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  Node>  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  Node>  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
2587	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  N,  V>  elitismRate  =  new  AssertionError(0);  [CE]  cannot  find  symbol  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  static  final  AssertionError  <  N,  V>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    static  final  AssertionError  <  N,  V>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
2588	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NaN;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NaN;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	72	None	add
2589	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1.0;  assertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1.0;  assertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    static    double    elitismRate    =    1.0;    assertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	72	None	add
2590	[BUG]  [BUGGY]  private  final  double  elitismRate  =  100.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  100.0;	  private    double    elitismRate    =    100.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	41	None	replace
2591	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  100.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
2592	[BUG]  [BUGGY]  public  double  elitismRate  =  100.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  100.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  100.0;	  private    double    elitismRate    =    100.0;    	compilable	  [FE]  AssertionError  	41	4	replace
2593	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2594	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2595	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2596	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
2597	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2598	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2599	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2600	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2601	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2602	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2603	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2604	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2605	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2606	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
2607	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2608	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2609	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2610	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2611	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2612	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	38	None	add
2613	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2614	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2615	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2616	[BUG]  [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
2617	[BUG]  [BUGGY]  private  int  elitismRate  =  30.0;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  30.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  30.0;	  private    double    elitismRate    =    30.0;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
2618	[BUG]  [BUGGY]  private  long  elitismRate  =  30.0;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  30.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  30.0;	  private    double    elitismRate    =    30.0;    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
2619	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  30.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  30.0;	  private    double    elitismRate    =    30.0;    	compilable	  [FE]  AssertionError  	47	4	replace
2620	[BUG]  [BUGGY]  protected  double  elitismRate  =  30.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  30.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  30.0;	  private    double    elitismRate    =    30.0;    	compilable	  [FE]  AssertionError  	47	4	replace
2621	[BUG]  [BUGGY]  private  final  double  elitismRate  =  30.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  30.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  30.0;	  private    double    elitismRate    =    30.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	47	None	replace
2622	[BUG]  [BUGGY]  Private  double  elitismRate  =  0.5;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Private  double  elitismRate  =  0.5;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Private  double  elitismRate  =  0.5;	      double    elitismRate    =    0.5;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2623	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2624	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2625	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2626	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2627	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2628	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2629	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2630	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
2631	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2632	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2633	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2634	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitismRate,  0,  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitismRate,  0,	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2635	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2636	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2637	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate  +  10.0;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2638	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2639	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2640	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2641	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2642	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)super.elitismRate;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)super.elitismRate;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
2643	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2644	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitism,  0,  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitism,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitism,  0,	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2645	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
2646	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.2;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  0.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  0.2;	  private    double    elitismRate    =    0.2;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	33	None	replace
2647	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0d;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0d;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0d;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2648	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2649	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2650	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2651	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2652	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2653	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2654	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0d;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0d;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0d;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2655	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0d;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0d;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0d;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2656	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0d;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0d;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0d;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2657	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2658	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2659	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0d;  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0d;	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2660	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2661	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2662	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_WEEK);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2663	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0d;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0d;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0d;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2664	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0d;  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0d;	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2665	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_MINUTE);	  	non-compiled	[CE]  <identifier>  expected	50	None	add
2666	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2667	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0d;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0d;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0d;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2668	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2669	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2670	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2671	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2672	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2673	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0d;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	50	None	add
2674	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2675	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2676	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2677	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2678	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2679	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2680	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2681	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2682	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2683	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2684	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2685	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	32	None	add
2686	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2687	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2688	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2689	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2690	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2691	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.get  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.get  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.get	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2692	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2693	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2694	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2695	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2696	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2697	[BUG]  [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.2;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.2;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate	  	non-compiled	[CE]  illegal  start  of  type	32	None	add
2698	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2699	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2700	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2701	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2702	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2703	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2704	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2705	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2706	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2707	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2708	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2709	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2710	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2711	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2712	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2713	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2714	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2715	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2716	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2717	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2718	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2719	[BUG]  [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate);  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	60	None	add
2720	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2721	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2722	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2723	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  elitismRate  =  new  AssertionError();  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  static  final  AssertionError  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    static  final  AssertionError  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	74	None	add
2724	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2725	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2726	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  ==  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  ==  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  ==  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2727	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2728	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  ListPopulation.this.populationList.add(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  ListPopulation.this.populationList.add(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  ListPopulation.this.populationList.add(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2729	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2730	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null);  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null);  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null);  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2731	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2732	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2733	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2734	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2735	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2736	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2737	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2738	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2739	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.getValue())  {  double  elitismRate  =  1.0;  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.getValue())  {  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.getValue())  {  double  elitismRate  =  1.0;	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2740	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2741	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0;  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0;	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2742	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2743	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  ==  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  ==  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  ==  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2744	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2745	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate  [CE]  illegal  start  of  type  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2746	[BUG]  [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));  [CE]  illegal  start  of  type  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));	  	non-compiled	[CE]  illegal  start  of  type	74	None	add
2747	[BUG]  [BUGGY]  private  static  final  long  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  static  final  long  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  long  elitismRate  =  1.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	73	None	replace
2748	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  2.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  2.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
2749	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  static  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  static  double  elitismRate  =  1.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
2750	[BUG]  [BUGGY]  public  static  double  elitismRate  =  1.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  static  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  static  double  elitismRate  =  1.0;	  private    static    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	73	4	replace
2751	[BUG]  [BUGGY]  public  static  final  double  elitismRate  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  static  final  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  static  final  double  elitismRate  =  1.0;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
2752	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0.01;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  0.01;	  private    static    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	73	None	replace
2753	[BUG]  [BUGGY]  Validate.notNull(registry,  elitismRate);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(registry,  elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(registry,  elitismRate);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2754	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  BigDecimal.INCRDECR_VALUE);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  BigDecimal.INCRDECR_VALUE);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  BigDecimal.INCRDECR_VALUE);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2755	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  0.;	  private    double    elitismRate    =    0.;    	compilable	  [FE]  AssertionError  	61	4	replace
2756	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  0.;	  private    double    elitismRate    =    0.;    	compilable	  [FE]  AssertionError  	61	4	replace
2757	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2758	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2759	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2760	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2761	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2762	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2763	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitismRate,  0,  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitismRate,  0,	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2764	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2765	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2766	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate  +  10.0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2767	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2768	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2769	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2770	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2771	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2772	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2773	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)super.elitismRate;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)super.elitismRate;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2774	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate;  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate;	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2775	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  *  elitismRate;  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  *  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  *  elitismRate;	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2776	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitism,  0,  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitism,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  System.arraycopy(elitism,  0,	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2777	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2778	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	24	None	add
2779	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2780	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2781	[BUG]  [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  20.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    20.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
2782	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.5;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  0.5;	  private    double    elitismRate    =    0.5;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	15	None	replace
2783	[BUG]  [BUGGY]  private  long  elitismRate  =  0.3;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.3;	  private    double    elitismRate    =    0.3;    	non-compiled	[CE]  possible  loss  of  precision	49	None	replace
2784	[BUG]  [BUGGY]  private  int  elitismRate  =  0.3;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.3;	  private    double    elitismRate    =    0.3;    	non-compiled	[CE]  possible  loss  of  precision	49	None	replace
2785	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.3;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  0.3;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  0.3;	  private    double    elitismRate    =    0.3;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	49	None	replace
2786	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2787	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2788	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2789	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2790	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2791	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2792	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2793	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2794	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2795	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2796	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2797	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2798	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2799	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2800	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2801	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2802	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2803	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2804	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next().doubleValue();  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next().doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next().doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2805	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2806	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next().doubleValue();  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next().doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next().doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2807	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2808	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2809	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2810	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2811	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
2812	[BUG]  [BUGGY]  private  long  elitismRate  =  5.0;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  5.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  5.0;	  private    double    elitismRate    =    5.0;    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
2813	[BUG]  [BUGGY]  private  int  elitismRate  =  5.0;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  5.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  5.0;	  private    double    elitismRate    =    5.0;    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
2814	[BUG]  [BUGGY]  private  final  double  elitismRate  =  5.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  5.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  5.0;	  private    double    elitismRate    =    5.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	63	None	replace
2815	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2816	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2817	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2818	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2819	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2820	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2821	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2822	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  3.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  3.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  3.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2823	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  3.0;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  3.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  3.0;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
2824	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2825	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2826	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2827	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2828	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  3.0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  3.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  3.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2829	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2830	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2831	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  2;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  2;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  2;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2832	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  1.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  1.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  1.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2833	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2834	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2835	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  2.0;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  2.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  2.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2836	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	28	None	add
2837	[BUG]  [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  2;  elitismRate++)  {  double  elitismRate  =  3.0;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  3.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  2;  elitismRate++)  {  double  elitismRate  =  3.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    3.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  2;  elitismRate++)  {  double  elitismRate  =  3.0;  }	  	non-compiled	[CE]  illegal  start  of  type	28	None	add
2838	[BUG]  [BUGGY]  short  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]          AssertionError    [CONTEXT]      [BUGGY]  short  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	short  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2839	[BUG]  [BUGGY]  char  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]            AssertionError    [CONTEXT]      [BUGGY]  char  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	char  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2840	[BUG]  [BUGGY]  Double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2841	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_WEEK));  [CE]  self-reference  in  initializer  [FE]                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_WEEK));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_WEEK));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2842	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(Double.NaN));  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(Double.NaN));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(Double.NaN));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
2843	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_LIST));  [CE]  self-reference  in  initializer  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_LIST));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_LIST));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2844	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MINUTE));  [CE]  self-reference  in  initializer  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MINUTE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MINUTE));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2845	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(ElitismConstants.MILLIS_PER_SIZE));  [CE]  cannot  find  symbol  ElitismConstants  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(ElitismConstants.MILLIS_PER_SIZE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(ElitismConstants.MILLIS_PER_SIZE));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  ElitismConstants	20	None	replace
2846	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_HOUR));  [CE]  self-reference  in  initializer  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_HOUR));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_HOUR));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2847	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_YEAR));  [CE]  self-reference  in  initializer  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_YEAR));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_YEAR));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
2848	[BUG]  [BUGGY]  int  elitismRate  =  getImplicitReturn();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getImplicitReturn();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getImplicitReturn();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2849	[BUG]  [BUGGY]  int  elitismRate  =  getAscentPopulationCount();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getAscentPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getAscentPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2850	[BUG]  [BUGGY]  int  elitismRate  =  getBase();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getBase();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getBase();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2851	[BUG]  [BUGGY]  int  elitismRate  =  getSize();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getSize();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getSize();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2852	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyColumnIndex();  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyColumnIndex();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyColumnIndex();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2853	[BUG]  [BUGGY]  int  elitismRate  =  getPosition();  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getPosition();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getPosition();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2854	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2855	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.5;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.5;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2856	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2857	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2858	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2859	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2860	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2861	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2862	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.5;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2863	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2864	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2865	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2866	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2867	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2868	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2869	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2870	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  <  Map.Entry  <  K,  V  >=  )  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2871	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2872	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2873	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  0.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  0.5;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2874	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2875	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2876	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2877	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
2878	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  0;	  private    double    elitismRate    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	59	None	replace
2879	[BUG]  [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  {  0  }   ");  [CE]  cannot  find  symbol  NumberInput  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  {  0  }   ");  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  NumberInput.parseAssertion( "  {  0  }   ");	  private    double    elitismRate    =    0;    	non-compiled	[CE]  cannot  find  symbol  NumberInput	59	None	replace
2880	[BUG]  [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ").doubleValue();  [CE]  cannot  find  symbol  NumberInput  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ").doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ").doubleValue();	  private    double    elitismRate    =    0;    	non-compiled	[CE]  cannot  find  symbol  NumberInput	59	None	replace
2881	[BUG]  [BUGGY]  private  double  elitismRate  =  NumberInput.parseNumber( "u000 ");  [CE]  cannot  find  symbol  NumberInput  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  NumberInput.parseNumber( "u000 ");  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  NumberInput.parseNumber( "u000 ");	  private    double    elitismRate    =    0;    	non-compiled	[CE]  cannot  find  symbol  NumberInput	59	None	replace
2882	[BUG]  [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ").length();  [CE]  cannot  find  symbol  NumberInput  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ").length();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ").length();	  private    double    elitismRate    =    0;    	non-compiled	[CE]  cannot  find  symbol  NumberInput	59	None	replace
2883	[BUG]  [BUGGY]  private  double  elitismRate  =  NumberInput.parseDouble( "0 ");  [CE]  cannot  find  symbol  NumberInput  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  NumberInput.parseDouble( "0 ");  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  NumberInput.parseDouble( "0 ");	  private    double    elitismRate    =    0;    	non-compiled	[CE]  cannot  find  symbol  NumberInput	59	None	replace
2884	[BUG]  [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ");  [CE]  cannot  find  symbol  NumberInput  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ");  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ");	  private    double    elitismRate    =    0;    	non-compiled	[CE]  cannot  find  symbol  NumberInput	59	None	replace
2885	[BUG]  [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ").returnZero();  [CE]  cannot  find  symbol  NumberInput  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ").returnZero();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  NumberInput.parseAssertion( "  <   ").returnZero();	  private    double    elitismRate    =    0;    	non-compiled	[CE]  cannot  find  symbol  NumberInput	59	None	replace
2886	[BUG]  [BUGGY]  private  long  elitismRate  =  1;  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  1;	  private    double    elitismRate    =    0;    	non-compiled	[CE]  possible  loss  of  precision	59	None	replace
2887	[BUG]  [BUGGY]  private  int  elitismRate  =  1;  [CE]  possible  loss  of  precision  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  1;	  private    double    elitismRate    =    0;    	non-compiled	[CE]  possible  loss  of  precision	59	None	replace
2888	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Double.NaN));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Double.NaN));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(Double.NaN));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2889	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MINUTE));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MINUTE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MINUTE));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2890	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate  -  1)));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate  -  1)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(Math.abs(elitismRate  -  1)));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2891	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_LIST));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_LIST));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_LIST));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2892	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_START));  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_START));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_START));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2893	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(0.0));  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(0.0));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(0.0));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2894	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_HOUR));  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_HOUR));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_HOUR));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2895	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.01;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.01;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.01;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2896	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.01;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.01;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.01;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2897	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2898	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2899	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2900	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2901	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2902	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2903	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.01;  System.arraycopy(elitismRate,  0,  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.01;  System.arraycopy(elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.01;  System.arraycopy(elitismRate,  0,	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2904	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2905	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2906	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2907	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.02;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.02;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.02;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2908	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2909	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2910	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2911	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2912	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2913	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
2914	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError().toString();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError().toString();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.01;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError().toString();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	22	None	add
2915	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2916	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2917	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2918	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2919	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2920	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2921	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2922	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2923	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2924	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2925	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2926	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2927	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2928	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2929	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2930	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	64	None	add
2931	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2932	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2933	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  1.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  1.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  1.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2934	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2935	[BUG]  [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	64	None	add
2936	[BUG]  [BUGGY]  Private  double  elitismRate  =  0.0;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Private  double  elitismRate  =  0.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Private  double  elitismRate  =  0.0;	      double    elitismRate    =    0.0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2937	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2938	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2939	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2940	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2941	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2942	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2943	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2944	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2945	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2946	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2947	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2948	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2949	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  System.arraycopy(elitism,  0,  this.elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  System.arraycopy(elitism,  0,  this.elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    System.arraycopy(elitism,  0,  this.elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
2950	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2951	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	34	None	add
2952	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2953	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2954	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2955	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.get  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.get  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.get	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2956	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2957	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2958	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2959	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  *  elitism  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  *  elitism  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  *  elitism	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2960	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2961	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2962	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2963	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionErrorImpl();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionErrorImpl();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionErrorImpl();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2964	[BUG]  [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  ==  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.1;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  ==  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.1;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  ==  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
2965	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  4.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  4.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2966	[BUG]  [BUGGY]  protected  double  elitismRate  =  4.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  4.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  4.0;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2967	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  1.2;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2968	[BUG]  [BUGGY]  protected  double  elitismRate  =  1.2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  1.2;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2969	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  1.7;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2970	[BUG]  [BUGGY]  protected  double  elitismRate  =  1.7;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.7;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  1.7;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2971	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	protected  double  elitismRate  =  1.6;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2972	[BUG]  [BUGGY]  protected  double  elitismRate  =  1.6;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  1.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected  double  elitismRate  =  1.6;	  protected    double    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	69	4	replace
2973	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  3.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  3.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2974	[BUG]  [BUGGY]  public  double  elitismRate  =  3.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  3.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  3.0;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2975	[BUG]  [BUGGY]  public  final  double  elitismRate  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  final  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  final  double  elitismRate  =  1.0;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	75	None	replace
2976	[BUG]  [BUGGY]  public  long  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  long  elitismRate  =  1.0;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	75	None	replace
2977	[BUG]  [BUGGY]  public  int  elitismRate  =  1.0;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  int  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  int  elitismRate  =  1.0;	  public    double    elitismRate    =    1.0;    	non-compiled	[CE]  possible  loss  of  precision	75	None	replace
2978	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	public  double  elitismRate  =  0.25;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2979	[BUG]  [BUGGY]  public  double  elitismRate  =  0.25;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  double  elitismRate  =  0.25;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	public  double  elitismRate  =  0.25;	  public    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	75	4	replace
2980	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2981	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2982	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2983	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2984	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2985	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2986	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2987	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2988	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2989	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2990	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2991	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2992	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2993	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2994	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2995	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2996	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2997	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2998	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
2999	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
3000	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
3001	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
3002	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  entry.getValue());  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  entry.getValue());  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  System.arraycopy(elitismRate,  0,  entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
3003	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
3004	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3005	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3006	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3007	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3008	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	68	None	add
3009	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  elitismRate  +=  entry.getValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  elitismRate  +=  entry.getValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  elitismRate  +=  entry.getValue();  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3010	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	68	None	add
3011	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3012	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3013	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  int  elitismRate  =(int)Math.pow(10,  Math.log(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  int  elitismRate  =(int)Math.pow(10,  Math.log(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    int  elitismRate  =(int)Math.pow(10,  Math.log(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	68	None	add
3014	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  int  elitismRate  =(int)Math.floor(1.0,  Math.pow(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  int  elitismRate  =(int)Math.floor(1.0,  Math.pow(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    int  elitismRate  =(int)Math.floor(1.0,  Math.pow(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	68	None	add
3015	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.9;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.9;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.9;  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3016	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	68	None	add
3017	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  2.0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  2.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  2.0;  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3018	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	68	None	add
3019	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3020	[BUG]  [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  protected  double  elitismRate  =  0.9;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	protected    double    elitismRate    =    0.9;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.5;  }	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
3021	[BUG]  [BUGGY]  private  final  double  elitismRate  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  1.0;	  private    double    elitismRate    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	7	None	replace
3022	[BUG]  [BUGGY]  private  final  double  elitismRate  =  10.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  10.0;	  private    double    elitismRate    =    10.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	13	None	replace
3023	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3024	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3025	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3026	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3027	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3028	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3029	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3030	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3031	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3032	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3033	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3034	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3035	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.5;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3036	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3037	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3038	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3039	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3040	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3041	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.5;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3042	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3043	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.5;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.5;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3044	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3045	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  <  Number>  elitismRate)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  <  Number>  elitismRate)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  <  Number>  elitismRate)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3046	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3047	[BUG]  [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.5;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.5;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  0.5;  }	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
3048	[BUG]  [BUGGY]  private  int  elitismRate  =  9.0;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  9.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  9.0;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
3049	[BUG]  [BUGGY]  private  int  elitismRate  =  1.;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  1.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  1.;	  private    long    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
3050	[BUG]  [BUGGY]  private  long  elitismRate  =  1000;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  1000;	  private    double    elitismRate    =    1000;    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
3051	[BUG]  [BUGGY]  private  final  double  elitismRate  =  1000;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  1000;	  private    double    elitismRate    =    1000;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	43	None	replace
3052	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  static  double  elitismRate  =  1000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
3053	[BUG]  [BUGGY]  private  static  double  elitismRate  =  1000;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  double  elitismRate  =  1000;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  double  elitismRate  =  1000;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
3054	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1900;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1900;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
3055	[BUG]  [BUGGY]  private  double  elitismRate  =  1900;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1900;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1900;	  private    double    elitismRate    =    1000;    	compilable	  [FE]  AssertionError  	43	4	replace
3056	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3057	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3058	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3059	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3060	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3061	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3062	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3063	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3064	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3065	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3066	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3067	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
3068	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3069	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3070	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3071	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3072	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	48	None	add
3073	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3074	[BUG]  [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.3;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.3;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
3075	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3076	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
3077	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3078	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3079	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3080	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3081	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3082	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3083	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3084	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3085	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3086	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3087	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NEGATIVE_INFINITY;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NEGATIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	36	None	add
3088	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3089	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3090	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3091	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3092	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3093	[BUG]  [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.7;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.7;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	36	None	add
3094	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3095	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3096	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3097	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3098	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3099	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3100	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  ==  null;  elitismRate++)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  ==  null;  elitismRate++)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  ==  null;  elitismRate++)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3101	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3102	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3103	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1000;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1000;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1000;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3104	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3105	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3106	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3107	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3108	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3109	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  100;  elitismRate++)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  100;  elitismRate++)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  100;  elitismRate++)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3110	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3111	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3112	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3113	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3114	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <  100);  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <  100);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <  100);  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3115	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3116	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  <  String>  elitismRate)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  <  String>  elitismRate)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  <  String>  elitismRate)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3117	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  System.arraycopy(elitismRate,  0,	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3118	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3119	[BUG]  [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  100;  }  [CE]  illegal  start  of  type  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  100;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  100;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    100;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  100;  }	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
3120	[BUG]  [BUGGY]  private  long  elitismRate  =  9.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  9.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  9.0;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
3121	[BUG]  [BUGGY]  private  float  elitismRate  =  0.;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  float  elitismRate  =  0.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  float  elitismRate  =  0.;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
3122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  9.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  9.;	  private    int    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	71	4	replace
3123	[BUG]  [BUGGY]  private  double  elitismRate  =  9.;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  9.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  9.;	  private    int    elitismRate    =    0.9;    	compilable	  [FE]  AssertionError  	71	4	replace
3124	[BUG]  [BUGGY]  private  long  elitismRate  =  1.;  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  1.;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  1.;	  private    int    elitismRate    =    0.9;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
3125	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3126	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3127	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3128	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3129	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3130	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3131	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3132	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3133	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3134	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3135	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3136	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3137	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  *  elitism  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  *  elitism  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  *  elitism	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3138	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3139	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3140	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3141	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(!elitismRate.equals(elitismRate));	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3142	[BUG]  [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.8;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.8;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
3143	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3144	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3145	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
3146	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3147	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3148	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3149	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3150	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3151	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3152	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3153	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
3154	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3155	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3156	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3157	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3158	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  System.arraycopy(elitism,  0,  this.elitismRate,  0,  elitismRate);  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  System.arraycopy(elitism,  0,  this.elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    System.arraycopy(elitism,  0,  this.elitismRate,  0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
3159	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3160	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3161	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3162	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  0;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3163	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	62	None	add
3164	[BUG]  [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  5.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    5.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
3165	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3166	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3167	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	56	None	add
3168	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3169	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3170	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3171	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkNotNull(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3172	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3173	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3174	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3175	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate.doubleValu	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3176	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3177	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3178	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3179	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Preconditions.checkState(elitismRate  <=  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3180	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  Double.parseDouble(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3181	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3182	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.5;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.5;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3183	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  ++elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3184	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3185	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  :  values())  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3186	[BUG]  [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.6;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.6;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.intValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
3187	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
3188	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  assertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  assertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    assertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	54	None	add
3189	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	54	None	add
3190	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  Preconditions.checkNotNull(elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  Preconditions.checkNotNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    Preconditions.checkNotNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
3191	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  Double.parseDouble(elitismRate);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  Double.parseDouble(elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  Double.parseDouble(elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3192	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.max(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.max(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =(int)Math.pow(10,  Math.max(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
3193	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.log(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.log(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =(int)Math.pow(10,  Math.log(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
3194	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3195	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3196	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  Math.max(1.0,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  Math.max(1.0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  Math.max(1.0,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3197	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));	  	non-compiled	[CE]  <identifier>  expected	54	None	add
3198	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
3199	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(20,  Math.pow(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(20,  Math.pow(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =(int)Math.pow(20,  Math.pow(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
3200	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  Math.max(0.001,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  Math.max(0.001,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  Math.max(0.001,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3201	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3202	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3203	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.floor(0.0,  Math.pow(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.floor(0.0,  Math.pow(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =(int)Math.floor(0.0,  Math.pow(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
3204	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  assertionError  =  new  AssertionError(1.0,  1.0);  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  assertionError  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    assertionError  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
3205	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  new  AssertionError();  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  new  AssertionError();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  new  AssertionError();  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3206	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate).doubleValue();  [CE]  ')'  expected  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate).doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =(int)Math.pow(10,  Math.pow(10,  elitismRate).doubleValue();	  	non-compiled	[CE]  ')'  expected	54	None	add
3207	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  new  AssertionError(0);  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  new  AssertionError(0);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  new  AssertionError(0);  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3208	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  assertionError  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  assertionError  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    assertionError  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	54	None	add
3209	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    for(AssertionError  <  Number>  elitismRate)  {  if(elitismRate  >  0.0)  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	54	None	add
3210	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.floor(1.0,  Math.pow(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.floor(1.0,  Math.pow(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =(int)Math.floor(1.0,  Math.pow(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
3211	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  assertionError  =  new  AssertionError(1.0,  Math.max(1.0,  elitismRate));  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  assertionError  =  new  AssertionError(1.0,  Math.max(1.0,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    assertionError  =  new  AssertionError(1.0,  Math.max(1.0,  elitismRate));	  	non-compiled	[CE]  <identifier>  expected	54	None	add
3212	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.pow(20,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.pow(20,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =(int)Math.pow(10,  Math.pow(20,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
3213	[BUG]  [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.min(10,  elitismRate));  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.001;  int  elitismRate  =(int)Math.pow(10,  Math.min(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.001;    int  elitismRate  =(int)Math.pow(10,  Math.min(10,  elitismRate));	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	54	None	add
3214	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.25;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3215	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  0.25;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3216	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.25;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.25;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  0.25;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3217	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3218	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  0.25;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3219	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3220	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3221	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  0.25;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3222	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3223	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3224	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  1;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3225	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3226	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3227	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  2;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  2;  elitismRate++)  {  double  elitismRate  =  0.25;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  <  2;  elitismRate++)  {  double  elitismRate  =  0.25;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3228	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3229	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  0.0;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3230	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  0.25;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  0.25;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  <  Integer>  elitismRate)  {  double  elitismRate  =  0.25;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3231	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3232	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3233	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3234	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError(0);  elitismRate  >  0.0)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3235	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;  elitismRate  >  0;)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3236	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  0.25;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  0.25;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0.0)  {  double  elitismRate  =  0.25;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3237	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [CE]  illegal  start  of  type  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.intValue();  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3238	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  0.25;  }  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  0.25;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  values())  {  double  elitismRate  =  0.25;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3239	[BUG]  [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.25;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.25;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
3240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  11.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  11.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
3241	[BUG]  [BUGGY]  double  elitismRate  =  11.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  11.0;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  11.0;	      double    elitismRate    =    10.0;    	compilable	  [FE]  AssertionError  	2	4	replace
3242	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3243	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3244	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3245	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3246	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3247	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3248	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3249	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate.doubleValue()  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3250	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3251	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate);  elitismRate  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3252	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3253	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate  +  10.0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate  +  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  elitismRate  *  elitismRate  +  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3254	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3255	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)super.elitismRate;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)super.elitismRate;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
3256	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3257	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate  +=  elitismRate.doubleValue())  {  return  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3258	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  assertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  assertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    assertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	46	None	add
3259	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  10.0;  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3260	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  10.0;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
3261	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
3262	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1.0;  }	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3263	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  +=  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3264	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >  0;)  {  double  elitismRate  =  elitismRate.doubleValue();	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
3265	[BUG]  [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null.doubleValue();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  30.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    30.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError  <  AssertionError>)null.doubleValue();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	46	None	add
3266	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3267	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3268	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3269	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.next();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.next();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.next();  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3270	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3271	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3272	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1000;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1000;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  map.entrySet())  {  double  elitismRate  =  1000;  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3273	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  System.arraycopy(elitismError,  0,  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  System.arraycopy(elitismError,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  System.arraycopy(elitismError,  0,	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3274	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3275	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.next();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.next();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.next();	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3276	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1000;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1000;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  null;  elitismRate++)  {  double  elitismRate  =  1000;  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3277	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3278	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3279	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  System.arraycopy(elitismError,  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  System.arraycopy(elitismError,  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getValue();  System.arraycopy(elitismError,	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3280	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1000;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1000;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate!=  1;  elitismRate++)  {  double  elitismRate  =  1000;  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3281	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1000;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1000;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1000;  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3282	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  new  HashMap  <  String,Object>())  {  double  elitismRate  =  1000;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  new  HashMap  <  String,Object>())  {  double  elitismRate  =  1000;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Map.Entry  <  String,Object>  entry  :  new  HashMap  <  String,Object>())  {  double  elitismRate  =  1000;  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3283	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  +=  it.getValue();  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3284	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1000;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1000;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionErrorImpl();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1000;  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3285	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getLocalMillis();  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getLocalMillis();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismError  =  new  AssertionError();  elitismError.hasNext();)  {  double  elitismRate  =  elitismError.getLocalMillis();	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3286	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  System.arraycopy(elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  System.arraycopy(elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  System.arraycopy(elitismRate,  0,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3287	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1000;  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1000;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  elitismRate  =  new  AssertionError();  elitismRate  >=  1;  elitismRate++)  {  double  elitismRate  =  1000;  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3288	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1;  }  [CE]  illegal  start  of  type  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1;  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3289	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    assertionError  =  new  AssertionError(DateTimeUtils.currentTimeMillis(),  DateTimeConstants.MILLIS_PER_SECOND);	  	non-compiled	[CE]  <identifier>  expected	42	None	add
3290	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  System.arraycopy(it.next(),  0,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  System.arraycopy(it.next(),  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  double  elitismRate  =  it.next();  System.arraycopy(it.next(),  0,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3291	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1000;  }  [CE]  illegal  start  of  type  [FE]                                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1000;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError(0);  it.hasNext();)  {  double  elitismRate  =  it.next();  elitismRate  =  1000;  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3292	[BUG]  [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  elitismRate  +=  it.next();  }  [CE]  illegal  start  of  type  [FE]                                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1000;  for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  elitismRate  +=  it.next();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1000;    for(AssertionError  <  Integer>  it  =  new  AssertionError();  it.hasNext();)  {  elitismRate  +=  it.next();  }	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
3293	[BUG]  [BUGGY]  private  int  elitismRate  =  0.05;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  int  elitismRate  =  0.05;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  int  elitismRate  =  0.05;	  private    double    elitismRate    =    0.05;    	non-compiled	[CE]  possible  loss  of  precision	67	None	replace
3294	[BUG]  [BUGGY]  private  long  elitismRate  =  0.05;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.05;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.05;	  private    double    elitismRate    =    0.05;    	non-compiled	[CE]  possible  loss  of  precision	67	None	replace
3295	[BUG]  [BUGGY]  Validate.notNull(elitismValue);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismValue);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismValue);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3296	[BUG]  [BUGGY]  Validate.notNull(elitismList);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismList);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismList);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3297	[BUG]  [BUGGY]  Validate.notNull(elitismFactory);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismFactory);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismFactory);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3298	[BUG]  [BUGGY]  Validate.notNull(type);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(type);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(type);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3299	[BUG]  [BUGGY]  Validate.notNull(population,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(population,  false);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(population,  false);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3300	[BUG]  [BUGGY]  Validate.notNull(elitismName);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismName);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismName);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3301	[BUG]  [BUGGY]  Validate.notNull(elitismStandard);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismStandard);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismStandard);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3302	[BUG]  [BUGGY]  Validate.notNull(elitismClass);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismClass);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismClass);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3303	[BUG]  [BUGGY]  Validate.notNull(elitismType);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismType);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismType);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
3304	[BUG]  [BUGGY]  private  final  double  elitismRate  =  0.6;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  0.6;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  0.6;	  private    double    elitismRate    =    0.6;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	57	None	replace
3305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.65;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.65;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
3306	[BUG]  [BUGGY]  private  double  elitismRate  =  0.65;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.65;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.65;	  private    double    elitismRate    =    0.6;    	compilable	  [FE]  AssertionError  	57	4	replace
3307	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Token.EXPR_RESULT);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3308	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3309	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate;  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3310	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3311	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3312	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;  [CE]  type  AssertionError  does  not  take  parameters  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3313	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3314	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  System.currentTimeMillis();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3315	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NaN;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Double.NaN;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3316	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0f);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3317	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  double.doubleValue();  [CE]  class  expected  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  double.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  double.doubleValue();	  	non-compiled	[CE]  class  expected	58	None	add
3318	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Sets.newHashSet();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Sets.newHashSet();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  Sets.newHashSet();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3319	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.MAX_VALUE);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.MAX_VALUE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.MAX_VALUE);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3320	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0,  1.0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0.0,  1.0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3321	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0d);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3322	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.MIN_VALUE);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.MIN_VALUE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.MIN_VALUE);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3323	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.NaN);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.NaN);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(Double.NaN);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3324	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =(AssertionError)super.elitismRate();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3325	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3326	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  1;  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  1;	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3327	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(1.0,  1);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3328	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  assertionError  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  assertionError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    assertionError  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	58	None	add
3329	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(this);  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(this);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(this);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3330	[BUG]  [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionErrorImpl();  [CE]  type  AssertionError  does  not  take  parameters  [FE]                                                  AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionErrorImpl();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionErrorImpl();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	58	None	add
3331	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Double.NaN));  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Double.NaN));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(Double.NaN));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3332	[BUG]  [BUGGY]  elitismRate  =  Math.min(0.0,  Math.abs(elitismRate  +  1));  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.min(0.0,  Math.abs(elitismRate  +  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.min(0.0,  Math.abs(elitismRate  +  1));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3333	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.001,  Math.abs(elitismRate  +  1));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.001,  Math.abs(elitismRate  +  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.001,  Math.abs(elitismRate  +  1));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3334	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_WEEK));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_WEEK));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_WEEK));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3335	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MINUTE));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MINUTE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  *  DateTimeConstants.SECONDS_PER_MINUTE));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3336	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Math.abs(elitismRate  -  1)));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(Math.abs(elitismRate  -  1)));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(Math.abs(elitismRate  -  1)));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3337	[BUG]  [BUGGY]  private  final  double  elitismRate  =  20.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  final  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  final  double  elitismRate  =  20.0;	  private    double    elitismRate    =    20.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	25	None	replace
3338	[BUG]  [BUGGY]  private  static  final  double  elitismRate  =  20.0;  [CE]  cannot  assign  a  value  to  final  variable  elitismRate  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  elitismRate  =  20.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  static  final  double  elitismRate  =  20.0;	  private    double    elitismRate    =    20.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  elitismRate	25	None	replace
