bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
3	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
7	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
8	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
9	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	21	None	replace
10	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
11	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
12	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
13	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
14	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
15	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
16	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
17	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " "));  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	21	None	replace
18	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
19	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
20	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ", ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit  +  1);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.doubleValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.doubleValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.doubleValue());	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationsLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit  -  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit  -  1);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  1,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  1,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  1,  this.elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(publicationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(publicationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(publicationLimit,  0,  this.elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  size);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  size);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  demographicLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.serialRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.serialRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.serialRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(pubulationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(pubulationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(pubulationLimit,  0,  this.elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.intValue());  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.intValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.intValue());	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit;  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit;	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  ')'  expected	10	None	replace
43	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
44	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
45	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
46	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
47	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
48	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
49	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
50	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
51	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
52	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	24	None	replace
53	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
54	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
55	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
56	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ".);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
58	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( ", ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " "));  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	24	None	replace
60	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
61	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  e  [CE]  ')'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
62	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
63	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
65	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationL  [CE]  ')'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
66	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLi  [CE]  ')'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLi	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
67	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  e  [CE]  ')'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
68	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  PopulationLimit.  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  PopulationLimit.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  PopulationLimit.	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
69	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate  [CE]  ')'  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
70	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
71	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
72	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
73	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  population  [CE]  ')'  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  population  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  population	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
74	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit,  e  [CE]  ')'  expected  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
75	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit,  e  [CE]  ')'  expected  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
76	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  PopulationLimit  [CE]  ')'  expected  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  PopulationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  PopulationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
77	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit,  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
78	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit,  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
79	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  type  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
80	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  PopulationL  [CE]  ')'  expected  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  PopulationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  PopulationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
81	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
82	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitis  [CE]  ')'  expected  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitis  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitis	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
83	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitism  [CE]  ')'  expected  [FE]                                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitism  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitism	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  +  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  numberLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  numberLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationsLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  +  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  +  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  +  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  1,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  1,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  1,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  new  double[]  {  elitismRate  }  );	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  size);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  size);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populateLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  2,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  2,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  2,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  demographicLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  colon);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  colon);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  colon);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  +  1,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  +  1,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  +  1,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  /  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  /  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  /  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elimRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elimRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elimRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  10,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  10,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  10,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(elitismRate,  0,  this.populationLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(elitismRate,  0,  this.populationLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(elitismRate,  0,  this.populationLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
102	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
103	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
104	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
105	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.elitismRate  =  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.elitismRate  =  populationLimit;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
106	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToIntBits(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToIntBits(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.doubleToIntBits(populationLimit);  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
108	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
109	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  not  a  statement  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
110	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
111	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
112	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToIntBit(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToIntBit(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.doubleToIntBit(populationLimit);  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
113	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToIntBits(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToIntBits(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.doubleToIntBits(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
114	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
115	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
116	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToIntBounds(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToIntBounds(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.doubleToIntBounds(populationLimit);  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
117	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.MIN_VALUE;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.MIN_VALUE;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.MIN_VALUE;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
118	[BUG]  [BUGGY]  populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
119	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToInt(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleToInt(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.doubleToInt(populationLimit);  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
120	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
121	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
122	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  this.elitismRate;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  this.elitismRate;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  this.elitismRate;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
123	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  1;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  1;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  1;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
124	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
125	[BUG]  [BUGGY]  each.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  each.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	each.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
126	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
127	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
128	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
129	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
130	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
131	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
132	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
133	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
134	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
135	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
136	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
137	[BUG]  [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
138	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
139	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  not  a  statement  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	46	None	replace
140	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
141	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
142	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
143	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
144	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
145	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
146	[BUG]  [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate,  size);  }  [CE]  <identifier>  expected  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate,  size);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate,  size);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
147	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
148	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
149	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  [CE]  <identifier>  expected  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
150	[BUG]  [BUGGY]  for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
151	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
152	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  this.elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  this.elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
153	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
154	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populationLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
155	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  elitismRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
156	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
157	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  false);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  false);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  false);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
158	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  0);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  0);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
159	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  +  1);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
160	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  1.0);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  1.0);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
161	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
162	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populateLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populateLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populateLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
163	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit  +  elitismRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
164	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit  -  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit  -  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit  -  elitismRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
165	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  0.0);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  0.0);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
166	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  null);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  null);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  null);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
167	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populateLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
168	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  numberLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
169	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  size);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  size);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
170	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  true);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  true);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
171	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit  /  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit  /  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationLimit  /  elitismRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
172	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationRimit);  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationRimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populationRimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
173	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  -1);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  -1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  -1);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
174	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate)+  1;  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate)+  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate)+  1;	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
175	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  double  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  double  elitismRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	16	None	replace
176	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  demographicLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
177	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate),  populationLimit);  [CE]  ';'  expected  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate),  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate),  populationLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  ';'  expected	16	None	replace
178	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  0,  elitismRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
179	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  -populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  -populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  -populationLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
180	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
181	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
182	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  not  a  statement  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  not  a  statement	18	None	replace
183	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  double  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  double  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  double  elitismRate)  {  this.populationLimit  =  elitismRate;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
185	[BUG]  [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
186	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  not  a  statement  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  not  a  statement	18	None	replace
187	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
188	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
189	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
190	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
191	[BUG]  [BUGGY]  if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
192	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
193	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
194	[BUG]  [BUGGY]  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
195	[BUG]  [BUGGY]  if(populationLimit!=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit!=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit!=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
196	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
197	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  numberLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
198	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimitRate);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimitRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimitRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
199	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLi  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLi	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
200	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  int  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  int  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  int  elitismRate)  {  this.populationLimit  =  elitismRate;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
201	[BUG]  [BUGGY]  if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
202	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
203	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
204	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
205	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
206	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  ';'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
207	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array  [CE]  ';'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
208	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
209	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array  [CE]  not  a  statement  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  not  a  statement	62	None	replace
210	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  ';'  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
211	[BUG]  [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  not  a  statement  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  not  a  statement	62	None	replace
212	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.  [CE]  ';'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
213	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
214	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra  [CE]  not  a  statement  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  not  a  statement	62	None	replace
215	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLi  [CE]  ')'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLi	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ')'  expected	62	None	replace
216	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
217	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationL  [CE]  ')'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationL	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ')'  expected	62	None	replace
218	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  <identifier>  expected	62	None	replace
219	[BUG]  [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  not  a  statement  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  not  a  statement	62	None	replace
220	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
221	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLi  [CE]  ';'  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLi	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
222	[BUG]  [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.  [CE]  not  a  statement  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  not  a  statement	62	None	replace
223	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population  [CE]  ')'  expected  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ')'  expected	62	None	replace
224	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
225	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
226	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
227	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
228	[BUG]  [BUGGY]  for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
229	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
230	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
231	[BUG]  [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
232	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
233	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
234	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
235	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
236	[BUG]  [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  size;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  size;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  size;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
237	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
238	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
239	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
240	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  numberLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  numberLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  numberLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
241	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
242	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
243	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
244	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
245	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  null;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  null;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
246	[BUG]  [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
247	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
248	[BUG]  [BUGGY]  for(final  int  numberLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  numberLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  numberLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  numberLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  numberLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  numberLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
249	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  number;  }  [CE]  illegal  start  of  expression  [FE]                                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  number;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  number;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
250	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  new  double(populationLimit);  }  [CE]  '['  expected  [FE]                                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  new  double(populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  new  double(populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  '['  expected	52	None	replace
251	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  total;  }  [CE]  illegal  start  of  expression  [FE]                                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  total;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  total;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
252	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit  +  1;  }  [CE]  illegal  start  of  expression  [FE]                                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit  +  1;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit  +  1;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
253	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
254	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
255	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
256	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationsLimit);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationsLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationsLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
257	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
258	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  <  elitismRate)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  [CE]  ';'  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  <  elitismRate)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  <  elitismRate)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
259	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit  [CE]  ')'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	20	None	replace
260	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
261	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	20	None	replace
262	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  int  elitismRate,  populationLimit);  }  [CE]  '.class'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  int  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  int  elitismRate,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  '.class'  expected	20	None	replace
263	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  BevölkerungLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  BevölkerungLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  BevölkerungLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
264	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
265	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateL  [CE]  ')'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populateL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	20	None	replace
266	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <=  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <=  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <=  populationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
267	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
268	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  >  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  >  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  >  populationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
269	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  >=  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  >=  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  >=  populationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
270	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  +  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  +  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit  +  elitismRate);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
271	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  +  1);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  +  1);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit  +  1);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
272	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  +  1,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  +  1,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit  +  1,  elitismRate);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
273	[BUG]  [BUGGY]  preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
274	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
275	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  elitismRate);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
276	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  ')'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit;  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	55	None	replace
277	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  ==  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  ==  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  ==  populationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
278	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
279	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  PopulationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  PopulationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  PopulationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
280	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  PopulationLimit.MINUTE);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  PopulationLimit.MINUTE);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  PopulationLimit.MINUTE);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
281	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  numberLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  numberLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  numberLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
282	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  0);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  0);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  0);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
283	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit!=  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit!=  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit!=  populationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
284	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
285	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  +  1;  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  +  1;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
286	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  1);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  1);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  1);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  PopulationLimit.MIN_VALUE);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  PopulationLimit.MIN_VALUE);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  PopulationLimit.MIN_VALUE);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
288	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <=  numberLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <=  numberLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <=  numberLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
289	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  size);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  size);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  size);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  -=  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  -=  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  -=  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
291	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
292	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
293	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	39	None	replace
294	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitism);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitism);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitism);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
295	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
296	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
297	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  not  a  statement  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	39	None	replace
298	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
299	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
300	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
301	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
302	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
303	[BUG]  [BUGGY]  semifinal  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  not  a  statement  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  semifinal  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	semifinal  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	39	None	replace
304	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  1,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  1,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  1,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
305	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleValue();  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleValue();  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.doubleValue();  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
306	[BUG]  [BUGGY]  final  int  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
307	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
308	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  size);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  size);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
309	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  system.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  system.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  system.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
310	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
311	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
312	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  denominator);  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  denominator);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  denominator);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
313	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismMask);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismMask);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismMask);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
314	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
315	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	54	None	replace
316	[BUG]  [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
317	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  size);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  size);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
318	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationsLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
319	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
320	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	54	None	replace
321	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
322	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.doubleValue());  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.doubleValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.doubleValue());	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
323	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
324	[BUG]  [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  ';'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
325	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
326	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.instance);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.instance);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.instance);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
327	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationL  [CE]  ')'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
328	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
329	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit  [CE]  ')'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
330	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLi  [CE]  ')'  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLi	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
331	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  numberLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
332	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationsLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationsLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationsLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
333	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  population  [CE]  ')'  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  population  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  population	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
334	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  PopulationLimit.  [CE]  <identifier>  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  PopulationLimit.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  PopulationLimit.	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
335	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
336	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  number  [CE]  ')'  expected  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  number  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  number	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
337	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  PopulationL  [CE]  ')'  expected  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  PopulationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  PopulationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
338	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  type  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
339	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	32	None	replace
340	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  int  elitismRate,  0,  populationLimit);  }  [CE]  '.class'  expected  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  int  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  int  elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  '.class'  expected	32	None	replace
341	[BUG]  [BUGGY]  super(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
342	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
343	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
344	[BUG]  [BUGGY]  n(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  n(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	n(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
345	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
346	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
347	[BUG]  [BUGGY]  if(populationLimit  ==  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  ==  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  ==  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
348	[BUG]  [BUGGY]  luate(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  luate(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	luate(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
349	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
350	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
351	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
352	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
353	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
354	[BUG]  [BUGGY]  set(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  set(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	set(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
355	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit  +  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
356	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	15	None	replace
357	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [CE]  ')'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	15	None	replace
358	[BUG]  [BUGGY]  if(populationLimit  >  PopulationLimit.MIN_VALUE)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  PopulationLimit.MIN_VALUE)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  PopulationLimit.MIN_VALUE)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
359	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
360	[BUG]  [BUGGY]  setPopulationLimit(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulationLimit(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulationLimit(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
361	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
362	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
363	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
364	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  }  else  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  }  else  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  }  else  {  this.elitismRate  =  elitismRate;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
365	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
366	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
367	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
368	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
369	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populateLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
370	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e  [CE]  ')'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
371	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
372	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
373	[BUG]  [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
374	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	61	None	replace
375	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e  [CE]  ')'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
376	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  number;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  number;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  number;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
377	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populateLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
378	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
379	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
380	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  PopulationLimit.NaN,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  PopulationLimit.NaN,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  PopulationLimit.NaN,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
381	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
382	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  numberLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  numberLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  numberLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
383	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
384	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitis  [CE]  ')'  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitis  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitis	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
385	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  PopulationLimit.ZERO,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  PopulationLimit.ZERO,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  PopulationLimit.ZERO,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
386	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  numberLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  numberLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  numberLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
387	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit  +  1,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit  +  1,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit  +  1,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
388	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
389	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
390	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  ';'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
391	[BUG]  [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [CE]  not  a  statement  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	41	None	replace
392	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  }  [CE]  ';'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
393	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [CE]  ';'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
394	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }  [CE]  ';'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
395	[BUG]  [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  ';'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
396	[BUG]  [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  not  a  statement  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	41	None	replace
397	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  [CE]  ';'  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
398	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit);  }  [CE]  ';'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
399	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate,  populationLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
400	[BUG]  [BUGGY]  setPopulation(populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
401	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
402	[BUG]  [BUGGY]  setPosition(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPosition(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPosition(populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
403	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate  +  1);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
404	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate  +  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate  +  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate  +  populationLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
405	[BUG]  [BUGGY]  setPopulation(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  populationLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
406	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  super.setPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  super.setPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  super.setPopulation(populationLimit,  elitismRate);  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
407	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate,  populateLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
408	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  this.elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  this.elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  this.elitismRate,  elitismRate);  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
409	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
410	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  elitismRate);  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
411	[BUG]  [BUGGY]  setPopulation(populationLimit,  populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  populationLimit  +  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
412	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate);  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
413	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  this.populationLimit  =  populationLimit;  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
414	[BUG]  [BUGGY]  setStandardPopulation(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setStandardPopulation(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setStandardPopulation(populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
415	[BUG]  [BUGGY]  setPopulation(populationLimit,  populateLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  populateLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  populateLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
416	[BUG]  [BUGGY]  setLimit(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setLimit(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setLimit(populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
417	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  setPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  setPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  setPopulation(populationLimit,  elitismRate);  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
418	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
419	[BUG]  [BUGGY]  setPopulation(populationLimit,  populationLimit  -  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  populationLimit  -  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  populationLimit  -  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
420	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  this.elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  this.elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  this.elitismRate);  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
421	[BUG]  [BUGGY]  setPopulation(populationLimit,  populationRimit);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  populationRimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  populationRimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
422	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  this.elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  this.elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  this.elitismRate);  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
423	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulation(populationLimit,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
424	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
425	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
426	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
427	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
428	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
429	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate,  int  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate,  int  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate,  int  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
430	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
431	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
432	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  not  a  statement  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  not  a  statement	31	None	replace
433	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
434	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
435	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
436	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
437	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
438	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
439	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
440	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
441	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
442	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(this.populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(this.populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(this.populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
443	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  not  a  statement  [FE]                                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  not  a  statement	31	None	replace
444	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
445	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(this.populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(this.populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(this.populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
446	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  numberLimit,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
447	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
448	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
449	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
450	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
451	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populationLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
452	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit,  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
453	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  +  1);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
454	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
455	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit  +  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
456	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationRimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationRimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationRimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
457	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit  -  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit  -  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit  -  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
458	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  false);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  false);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  false);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
459	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populateLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populateLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populateLimit,  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
460	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  numberLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
461	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populateLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
462	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  double  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  double  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	12	None	replace
463	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit  /  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit  /  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populationLimit  /  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
464	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  0);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  0);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
465	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  size);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  size);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
466	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  true);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  true);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
467	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  null);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  null);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  null);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
468	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  elitism);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  elitism);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  elitism);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
469	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate)+  1;  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate)+  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate)+  1;	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
470	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  demographicLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
471	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  1.0);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  1.0);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
472	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPositionLimit(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPositionLimit(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPositionLimit(populationLimit,  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
473	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  new  double[elitismRate]);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  new  double[elitismRate]);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  new  double[elitismRate]);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
474	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  0,  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
475	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populations);  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populations);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populations);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
476	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  1;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
477	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  /  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
478	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
479	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  ';'  expected	2	None	replace
480	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  1;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
481	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  *  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
482	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue(populationLimit  +  elitismRate);	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
483	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  elitismRate;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  +  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
484	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  super.populationLimit;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  super.populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  super.populationLimit;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
485	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  1,  elitismRate;  [CE]  ';'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  1,  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  1,  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  ';'  expected	2	None	replace
486	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  elitismRate;  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
487	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  double  elitismRate;  [CE]  '.class'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  double  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  double  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  '.class'  expected	2	None	replace
488	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  numberLimit;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  numberLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  numberLimit;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
489	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  size;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  size;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  size;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
490	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate);  [CE]  ';'  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate);	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  ';'  expected	2	None	replace
491	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  2;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  2;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
492	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  new  double(elitismRate);  [CE]  '['  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  new  double(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  new  double(elitismRate);	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  '['  expected	2	None	replace
493	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.MIN_VALUE  +  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.MIN_VALUE  +  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.MIN_VALUE  +  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
494	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue(populationLimit,  elitismRate);	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
495	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit)+  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit)+  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue(populationLimit)+  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
496	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  populateLimit;  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  populateLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  populateLimit;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
497	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  super.populationLimit;  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  super.populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  super.populationLimit;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
498	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  new  Double(elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  new  Double(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  new  Double(elitismRate);	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
499	[BUG]  [BUGGY]  this.populationLimit  =  populationsLimit  +  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationsLimit  +  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationsLimit  +  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
500	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
501	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
502	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
503	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
504	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
505	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  not  a  statement  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
506	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
507	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
508	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  number;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  number;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  number;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
509	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
510	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  e  [CE]  ';'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
511	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
512	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
513	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
514	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  ==  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  ==  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  ==  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
515	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
516	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate!=  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate!=  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate!=  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
517	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
518	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  -1)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  -1)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  -1)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
519	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate  [CE]  ';'  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
520	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  e  [CE]  ';'  expected  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
521	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  1);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
522	[BUG]  [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationRate,  0,  this.populationLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
523	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  numberLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
524	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  1);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
525	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
526	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
527	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationsLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
528	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  1,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  1,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  1,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
529	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  PopulationLimit.doubleValue());  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  PopulationLimit.doubleValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  PopulationLimit.doubleValue());	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
530	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  size);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  size);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
531	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
532	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  demographicLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
533	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit;  [CE]  ')'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit;	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  ')'  expected	17	None	replace
534	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  1,  this.populationRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  1,  this.populationRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  1,  this.populationRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
535	[BUG]  [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationRate,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
536	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  this.populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  this.populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  this.populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
537	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  new  double[]  {  elitismRate  }  );	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
538	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
539	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  -  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
540	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  2);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  2);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  2);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
541	[BUG]  [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(publicationLimit,  0,  this.populationRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
542	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  +  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
543	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
544	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
545	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
546	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
547	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
548	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
549	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
550	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
551	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
552	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
553	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
554	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
555	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
556	[BUG]  [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
557	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
558	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
559	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
560	[BUG]  [BUGGY]  for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
561	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
562	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
563	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
564	[BUG]  [BUGGY]  for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
565	[BUG]  [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
566	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
567	[BUG]  [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
568	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
569	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
570	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
571	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.parseDouble(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.parseDouble(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.parseDouble(populationLimit);  this.elitismRate  =  elitismRate;	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
572	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
573	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
574	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
575	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  this.elitismRate;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  this.elitismRate;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  this.elitismRate;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
576	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	40	None	replace
577	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  Population.MIN_VALUE;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  Population.MIN_VALUE;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  Population.MIN_VALUE;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
578	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  1;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  1;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  1;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
579	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
580	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
581	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
582	[BUG]  [BUGGY]  lastPopulationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  lastPopulationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	lastPopulationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
583	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(population,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(population,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(population,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
584	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
585	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
586	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
587	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
588	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
589	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  numberLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  numberLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  numberLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
590	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
591	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
592	[BUG]  [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
593	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
594	[BUG]  [BUGGY]  for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
595	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
596	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
597	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
598	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
599	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
600	[BUG]  [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
601	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
602	[BUG]  [BUGGY]  for(final  int  populateLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populateLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populateLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
603	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
604	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
605	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
606	[BUG]  [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
607	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
608	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
609	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  e  [CE]  ')'  expected  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	45	None	replace
610	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  e  [CE]  ')'  expected  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	45	None	replace
611	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
612	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
613	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  size)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  size)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  size)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
614	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populateLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populateLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populateLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
615	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  not  a  statement  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  not  a  statement	34	None	replace
616	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate,  int  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
617	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  number)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  number)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  number)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
618	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  this.populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  this.populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  this.populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
619	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  numberLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
620	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
621	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
622	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
623	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
624	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  numberLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  numberLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  numberLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
625	[BUG]  [BUGGY]  static  final  ElitisticListPopulation(populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  ElitisticListPopulation(populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  ElitisticListPopulation(populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
626	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
627	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  [CE]  illegal  start  of  expression  [FE]                                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
628	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  colon)  {  this.populationLimit  =  colon;  }  [CE]  illegal  start  of  expression  [FE]                                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  colon)  {  this.populationLimit  =  colon;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  colon)  {  this.populationLimit  =  colon;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
629	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  type)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  type)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  type)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
630	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  [CE]  illegal  start  of  expression  [FE]                                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
631	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
632	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
633	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
634	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
635	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
636	[BUG]  [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
637	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
638	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	28	None	replace
639	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
640	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
641	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
642	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
643	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
644	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
645	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate  [CE]  ')'  expected  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
646	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit.doubleValue(),  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit.doubleValue(),  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit.doubleValue(),  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
647	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  this.elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  this.elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  this.elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
648	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  <  elitismRate)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ';'  expected  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  <  elitismRate)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  <  elitismRate)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	28	None	replace
649	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
650	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
651	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
652	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
653	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  not  a  statement  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  not  a  statement	59	None	replace
654	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
655	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
656	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
657	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e  [CE]  ';'  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
658	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
659	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
660	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
661	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
662	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
663	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  ==  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  ==  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  ==  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
664	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0001)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0001)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0001)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
665	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitis  [CE]  ';'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitis  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitis	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
666	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate  [CE]  ';'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
667	[BUG]  [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  >  expected	53	None	replace
668	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
669	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
670	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  numberLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
671	[BUG]  [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  >  expected	53	None	replace
672	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  -  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  -  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  -  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
673	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
674	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  version);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  version);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  version);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
675	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
676	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
677	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
678	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
679	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
680	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
681	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	33	None	replace
682	[BUG]  [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
683	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
684	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
685	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
686	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
687	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
688	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit.doubleValue(),  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit.doubleValue(),  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit.doubleValue(),  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
689	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
690	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  this.elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  this.elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  this.elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
691	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
692	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
693	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
694	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
695	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  numberLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  numberLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  numberLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
696	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
697	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
698	[BUG]  [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
699	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
700	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
701	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
702	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
703	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
704	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
705	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
706	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
707	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
708	[BUG]  [BUGGY]  for(final  int  populateLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populateLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populateLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
709	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
710	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
711	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
712	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
713	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <=  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <=  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <=  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
714	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  e  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
715	[BUG]  [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  size,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  size,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  size,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
716	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  0,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  0,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
717	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  elitismRate,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
718	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
719	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
720	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  populationLimit);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
721	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
722	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  false);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  false);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  false);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
723	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate  +  1);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
724	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit  +  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
725	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit  -  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit  -  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit  -  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
726	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationRimit);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationRimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationRimit);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
727	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populateLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populateLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populateLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
728	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  populateLimit);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
729	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationRate);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
730	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  0);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  0);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
731	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  null);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  null);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  null);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
732	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  true);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  true);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
733	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  double  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  double  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	19	None	replace
734	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  double[]  {  elitismRate  }  );	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
735	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populateRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populateRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populateRate,  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
736	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit  /  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit  /  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populationLimit  /  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
737	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  0,  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
738	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  1.0);  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  1.0);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
739	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  size);  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  size);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
740	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  demographicLimit);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
741	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  numberLimit);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
742	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate)+  1;  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate)+  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate)+  1;	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
743	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  0.0);  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  0.0);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
744	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  numberLimit);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
745	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  -1);  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  -1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  -1);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
746	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
747	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
748	[BUG]  [BUGGY]  if(populationLimit  >  elitismRate)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  elitismRate)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  elitismRate)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
749	[BUG]  [BUGGY]  final  int  populationLimit  >  elitismRate)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  elitismRate)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  elitismRate)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
750	[BUG]  [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
751	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  ';'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
752	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
753	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
754	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	38	None	replace
755	[BUG]  [BUGGY]  Final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  not  a  statement  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
756	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [CE]  ';'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
757	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
758	[BUG]  [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  not  a  statement  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
759	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
760	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
761	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
762	[BUG]  [BUGGY]  final  int  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
763	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
764	[BUG]  [BUGGY]  final  int  populationLimit  >  elitismRate)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  ';'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  elitismRate)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  elitismRate)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
765	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
766	[BUG]  [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [CE]  not  a  statement  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
767	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
768	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
769	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  +  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
770	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  -  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  -  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  -  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
771	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  +  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
772	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  new  double[]  {  elitismRate  }  );	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
773	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  4,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  4,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  4,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
774	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populateLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
775	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  -  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
776	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
777	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  +  1);  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  +  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
778	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  populateLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
779	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  5,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  5,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  5,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
780	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  3,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  3,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  3,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
781	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  *  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  *  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  *  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
782	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  /  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  /  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  populationLimit  /  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
783	[BUG]  [BUGGY]  System.arraycopy(elitismRate,  0,  this.populationLimit,  1,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(elitismRate,  0,  this.populationLimit,  1,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(elitismRate,  0,  this.populationLimit,  1,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
784	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  demographicLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
785	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  1,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  1,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  1,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
786	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array  [CE]  not  a  statement  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  not  a  statement	60	None	replace
787	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLi  [CE]  ')'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLi	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ')'  expected	60	None	replace
788	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
789	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra  [CE]  not  a  statement  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  not  a  statement	60	None	replace
790	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationL  [CE]  ')'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ')'  expected	60	None	replace
791	[BUG]  [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra  [CE]  >  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arra	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  >  expected	60	None	replace
792	[BUG]  [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.  [CE]  >  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  >  expected	60	None	replace
793	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit  [CE]  ')'  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ')'  expected	60	None	replace
794	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
795	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population  [CE]  ')'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ')'  expected	60	None	replace
796	[BUG]  [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array  [CE]  >  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.array	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  >  expected	60	None	replace
797	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
798	[BUG]  [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  [CE]  >  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  >  expected	60	None	replace
799	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ')'  expected	60	None	replace
800	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
801	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
802	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
803	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
804	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  numberLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
805	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit  +  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
806	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  this.elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
807	[BUG]  [BUGGY]  System.arraycopy(elitismRate,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(elitismRate,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(elitismRate,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
808	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  new  double[]  {  elitismRate  },  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  new  double[]  {  elitismRate  },  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  new  double[]  {  elitismRate  },  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
809	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  size);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  size);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
810	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationsLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
811	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  double  elitismRate,  0,  populationLimit);  [CE]  '.class'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  double  elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  double  elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  '.class'  expected	35	None	replace
812	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populateLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populateLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populateLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
813	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  PopulationLimit.doubleValue());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  PopulationLimit.doubleValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  PopulationLimit.doubleValue());	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
814	[BUG]  [BUGGY]  System.arraycopy(elitismLimit,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(elitismLimit,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(elitismLimit,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
815	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
816	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  0,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  0,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  0,  elitismRate  +  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
817	[BUG]  [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationRate,  0,  this.populationLimit,  populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
818	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
819	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  demographicLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
820	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
821	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
822	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
823	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
824	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  numberLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  numberLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  numberLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
825	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
826	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
827	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismLimit);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
828	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  size,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  size,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  size,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
829	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
830	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
831	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  1,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  1,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  1,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
832	[BUG]  [BUGGY]  for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
833	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit.doubleValue(),  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit.doubleValue(),  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit.doubleValue(),  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
834	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
835	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
836	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  this.elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  this.elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  this.elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
837	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
838	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
839	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitism);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitism);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitism);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
840	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationsLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationsLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationsLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
841	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
842	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
843	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit.MINUTE,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit.MINUTE,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit.MINUTE,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
844	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  0,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
845	[BUG]  [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  super(populationLimit  +  size,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  super(populationLimit  +  size,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  super(populationLimit  +  size,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
846	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
847	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  super(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
848	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
849	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
850	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  populationLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
851	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationRimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationRimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationRimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
852	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  +  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
853	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  -  elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  -  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  -  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
854	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
855	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populateLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populateLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populateLimit,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
856	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  numberLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
857	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  +  1);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
858	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  /  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  /  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  /  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
859	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  false);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  false);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  false);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
860	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  0);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  0);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
861	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  populateLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
862	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  new  double[]  {  elitismRate  }  );	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
863	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  numberLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
864	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  double  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  double  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	57	None	replace
865	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  1.0);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  1.0);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
866	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate)+  1;  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate)+  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate)+  1;	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
867	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  0,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
868	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populateRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populateRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populateRate,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
869	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  true);  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  true);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
870	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  null);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  null);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  null);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
871	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit  +  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit  +  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit  +  1,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
872	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  0.0);  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate,  0.0);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
873	[BUG]  [BUGGY]  this.populationLimit  =  numberInput.parse(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  numberInput.parse(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  numberInput.parse(populationLimit,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
874	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  populationLimit;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  +  populationLimit;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
875	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  -  populationLimit;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  -  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  -  populationLimit;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
876	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
877	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  1;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  +  1;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
878	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  *  populationLimit;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  *  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  *  populationLimit;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
879	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
880	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.floatValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.floatValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.floatValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
881	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  2.0;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  2.0;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  2.0;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
882	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  PopulationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  /  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  /  PopulationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
883	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
884	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  NumberLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  NumberLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  NumberLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
885	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  2;  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  2;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  2;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
886	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  *  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  *  elitismRate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  *  elitismRate;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
887	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parseDouble(populationLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parseDouble(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parseDouble(populationLimit);	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
888	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.valueOf(populationLimit);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.valueOf(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.valueOf(populationLimit);	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
889	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  100;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  100;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  100;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
890	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
891	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  100.0;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  100.0;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  100.0;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
892	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit,  PopulationLimit.doubleValue();  [CE]  ';'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit,  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit,  PopulationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  ';'  expected	8	None	replace
893	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  Double.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  Double.MAX_VALUE;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  Double.MAX_VALUE;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
894	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  Double.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  Double.MIN_VALUE;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  Double.MIN_VALUE;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
895	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  1000;  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  1000;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  1000;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
896	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  1;  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  1;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  1;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
897	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  PopulationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  *  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  *  PopulationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
898	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.intValue();  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.intValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.intValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
899	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
900	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
901	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
902	[BUG]  [BUGGY]  if(populationLimit  ==  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  ==  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  ==  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
903	[BUG]  [BUGGY]  setPopulationRate(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulationRate(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulationRate(populationLimit);  this.elitismRate  =  elitismRate;	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
904	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
905	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
906	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
907	[BUG]  [BUGGY]  assertEquals(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  assertEquals(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	assertEquals(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
908	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
909	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
910	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
911	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
912	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
913	[BUG]  [BUGGY]  elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  =  elitismRate;	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
914	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  [CE]  ')'  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	56	None	replace
915	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
916	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	56	None	replace
917	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  }  else  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  }  else  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  }  else  {  this.elitismRate  =  elitismRate;  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
918	[BUG]  [BUGGY]  if(populationLimit  ==  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  ==  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  ==  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
919	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit  ||  populationLimit  >  elitismRate)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
920	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [CE]  ')'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	56	None	replace
921	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
922	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
923	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
924	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
925	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
926	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populateLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populateLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populateLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
927	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
928	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  totalPopulationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  totalPopulationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  totalPopulationLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
929	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationsLimit,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationsLimit,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  populationsLimit,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
930	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  elitismLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
931	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  size,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  size,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  size,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
932	[BUG]  [BUGGY]  System.arraycopy(elitismRate,  0,  this.populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(elitismRate,  0,  this.populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(elitismRate,  0,  this.populationLimit,  populationLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
933	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populateLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
934	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  double  elitismRate,  populationLimit);  [CE]  '.class'  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  double  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  double  elitismRate,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  '.class'  expected	47	None	replace
935	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate  +  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
936	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  new  double[]  {  elitismRate  }  );	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
937	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
938	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  numberLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  numberLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  numberLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
939	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  numberLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
940	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  numberLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  numberLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  numberLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
941	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  this.elitismRate,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
942	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  this.elitismRate,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
943	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  size,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  size,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  size,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
944	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
945	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
946	[BUG]  [BUGGY]  for(final  int  populateLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populateLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populateLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
947	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
948	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
949	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
950	[BUG]  [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
951	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
952	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
953	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
954	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
955	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
956	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
957	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
958	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit.MAX_VALUE;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
959	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populateLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  populateLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populateLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
960	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
961	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	50	None	replace
962	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
963	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e  [CE]  <identifier>  expected  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
964	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0,  populateLimit  <  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0,  populateLimit  <  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0,  populateLimit  <  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
965	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e  [CE]  not  a  statement  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	50	None	replace
966	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elit);  }  [CE]  <identifier>  expected  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
967	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
968	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(elitismRate,  populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(elitismRate,  populationLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
969	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(elitismRate,  populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(elitismRate,  populationLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
970	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(elitismRate,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(elitismRate,  elitismLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(elitismRate,  elitismLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
971	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.log(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.log(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.log(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
972	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.ceil(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.ceil(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.ceil(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
973	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(elitismRate,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(elitismRate,  elitismLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(elitismRate,  elitismLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
974	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(elitismRate,  populateLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(elitismRate,  populateLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
975	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.sin(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.sin(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.sin(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
976	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.pow(10,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.pow(10,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.pow(10,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
977	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate  *  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate  *  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate  *  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
978	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.rint(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.rint(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.rint(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
979	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(elitismRate,  populateLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(elitismRate,  populateLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
980	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.floor(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.floor(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.floor(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
981	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  0,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  0,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
982	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  Math.max(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  /  Math.max(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  /  Math.max(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
983	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(remainingLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(remainingLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(remainingLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
984	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  double  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  double  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	9	None	replace
985	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  numberLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  numberLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
986	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)+  1;  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)+  1;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)+  1;	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
987	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit  +  Math.max(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit  +  Math.max(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit  +  Math.max(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
988	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  Math.max(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  *  Math.max(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  *  Math.max(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
989	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)-  1;  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)-  1;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)-  1;	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
990	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.max(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.max(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.max(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
991	[BUG]  [BUGGY]  this.populationLimit  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  elitismRate;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
992	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit,  elitismRate;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit,  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit,  elitismRate;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  ';'  expected	1	None	replace
993	[BUG]  [BUGGY]  this.populationLimit  -=  populationLimit;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  -=  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  -=  populationLimit;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
994	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  1;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
995	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit,  elitismRate);	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
996	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.MIN_VALUE;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.MIN_VALUE;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
997	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit);	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
998	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.intValue;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.intValue;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.intValue;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
999	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.MAX_VALUE;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.MAX_VALUE;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1000	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  |  elitismRate;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  |  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  |  elitismRate;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1001	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parseInt(populationLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parseInt(populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parseInt(populationLimit);	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1002	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parseInt(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parseInt(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parseInt(populationLimit,  elitismRate);	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1003	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.ZERO;  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.ZERO;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.ZERO;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1004	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.NaN;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.NaN;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.NaN;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1005	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parseDouble(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parseDouble(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parseDouble(populationLimit,  elitismRate);	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1006	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.instance;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.instance;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.instance;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1007	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  populationLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1008	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  populationLimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1009	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1010	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  populateLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  populateLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1011	[BUG]  [BUGGY]  super(populationLimit,  populateLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  populateLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  populateLimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1012	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  false);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  false);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1013	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  this.elitismRate);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  this.elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  this.elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1014	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  null);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  null);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1015	[BUG]  [BUGGY]  super(populationLimit,  populationRimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  populationRimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  populationRimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1016	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  numberLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  numberLimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1017	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  this.elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  this.elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1018	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  demographicLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1019	[BUG]  [BUGGY]  super(populationLimit,  populationRimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  populationRimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  populationRimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1020	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  new  double[]  {  0  }  );	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1021	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  true);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  true);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  true);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1022	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  size);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  size);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  size);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1023	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitism);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  elitism);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  elitism);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1024	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit  /  populationLimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1025	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismCount);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  elitismCount);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  elitismCount);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1026	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismRate.doubleValue());  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  elitismRate.doubleValue());  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  elitismRate.doubleValue());	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1027	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismMask);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  elitismMask);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  elitismMask);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1028	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.NaN);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.NaN);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.NaN);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1029	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismLast);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  elitismLast);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  elitismLast);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1030	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.doubleValue());  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.doubleValue());  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.doubleValue());	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1031	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  numberLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  numberLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1032	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.MAX_VALUE);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.MAX_VALUE);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1033	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  this.populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  this.populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  this.populationLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1034	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  populationsLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  populationsLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1035	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1036	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1037	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  PopulationLimit.doubleValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  PopulationLimit.doubleValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  PopulationLimit.doubleValue());	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1038	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit;  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit;	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  ')'  expected	14	None	replace
1039	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1040	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  new  double[]  {  populationLimit  }  );  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  new  double[]  {  populationLimit  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  new  double[]  {  populationLimit  }  );	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1041	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1042	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  -  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1043	[BUG]  [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(publicationLimit,  0,  this.populationLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1044	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  2);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  2);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  +  2);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1045	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1046	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1047	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1048	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1049	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1050	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1051	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1052	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1053	[BUG]  [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1054	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1055	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1056	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1057	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1058	[BUG]  [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1059	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1060	[BUG]  [BUGGY]  for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elimit  =  populationLimit;  elimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1061	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1062	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1063	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	44	None	replace
1064	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  size,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1065	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1066	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  e  [CE]  not  a  statement  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  this.populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	44	None	replace
1067	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1068	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  size;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1069	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  1,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  1,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  1,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1070	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitism);  }  [CE]  <identifier>  expected  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitism);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  elitismRate,  elitism);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1071	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1072	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1073	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  populationLimit);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1074	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1075	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  false);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  false);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  false);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1076	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationRimit);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationRimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationRimit);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1077	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit  -  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit  -  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit  -  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1078	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit  +  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1079	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populateLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populateLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populateLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1080	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationRate);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1081	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate  +  1);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1082	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  populateLimit);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1083	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit  /  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit  /  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationLimit  /  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1084	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  0);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  0);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1085	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  null);  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  null);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  null);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1086	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  true);  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  true);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1087	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  numberLimit);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1088	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  1.0);  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  1.0);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1089	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populatorLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populatorLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populatorLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1090	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  -1);  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  -1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  -1);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1091	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  size);  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  size);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1092	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  new  double[]  {  elitismRate  }  );	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1093	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  demographicLimit);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1094	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  double  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  double  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	23	None	replace
1095	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  elitism);  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  elitism);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  elitism);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1096	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate)+  1;  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate)+  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate)+  1;	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1097	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1098	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1099	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1100	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1101	[BUG]  [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1102	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1103	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1104	[BUG]  [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1105	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1106	[BUG]  [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  if(populationLimit  >  size)  {  this.populationLimit  =  size;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  if(populationLimit  >  size)  {  this.populationLimit  =  size;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  if(populationLimit  >  size)  {  this.populationLimit  =  size;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1107	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1108	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  null;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  null;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  null;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1109	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0.0)  {  this.populationLimit  =  1.0;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0.0)  {  this.populationLimit  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0.0)  {  this.populationLimit  =  1.0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1110	[BUG]  [BUGGY]  for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1111	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0.0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1112	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >=  0)  {  this.populationLimit  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >=  0)  {  this.populationLimit  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >=  0)  {  this.populationLimit  =  0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1113	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1114	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1115	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  numberLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  numberLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  numberLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1116	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  numberLimit)  {  this.populationLimit  =  numberLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  numberLimit)  {  this.populationLimit  =  numberLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  numberLimit)  {  this.populationLimit  =  numberLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1117	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1118	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1119	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populateLimit)  {  this.populationLimit  =  populateLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populateLimit)  {  this.populationLimit  =  populateLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populateLimit)  {  this.populationLimit  =  populateLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1120	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1121	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1122	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  1.0;  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  1.0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  1.0;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1123	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  1;  }  [CE]  illegal  start  of  expression  [FE]                                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  1;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  0)  {  this.populationLimit  =  1;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1124	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  numberLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  numberLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  numberLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1125	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1126	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1127	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1128	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1129	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1130	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1131	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  not  a  statement  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  not  a  statement	25	None	replace
1132	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1133	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  int  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  int  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  elitismRate,  int  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1134	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1135	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1136	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  e  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  e	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1137	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  [CE]  not  a  statement  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  not  a  statement	25	None	replace
1138	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populateLimit,  int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populateLimit,  int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populateLimit,  int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1139	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(double  elitismRate,  int  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(double  elitismRate,  int  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(double  elitismRate,  int  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1140	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populateLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populateLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populateLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1141	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(double  elitismRate,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(double  elitismRate,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(double  elitismRate,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1142	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1143	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(long  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(long  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(long  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1144	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  int  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  int  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  numberLimit,  int  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1145	[BUG]  [BUGGY]  SecuritySystem.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  SecuritySystem.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	SecuritySystem.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1146	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1147	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1148	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1149	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1150	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  [CE]  ')'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
1151	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationL  [CE]  ')'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
1152	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1153	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate  [CE]  ')'  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
1154	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1155	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.  [CE]  <identifier>  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
1156	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.  [CE]  <identifier>  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
1157	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLi  [CE]  ')'  expected  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLi	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
1158	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1159	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1160	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1161	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1162	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationL  [CE]  ')'  expected  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
1163	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  demographicLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  demographicLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  demographicLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1164	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1165	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  BevölkerungLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  BevölkerungLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  BevölkerungLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1166	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  size);  }  [CE]  illegal  start  of  expression  [FE]                                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  size);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  size);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1167	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  epidemicLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  epidemicLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  epidemicLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1168	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateL  [CE]  ')'  expected  [FE]                                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
1169	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	22	None	replace
1170	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	22	None	replace
1171	[BUG]  [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1172	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populateLimit,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populateLimit,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populateLimit,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1173	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1174	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1175	[BUG]  [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	private  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1176	[BUG]  [BUGGY]  öffentlich  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  not  a  statement  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  öffentlich  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	öffentlich  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	22	None	replace
1177	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  numberLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1178	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  elitismRate,  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1179	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLi  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLi	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1180	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1181	[BUG]  [BUGGY]  if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1182	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1183	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1184	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populateLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populateLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populateLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1185	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  <  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1186	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1187	[BUG]  [BUGGY]  if(populationLimit  <=  0.0)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0.0)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0.0)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1188	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  numberLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  numberLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  numberLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1189	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1190	[BUG]  [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1191	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >=  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1192	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  }  [CE]  ')'  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  }  	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1193	[BUG]  [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1194	[BUG]  [BUGGY]  if(populationLimit  <=  0.0)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0.0)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0.0)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1195	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1196	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1197	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  this.populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  this.populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  this.populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1198	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismR  [CE]  ')'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismR  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismR	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1199	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  ==  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  ==  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  ==  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1200	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [CE]  ')'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1201	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationsLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationsLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationsLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1202	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populateLimit,  e  [CE]  ')'  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populateLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populateLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1203	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationL  [CE]  ')'  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1204	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitis  [CE]  ')'  expected  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitis  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitis	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1205	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1206	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  elitismRate);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1207	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.populations.add(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.populations.add(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.populations.add(populationLimit,  elitismRate);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1208	[BUG]  [BUGGY]  Population.this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Population.this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Population.this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1209	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1210	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1211	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  this.elitismRate  =  elitismRate;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1212	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  i++)  {  ElitisticListPopulation.this.populations.add(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  i++)  {  ElitisticListPopulation.this.populations.add(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  i++)  {  ElitisticListPopulation.this.populations.add(populationLimit,  elitismRate);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1213	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1214	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1215	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populateLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1216	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  '.class'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  For(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	For(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  '.class'  expected	29	None	replace
1217	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(0,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(0,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(0,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1218	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len.length;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len.length;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len.length;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1219	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate  +  1);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate  +  1);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate  +  1);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1220	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populateLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populateLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populateLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1221	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  this.elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  this.elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  this.elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1222	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(len,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(len,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(len,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1223	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  numberLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  numberLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  numberLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1224	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  PopulationLimit.MIN_VALUE;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  PopulationLimit.MIN_VALUE;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  PopulationLimit.MIN_VALUE;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1225	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationsLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationsLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationsLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1226	[BUG]  [BUGGY]  for(int  i  =  1,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  1,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  1,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1227	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1228	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  --i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  --i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  --i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1229	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  numberLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  numberLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  numberLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1230	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit  +  1;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit  +  1;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit  +  1;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1231	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  >=  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  >=  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  >=  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1232	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len  +  1;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len  +  1;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len  +  1;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1233	[BUG]  [BUGGY]  for(int  len  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  len  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  len  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1234	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit.length;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit.length;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit.length;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1235	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i  +  1,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i  +  1,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i  +  1,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1236	[BUG]  [BUGGY]  for(int  len  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(len,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  len  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(len,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  len  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(len,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1237	[BUG]  [BUGGY]  int  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  >  expected  [FE]                                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  int  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	int  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  >  expected	29	None	replace
1238	[BUG]  [BUGGY]  Pentru(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  '.class'  expected  [FE]                                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Pentru(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Pentru(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  '.class'  expected	29	None	replace
1239	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationsLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationsLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationsLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1240	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  elitismRate;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  elitismRate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  elitismRate;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1241	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  populationLimit;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  /  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  /  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1242	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  populationLimit;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  *  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  *  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1243	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populateLimit;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  populateLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  populateLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1244	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1245	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit)-  populationLimit;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit)-  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit)-  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1246	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  numberLimit;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  numberLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  numberLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1247	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  getPopulationLimit();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  getPopulationLimit();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  getPopulationLimit();	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1248	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit  -  populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue(populationLimit  -  populationLimit);	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1249	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  %  populationLimit;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  %  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  %  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1250	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_PREFIX;  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_PREFIX;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_PREFIX;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1251	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit,  elitismRate)-  populationLimit;  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit,  elitismRate)-  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit,  elitismRate)-  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1252	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.length  -  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.length  -  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.length  -  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1253	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  1,  elitismRate;  [CE]  ';'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  1,  elitismRate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  1,  elitismRate;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  ';'  expected	6	None	replace
1254	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MAX_VALUE;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.MAX_VALUE;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1255	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  size;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  size;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  size;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1256	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit  -  populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit  -  populationLimit);	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1257	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MILLIS_PER_SIZE;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MILLIS_PER_SIZE;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.MILLIS_PER_SIZE;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1258	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MIN_VALUE;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.MIN_VALUE;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1259	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue  -  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue  -  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue  -  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1260	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  new  Double(populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  new  Double(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  new  Double(populationLimit);	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1261	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MAX_PER_SECOND;  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MAX_PER_SECOND;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.MAX_PER_SECOND;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1262	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1263	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  +  1);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1264	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  -  populationLimit);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1265	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  elitismRate);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  +  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1266	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  -  1);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1267	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit,  populationLimit);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1268	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit,  new  double[]  {  elitismRate  }  );	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1269	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  +  1,  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1270	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  /  populationLimit);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  /  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  /  populationLimit);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1271	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.convert(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.convert(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.convert(populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1272	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.set(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.set(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.set(populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1273	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.remove(populationLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.remove(populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.remove(populationLimit);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1274	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.convert(populationLimit);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.convert(populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.convert(populationLimit);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1275	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  -  populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1276	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  2);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  2);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  +  2);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1277	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit)-  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit)-  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit)-  populationLimit;	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1278	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(0);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(0);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1279	[BUG]  [BUGGY]  populationLimit  =  PopulationLimit.get(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  populationLimit  =  PopulationLimit.get(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	populationLimit  =  PopulationLimit.get(populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1280	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit,  numberLimit);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1281	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  false);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  false);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit,  false);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1282	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  _elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit,  _elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit,  _elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1283	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit.get(elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit.get(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit.get(elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1284	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit),  elitismRate;  [CE]  ';'  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit),  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit),  elitismRate;	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  ';'  expected	4	None	replace
1285	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit)+  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit)+  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit)+  populationLimit;	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1286	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1287	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1288	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1289	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1290	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1291	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1292	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1293	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1294	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1295	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1296	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1297	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1298	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  numberLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1299	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1300	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1301	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1302	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1303	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1304	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1305	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1306	[BUG]  [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismRate  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate,  populateLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1307	[BUG]  [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1308	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1309	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1310	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1311	[BUG]  [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  size,  elitismRate,  size);  }  [CE]  illegal  start  of  expression  [FE]                                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  size,  elitismRate,  size);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  size  =  populationLimit;  size  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  size,  elitismRate,  size);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1312	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  false);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  false);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  false);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1313	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitism);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitism);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitism);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1314	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  double  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  double  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	36	None	replace
1315	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1316	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  null);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  null);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1317	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1318	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1319	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismCount);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismCount);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismCount);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1320	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  new  double[]  {  elitismRate  }  );	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1321	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  1.0);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  1.0);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1322	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  size);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  size);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  size);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1323	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  true);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  true);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  true);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1324	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismMask);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismMask);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismMask);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1325	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  -populationLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  -populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  -populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1326	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationRimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationRimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationRimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1327	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0  }  );	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1328	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  1);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1329	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  -1);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  -1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  -1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1330	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0.0);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0.0);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1331	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismLast);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismLast);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  elitismLast);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1332	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  -  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  -  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  -  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1333	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  system.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  system.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  system.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1334	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  1,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  1,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  1,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1335	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.doubleValue(),  elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.doubleValue(),  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.doubleValue(),  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1336	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populateLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1337	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1338	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  demographicLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  demographicLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  demographicLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1339	[BUG]  [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  1,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  1,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationRate,  0,  this.populationLimit,  1,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1340	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  numberLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1341	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  +  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  +  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate  +  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1342	[BUG]  [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(publicationLimit,  0,  this.populationLimit,  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1343	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate,  populationsLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1344	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  1,  this.populationLimit,  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  1,  this.populationLimit,  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  1,  this.populationLimit,  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1345	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate;  [CE]  ')'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate;	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  ')'  expected	27	None	replace
1346	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  2;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  2;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  2;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1347	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.intValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.intValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.intValue();	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1348	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit();  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  getPopulationLimit();	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1349	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  1.0;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  1.0;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1350	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  double.doubleValue();  [CE]  class  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  double.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  double.doubleValue();	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  class  expected	1	None	replace
1351	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.abs(populationLimit  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.abs(populationLimit  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.abs(populationLimit  -  populationLimit);	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1352	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit(populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit(populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  getPopulationLimit(populationLimit);	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1353	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  2.0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  /  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  /  2.0;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1354	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit  +  1,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit  +  1,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit  +  1,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1355	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1356	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(desc,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(desc,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(desc,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1357	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populeLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populeLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populeLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1358	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate  [CE]  ')'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	29	None	replace
1359	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(durationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(durationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(durationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1360	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1361	[BUG]  [BUGGY]  final  double  elitismLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1362	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
1363	[BUG]  [BUGGY]  final  double  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1364	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate)+  populationLimit;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate)+  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate)+  populationLimit;	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1365	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  Double(elitismRate));  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  Double(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  Double(elitismRate));	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1366	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  double[elitismRate]);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  double[elitismRate]);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  double[elitismRate]);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1367	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate)-  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate)-  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate)-  populationLimit;	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1368	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit  -  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit  -  populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1369	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  populateLimit);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1370	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit  +  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit  +  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit  +  1,  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1371	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  Double(elitismRate),  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  Double(elitismRate),  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  new  Double(elitismRate),  populationLimit);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1372	[BUG]  [BUGGY]  super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1373	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1374	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit  +  populationLimit,  elitismRate);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1375	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1376	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1377	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  populate();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  populate();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  populate();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1378	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit  +  populationLimit,  elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit  +  populationLimit,  elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit  +  populationLimit,  elitismRate,  0,  populationLimit);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1379	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  populationLimit;  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  populationLimit;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1380	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1381	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1382	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  popul  [CE]  ')'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  popul  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  popul	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
1383	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1384	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populateL  [CE]  ')'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populateL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populateL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
1385	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLit  [CE]  ')'  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
1386	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1387	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1388	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1389	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1390	[BUG]  [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1391	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [CE]  ')'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1392	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [CE]  ')'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1393	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1394	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1395	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1396	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1397	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1398	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1399	[BUG]  [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1400	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1401	[BUG]  [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1402	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1403	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1404	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1405	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1406	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation[populationLimit,  populationLimit,  elitismRate);  }  [CE]  ']'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation[populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation[populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ']'  expected	45	None	replace
1407	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1408	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1409	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1410	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1411	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  [CE]  not  a  statement  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  not  a  statement	31	None	replace
1412	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate;	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1413	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  not  a  statement  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  not  a  statement	31	None	replace
1414	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  not  a  statement  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  not  a  statement	31	None	replace
1415	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1416	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(final  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(final  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(final  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1417	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  numberLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  numberLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1418	[BUG]  [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  [CE]  not  a  statement  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  not  a  statement	31	None	replace
1419	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1420	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate;  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate;  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate;  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1421	[BUG]  [BUGGY]  static  final  ElitisticListPopulation(populationLimit,double  elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  ElitisticListPopulation(populationLimit,double  elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  ElitisticListPopulation(populationLimit,double  elitismRate,  populationLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1422	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit,  elitismRate;	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1423	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  populateLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  populateLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1424	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  denominator);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  denominator);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  denominator);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1425	[BUG]  [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(publicationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1426	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  dataLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  dataLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  dataLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1427	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  elitismRate,  populationLimit,  this.populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  elitismRate,  populationLimit,  this.populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  elitismRate,  populationLimit,  this.populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1428	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  super.populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  super.populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  super.populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1429	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  negative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  negative);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  negative);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1430	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1431	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1432	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1433	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1434	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1435	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1436	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1437	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1438	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1439	[BUG]  [BUGGY]  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1440	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  e  [CE]  ';'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
1441	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate  [CE]  ';'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
1442	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate  [CE]  ';'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
1443	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate  [CE]  ';'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
1444	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1445	[BUG]  [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(publicationLimit,  0,  this.populationLimit,  elitismRate,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1446	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populationsLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1447	[BUG]  [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationRate,  0,  this.populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationRate,  0,  this.populationLimit,  populationLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1448	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  totalSize,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  totalSize,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  totalSize,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1449	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  demographicLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  demographicLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  demographicLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1450	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  demographicLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1451	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  demographicLimit,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  demographicLimit,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  demographicLimit,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1452	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populationLimit  +  1);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populationLimit  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populationLimit  +  1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1453	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1454	[BUG]  [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1455	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1456	[BUG]  [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1457	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1458	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1459	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1460	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1461	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1462	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1463	[BUG]  [BUGGY]  for(final  double  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1464	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1465	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1466	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1467	[BUG]  [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1468	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1469	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1470	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1471	[BUG]  [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1472	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1473	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1474	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1475	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1476	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation[populationLimit  +  populationLimit,  elitismRate);  }  [CE]  ']'  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation[populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation[populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ']'  expected	49	None	replace
1477	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1478	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  -  1,  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1479	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  +  populationLimit);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1480	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  *  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  *  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  *  populationLimit);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1481	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  -  2);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  -  2);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1482	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit).doubleValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit).doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit).doubleValue();	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1483	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  1.0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  1.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  +  1.0);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1484	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit)+  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit)+  1;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit)+  1;	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1485	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  1000);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  +  1000);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  +  1000);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1486	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1487	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1488	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1489	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1490	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1491	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1492	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1493	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation[populationLimit  +  populationLimit,  elitismRate);  }  [CE]  ']'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation[populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation[populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ']'  expected	44	None	replace
1494	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1495	[BUG]  [BUGGY]  for(final  int  populationLimit  =  3;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  3;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  3;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1496	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1497	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1498	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1499	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populateLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populateLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populateLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1500	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1501	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  elitismRate;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1502	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1503	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1504	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1505	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1506	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1507	[BUG]  [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	For(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1508	[BUG]  [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1509	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1510	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1511	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1512	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1513	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1514	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1515	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1516	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1517	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLi  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLi	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1518	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1519	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1520	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1521	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationL	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1522	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1523	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  totalLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  totalLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  totalLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1524	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  /  2.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  /  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit  /  2.0);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1525	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elelitismRate);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elelitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elelitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1526	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
1527	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  new  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  new  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  new	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
1528	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  childLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  childLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  childLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1529	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  1,  this.elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  1,  this.elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  1,  this.elitismRate,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1530	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  0,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  0,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  populationLimit,  0,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1531	[BUG]  [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(publicationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1532	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  elitismRate,  this.populationLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  elitismRate,  this.populationLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  elitismRate,  this.populationLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1533	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  numberLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  numberLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  numberLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1534	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit-1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit-1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit-1);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1535	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populateLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populateLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populateLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1536	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  numberLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  numberLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  numberLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1537	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationsLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  populationsLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  populationsLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1538	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  null,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  null,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  null,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1539	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate)+  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate)+  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate)+  populationLimit;	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1540	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  new  double[elitismRate]);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  new  double[elitismRate]);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  new  double[elitismRate]);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1541	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  new  Double(elitismRate));  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  new  Double(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  new  Double(elitismRate));	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1542	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate)-  populationLimit;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate)-  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate)-  populationLimit;	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1543	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate  *  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate  *  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate  *  populationLimit);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1544	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate  -  1);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate  -  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate  -  1);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1545	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate),  populationLimit);  [CE]  ';'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate),  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate),  populationLimit);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  ';'  expected	23	None	replace
1546	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit  -  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit  -  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit  -  1,  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1547	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  new  Double(populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  new  Double(populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  new  Double(populationLimit);	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1548	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.doubleValue();	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1549	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  dataLimit;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  dataLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  dataLimit;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1550	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  populateLimit;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  populateLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  populateLimit;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1551	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  getPopulationLimit();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  getPopulationLimit();  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  getPopulationLimit();	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1552	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  0.01;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  0.01;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  0.01;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1553	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.intValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.intValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.intValue();	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1554	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  4;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  4;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  4;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1555	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit  -  populationLimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1556	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.doubleValue());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate.doubleValue());  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate.doubleValue());	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1557	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate  +  1);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate  +  1);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1558	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.DEFAULT);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.DEFAULT);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.DEFAULT);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1559	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  new  Double(elitismRate),  populationLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1560	[BUG]  [BUGGY]  final  double  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1561	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1562	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1563	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy  [CE]  not  a  statement  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  not  a  statement	60	None	replace
1564	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationElement,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationElement,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationElement,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1565	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(elemRate,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(elemRate,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(elemRate,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1566	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  -  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  -  populationLimit,  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1567	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate)-  populationLimit;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate)-  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate)-  populationLimit;	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1568	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  populateLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1569	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  +  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  +  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  +  1,  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1570	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate)+  populationLimit;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate)+  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate)+  populationLimit;	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1571	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  *  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  *  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  *  populationLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1572	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  -  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  -  1);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1573	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate),  populationLimit);  [CE]  ';'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate),  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate),  populationLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  ';'  expected	12	None	replace
1574	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  new  Double(elitismRate));  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  new  Double(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  new  Double(elitismRate));	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1575	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  new  double[]  {  elitismRate  }  );	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1576	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  -  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  -  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  -  1,  elitismRate);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1577	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1578	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1579	[BUG]  [BUGGY]  final  int  populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	21	None	replace
1580	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1581	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( ". ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1582	[BUG]  [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1583	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( "  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( "	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	21	None	replace
1584	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1585	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1586	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1587	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1588	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1589	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1590	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1591	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1592	[BUG]  [BUGGY]  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1593	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1594	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e  [CE]  ';'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1595	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate  [CE]  ';'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1596	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate  [CE]  ';'  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1597	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate  [CE]  ';'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  elitismRate;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1598	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e  [CE]  ';'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1599	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e  [CE]  ';'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1600	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1601	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1602	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1603	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1604	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1605	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1606	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation[populationLimit,  populateLimit,  elitismRate);  }  [CE]  ']'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation[populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation[populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  ']'  expected	50	None	replace
1607	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1608	[BUG]  [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1609	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0,  populationLimit  <  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0,  populationLimit  <  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0,  populationLimit  <  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
1610	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1611	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  elitismRate  [CE]  ')'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	20	None	replace
1612	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1613	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  demographicLimit);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  demographicLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  demographicLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1614	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  childLimit);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  childLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  childLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1615	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  new  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  new  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  new	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
1616	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit  [CE]  ')'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  numberLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	20	None	replace
1617	[BUG]  [BUGGY]  (final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  (final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	(final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1618	[BUG]  [BUGGY]  luate(populationLimit,  elitismRate)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  luate(populationLimit,  elitismRate)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	luate(populationLimit,  elitismRate)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
1619	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1620	[BUG]  [BUGGY]  (final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  (final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	(final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1621	[BUG]  [BUGGY]  last().populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  last().populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	last().populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1622	[BUG]  [BUGGY]  lastPosition  =  populationLimit  -  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  lastPosition  =  populationLimit  -  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	lastPosition  =  populationLimit  -  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1623	[BUG]  [BUGGY]  (final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  (final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	(final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1624	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleToIntBits(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleToIntBits(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleToIntBits(populationLimit);  this.elitismRate  =  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1625	[BUG]  [BUGGY]  (final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.NaN;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  (final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.NaN;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	(final  double  elitismRate  <  populationLimit)&&  this.populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.NaN;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1626	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1627	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1628	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1629	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1630	[BUG]  [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1631	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1632	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  populationLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1633	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  numberLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  numberLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  numberLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1634	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit  +  Math.min(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit  +  Math.min(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit  +  Math.min(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1635	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  new  Double(elitismRate));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  new  Double(elitismRate));  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  new  Double(elitismRate));	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1636	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit  +  Math.max(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit  +  Math.max(populationLimit,  populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit  +  Math.max(populationLimit,  populationLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1637	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  new  Double(elitismRate));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  new  Double(elitismRate));  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  new  Double(elitismRate));	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1638	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  0);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  0);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1639	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate  -  1);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate  -  1);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1640	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(populationLimit,  populationLimit);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1641	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  PopulationLimit.MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  PopulationLimit.MAX_VALUE);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  PopulationLimit.MAX_VALUE);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1642	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  populationRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  populationRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  populationRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1643	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1644	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1645	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1646	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1647	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  e	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1648	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1649	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1650	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationL  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationL	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1651	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populitiveLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populitiveLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populitiveLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1652	[BUG]  [BUGGY]  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1653	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationL  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationL	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1654	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(final  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(final  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(final  int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1655	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1656	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  elitismLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1657	[BUG]  [BUGGY]  System.arraycopy(populationRimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationRimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationRimit,  0,  this.elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1658	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate  -  populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate  -  populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate  -  populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1659	[BUG]  [BUGGY]  setPopulation(populationLimit  -  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit  -  populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1660	[BUG]  [BUGGY]  setPopulation(populationLimit  +  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit  +  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit  +  populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1661	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate  -  populationLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1662	[BUG]  [BUGGY]  setPopulation(populationLimit,  populationLimit  /  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  populationLimit  /  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  populationLimit  /  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1663	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate  *  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate  *  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate  *  populationLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1664	[BUG]  [BUGGY]  setElitismRate(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setElitismRate(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setElitismRate(populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1665	[BUG]  [BUGGY]  setPopulationRate(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulationRate(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulationRate(populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1666	[BUG]  [BUGGY]  setPopulation(populationLimit,  new  Double(elitismRate));  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  new  Double(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  new  Double(elitismRate));	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1667	[BUG]  [BUGGY]  setPopulation(populationLimit,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  populateLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1668	[BUG]  [BUGGY]  setPopulation(populationLimit,  this.elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  this.elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  this.elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1669	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate.doubleValue());  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate.doubleValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate.doubleValue());	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1670	[BUG]  [BUGGY]  setPopulation(populationLimit,  numberLimit);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  numberLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  numberLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1671	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate  +  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate  +  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate  +  populateLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1672	[BUG]  [BUGGY]  setPopulation(populationLimit,  new  double[elitismRate]);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  new  double[elitismRate]);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  new  double[elitismRate]);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1673	[BUG]  [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
1674	[BUG]  [BUGGY]  (final  double  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  (final  double  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	(final  double  elitismRate  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1675	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1676	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MIN_VALUE;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MIN_VALUE;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MIN_VALUE;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1677	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.NaN;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.NaN;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.NaN;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1678	[BUG]  [BUGGY]  lastPosition  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  lastPosition  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	lastPosition  =  populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1679	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleToIntBits(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleToIntBits(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleToIntBits(populationLimit);  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1680	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1681	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1682	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MINUTE;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MINUTE;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MINUTE;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1683	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1684	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1685	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1686	[BUG]  [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  2;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1687	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1688	[BUG]  [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1689	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1690	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1691	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1692	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1693	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1694	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1695	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1696	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  this.populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  this.populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  this.populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1697	[BUG]  [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1698	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1699	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1700	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1701	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1702	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1703	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1704	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  number;  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  number;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  number;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1705	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit  +  1;  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit  +  1;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit  +  1;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1706	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1707	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
1708	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1709	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1710	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1711	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1712	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1713	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit  [CE]  ')'  expected  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
1714	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1715	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1716	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1717	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1718	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1719	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1720	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1721	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit  [CE]  ')'  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1722	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1723	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1724	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit  [CE]  ')'  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1725	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticList  [CE]  '('  or  '['  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticList  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticList	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  '('  or  '['  expected	28	None	replace
1726	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit  -  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit  -  populationLimit,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1727	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populateLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1728	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  new  Double(elitismRate));  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  new  Double(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  new  Double(elitismRate));	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1729	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  +  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  +  1);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1730	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  new  double[elitismRate]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  new  double[elitismRate]);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  new  double[elitismRate]);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1731	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit  -  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit  -  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit  -  1,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1732	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate)-  populationLimit;  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate)-  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate)-  populationLimit;	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1733	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate).doubleValue();  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate).doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate).doubleValue();	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1734	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  *  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  *  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  *  populationLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1735	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populatorLimit);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populatorLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populatorLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1736	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  -  1);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  -  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  -  1);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1737	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1738	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1739	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  demographicLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  demographicLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  demographicLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1740	[BUG]  [BUGGY]  final  double  elitismLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1741	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  1,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  1,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  1,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1742	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  populationLimit,  0,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1743	[BUG]  [BUGGY]  semifinal  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  semifinal  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	semifinal  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	53	None	replace
1744	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1745	[BUG]  [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1746	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e  [CE]  ')'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
1747	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1748	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populateLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1749	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1750	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationL  [CE]  ')'  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
1751	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit  [CE]  ')'  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
1752	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationL  [CE]  ')'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
1753	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit  [CE]  ')'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
1754	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1755	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e  [CE]  ')'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	61	None	replace
1756	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  -  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1757	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1758	[BUG]  [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(publicationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(publicationLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1759	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  *  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  *  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate  *  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1760	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1761	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit  -  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1762	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1763	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1764	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1765	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1766	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit  /  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1767	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit  [CE]  ')'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	15	None	replace
1768	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1769	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit,  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit,	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1770	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkNotNull(populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkNotNull(populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkNotNull(populationLimit);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1771	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  populate();  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  populate();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  populate();  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1772	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit  [CE]  ')'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationLimit	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	15	None	replace
1773	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  +  populationLimit;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1774	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  PopulationLimit.MAX_VALUE);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  PopulationLimit.MAX_VALUE);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  PopulationLimit.MAX_VALUE);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1775	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  new  ElitisticListPopulation(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  new  ElitisticListPopulation(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  new  ElitisticListPopulation(populationLimit,  elitismRate);	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1776	[BUG]  [BUGGY]  Preconditions.checkNotNull(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkNotNull(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkNotNull(populationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1777	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  new  Double(populationLimit);	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1778	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationsLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationsLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationsLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1779	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  populationLimit;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  populationLimit;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1780	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  *  populationLimit;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1781	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationL  [CE]  ';'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationL	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
1782	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy  [CE]  ';'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
1783	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy  [CE]  not  a  statement  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  not  a  statement	62	None	replace
1784	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit  [CE]  ')'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ')'  expected	62	None	replace
1785	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  [CE]  ';'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
1786	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate  -  populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate  -  populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate  -  populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1787	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  PopulationLimit.intValue());  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  PopulationLimit.intValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  PopulationLimit.intValue());	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1788	[BUG]  [BUGGY]  System.arraycopy(populationRimit,  0,  this.populationLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationRimit,  0,  this.populationLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationRimit,  0,  this.populationLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1789	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  /  2.0);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  /  2.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit  /  2.0);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1790	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  new  double[]  {  populationLimit  }  );  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  new  double[]  {  populationLimit  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  new  double[]  {  populationLimit  }  );	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1791	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1792	[BUG]  [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1793	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1794	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1795	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationL  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationL	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1796	[BUG]  [BUGGY]  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1797	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLi  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLi	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1798	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1799	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1800	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(final  int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(final  int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(final  int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1801	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationL  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationL	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1802	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1803	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1804	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1805	[BUG]  [BUGGY]  final  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
1806	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismR  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismR  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismR	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1807	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismR  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismR  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismR	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1808	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1809	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1810	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  e  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  e	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1811	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1812	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populitiveLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populitiveLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populitiveLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1813	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  +  1;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  populationLimit  +  1;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1814	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit,  elitismRate;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit,  elitismRate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  populationLimit,  elitismRate;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  ';'  expected	6	None	replace
1815	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  super.populationLimit;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  super.populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  super.populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1816	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_PADDING;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_PADDING;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_PADDING;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1817	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationsLimit;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  populationsLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  populationsLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1818	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1819	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_SIZE;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_SIZE;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_SIZE;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1820	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  getPopulationLimit(populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  getPopulationLimit(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  getPopulationLimit(populationLimit);	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1821	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  total;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  total;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  total;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1822	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1823	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1824	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1825	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1826	[BUG]  [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1827	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1828	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1829	[BUG]  [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1830	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1831	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationsLimit);  }  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationsLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationsLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1832	[BUG]  [BUGGY]  final  double  elitismLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1833	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  -  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  -  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  -  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1834	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationUtil.doubleValue(populationLimit);  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationUtil.doubleValue(populationLimit);  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationUtil.doubleValue(populationLimit);  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1835	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1836	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(this.elitismRate,  0,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1837	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  denominationLimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  denominationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  denominationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1838	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationUtil.doubleValue(populationLimit);  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationUtil.doubleValue(populationLimit);  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationUtil.doubleValue(populationLimit);  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1839	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  dataLimit);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  dataLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  dataLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1840	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1841	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1842	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1843	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismRate;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1844	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1845	[BUG]  [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1846	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1847	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1848	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1849	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation[populationLimit,  populationLimit,  elitismRate);  }  [CE]  ']'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation[populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation[populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ']'  expected	37	None	replace
1850	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0,  populationLimit  <  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0,  populationLimit  <  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0,  populationLimit  <  0;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
1851	[BUG]  [BUGGY]  for(final  int  populationLimit  =  3;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  3;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  3;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1852	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populateLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1853	[BUG]  [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1854	[BUG]  [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1855	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismLimit);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1856	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populateLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1857	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1858	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1859	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  numberLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  numberLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  numberLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1860	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  PopulationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1861	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populateLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1862	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populateLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1863	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1864	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1865	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  childLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  childLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  childLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1866	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  PopulationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1867	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  numberLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1868	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  number  [CE]  ')'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  number  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  number	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
1869	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  popul  [CE]  ')'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  popul  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  popul	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
1870	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populations  [CE]  ')'  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populations  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populations	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
1871	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationUtil.doubleValue(populationLimit);  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationUtil.doubleValue(populationLimit);  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationUtil.doubleValue(populationLimit);  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1872	[BUG]  [BUGGY]  semifinal  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  not  a  statement  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  semifinal  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	semifinal  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  not  a  statement	43	None	replace
1873	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(elemRate,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(elemRate,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(elemRate,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1874	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1875	[BUG]  [BUGGY]  setPopulationLimit(populationLimit);  this.elitismRate  =  populationLimit;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulationLimit(populationLimit);  this.elitismRate  =  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulationLimit(populationLimit);  this.elitismRate  =  populationLimit;	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1876	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  setPopulationLimit(populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  setPopulationLimit(populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  setPopulationLimit(populationLimit);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1877	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkNotNull(populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkNotNull(populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkNotNull(populationLimit);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1878	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  populate();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  populate();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  populate();  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1879	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1880	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  init();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  init();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  init();  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1881	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  super();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  super();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  super();  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1882	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  invalidate();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  invalidate();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  invalidate();  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1883	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1884	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate  [CE]  ')'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	56	None	replace
1885	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1886	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1887	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationL  [CE]  ')'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  populationL	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	56	None	replace
1888	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1889	[BUG]  [BUGGY]  setPopulationLimit(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulationLimit(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulationLimit(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1890	[BUG]  [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
1891	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1892	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate)+  populationLimit;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate)+  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate)+  populationLimit;	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1893	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  -  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  -  1);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1894	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate)-  populationLimit;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate)-  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate)-  populationLimit;	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1895	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  -  populationLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1896	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  new  Double(elitismRate));  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  new  Double(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  new  Double(elitismRate));	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1897	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  *  populationLimit);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  *  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate  *  populationLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1898	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populateLimit);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populateLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  populateLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1899	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit  +  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit  +  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit  +  1,  elitismRate);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1900	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  new  double[elitismRate]);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  new  double[elitismRate]);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  new  double[elitismRate]);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1901	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  PopulationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  PopulationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1902	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  *  PopulationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  *  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  *  PopulationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1903	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue(populationLimit);	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1904	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  demographicLimit;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  demographicLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  +  demographicLimit;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1905	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.multiply(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.multiply(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.multiply(populationLimit,  elitismRate);	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1906	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  populationsLimit;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  populationsLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  +  populationsLimit;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1907	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.multiply(populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.multiply(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.multiply(populationLimit);	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1908	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.longValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.longValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.longValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1909	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1910	[BUG]  [BUGGY]  elitismRate  =  populationLimit  <=  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  =  populationLimit  <=  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  =  populationLimit  <=  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1911	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  +  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  +  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  +  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1912	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  <  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  <  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  <  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1913	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1914	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  <=  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  <=  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  <=  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1915	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationsLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1916	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.doubleToIntBits(populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.doubleToIntBits(populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.doubleToIntBits(populationLimit);	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1917	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.instance;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.instance;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.instance;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1918	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  populationLimit;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  populationLimit;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1919	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  demographicLimit;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  demographicLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  demographicLimit;	  this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1920	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.ZERO);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.ZERO);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.ZERO);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1921	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.UNDEFINED);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.UNDEFINED);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.UNDEFINED);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1922	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  BevölkerungLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  BevölkerungLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  BevölkerungLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1923	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  totalLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  totalLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  totalLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1924	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  dataLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  dataLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  dataLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1925	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.INHERITED);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.INHERITED);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.INHERITED);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1926	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.DECEMBER);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.DECEMBER);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.DECEMBER);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1927	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1928	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
1929	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1930	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1931	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
1932	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit  [CE]  ')'  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
1933	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1934	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationL  [CE]  ')'  expected  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
1935	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1936	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  +  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  +  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  +  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1937	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.ZERO;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.ZERO;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.ZERO;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1938	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLi  [CE]  ')'  expected  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLi	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	33	None	replace
1939	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  <  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1940	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1941	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1942	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1943	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1944	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1945	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1946	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1947	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationsLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationsLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationsLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1948	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  1,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  1,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  1,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1949	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    super(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1950	[BUG]  [BUGGY]  if(populationLimit  <=  0.0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0.0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0.0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1951	[BUG]  [BUGGY]  if(populationLimit  <=  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1952	[BUG]  [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1953	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1954	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1955	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1956	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1957	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [CE]  ')'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1958	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit  [CE]  ')'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1959	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationL  [CE]  ')'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1960	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1961	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1962	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1963	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLi  [CE]  ')'  expected  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLi  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLi	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1964	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  elitismRate;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  elitismRate;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  elitismRate;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1965	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.0.0;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.0.0;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.0.0;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	28	None	replace
1966	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationL  [CE]  ')'  expected  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	28	None	replace
1967	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1968	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate)  {  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate)  {  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1969	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1970	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1971	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1972	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1973	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1974	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1975	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  return  null;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  return  null;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1976	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate  [CE]  ')'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    }    	non-compiled	[CE]  ')'  expected	25	None	replace
1977	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1978	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populateLimit;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populateLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populateLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1979	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1980	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1981	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  PopulationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  PopulationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  PopulationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1982	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1983	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  PopulationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  PopulationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  PopulationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1984	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  PopulationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  PopulationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  PopulationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1985	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  size;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  size;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  size;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1986	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1987	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationsLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationsLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationsLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1988	[BUG]  [BUGGY]  if(populationLimit  <=  0)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1989	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populateLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populateLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  if(populationLimit  >  populateLimit)  {  this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    if(populationLimit    >    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1990	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1991	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1992	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0)  {  this.elitismRate  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0)  {  this.elitismRate  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0)  {  this.elitismRate  =  populationLimit;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1993	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  this.elitismRate  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  this.elitismRate  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  <  populationLimit)  {  this.elitismRate  =  populationLimit;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1994	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  +  elitismRate;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  +  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  populationLimit  +  elitismRate;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1995	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.UNDEFINED;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.UNDEFINED;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.UNDEFINED;	  this.populationLimit    =    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1996	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  >  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  >  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  >  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1997	[BUG]  [BUGGY]  elitismRate  =  populationLimit  >  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  =  populationLimit  >  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  =  populationLimit  >  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1998	[BUG]  [BUGGY]  last().populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  last().populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	last().populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1999	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate  -  populationLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2000	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate,  populationsLimit);	  this.populationLimit    =    PopulationUtils.getPopulationLimit(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2001	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2002	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2003	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	15	None	replace
2004	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e  [CE]  ')'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	15	None	replace
2005	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2006	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  null;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  null;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2007	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  ==  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  ==  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  ==  populationLimit);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2008	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  <  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  <  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  <  populationLimit,  elitismRate);  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2009	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  null;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  null;  }	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2010	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate  [CE]  ')'  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate	  super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	15	None	replace
2011	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2012	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2013	[BUG]  [BUGGY]  for(final  int  populationLimit  :  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  e  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  :  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  :  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2014	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2015	[BUG]  [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2016	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2017	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2018	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2019	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  e  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2020	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2021	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  PopulationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  PopulationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  PopulationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2022	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0,  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0,  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0,  populationLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
2023	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2024	[BUG]  [BUGGY]  validatePopulation(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  validatePopulation(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	validatePopulation(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
2025	[BUG]  [BUGGY]  lastPosition  =  populationLimit  +  this.populationLimit;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  lastPosition  =  populationLimit  +  this.populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	lastPosition  =  populationLimit  +  this.populationLimit;  this.elitismRate  =  elitismRate;	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
2026	[BUG]  [BUGGY]  lastPopulation  =  populationLimit  +  elitismRate;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  lastPopulation  =  populationLimit  +  elitismRate;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	lastPopulation  =  populationLimit  +  elitismRate;  this.elitismRate  =  elitismRate;	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
2027	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  this.elitismRate  =  elitismRate;	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
2028	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2029	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2030	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2031	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2032	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2033	[BUG]  [BUGGY]  for(final  char  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  char  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  char  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2034	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2035	[BUG]  [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2036	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  elitismRate,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2037	[BUG]  [BUGGY]  for(final  int  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2038	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationsLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationsLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationsLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2039	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationsLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2040	[BUG]  [BUGGY]  setElitismRate(elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setElitismRate(elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setElitismRate(elitismRate,  populationLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2041	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate  +  PopulationLimit.doubleValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate  +  PopulationLimit.doubleValue());  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate  +  PopulationLimit.doubleValue());	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2042	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate  +  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate  +  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate  +  1,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2043	[BUG]  [BUGGY]  setPopulationLimit(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulationLimit(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulationLimit(populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2044	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate  +  1,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate  +  1,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate  +  1,  populationLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2045	[BUG]  [BUGGY]  setRange(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setRange(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setRange(populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2046	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate  |  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate  |  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate  |  populationLimit);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2047	[BUG]  [BUGGY]  setpopulationLimit(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setpopulationLimit(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setpopulationLimit(populationLimit,  elitismRate);	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2048	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate;  [CE]  ')'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  setPopulation(populationLimit,  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate;	  setPopulation(populationLimit,    elitismRate);    	non-compiled	[CE]  ')'  expected	3	None	replace
2049	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2050	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2051	[BUG]  [BUGGY]  for(final  int  populationLimit  :  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  :  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  :  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2052	[BUG]  [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2053	[BUG]  [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  elitismLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2054	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2055	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2056	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2057	[BUG]  [BUGGY]  for(final  int  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2058	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0,  populateLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0,  populateLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0,  populateLimit  <  elitismRate;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
2059	[BUG]  [BUGGY]  for(final  char  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  char  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  char  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit,    populateLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2060	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2061	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2062	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2063	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2064	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2065	[BUG]  [BUGGY]  for(final  char  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  char  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  char  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2066	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2067	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2068	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  PopulationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  PopulationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  PopulationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2069	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2070	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2071	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2072	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  ||  elitismRate  >  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit  ||  elitismRate  >  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit  ||  elitismRate  >  populationLimit);  this.elitismRate  =  elitismRate;	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2073	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  populationLimit);  }	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2074	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2075	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  preconditions.checkState(populationLimit  <  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  preconditions.checkState(populationLimit  <  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  preconditions.checkState(populationLimit  <  populationLimit);  }	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2076	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  init();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  init();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  init();  }	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2077	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate  [CE]  ')'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	55	None	replace
2078	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  1);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  1);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  1);  }	  Preconditions.checkState(populationLimit    <    populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2079	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  this.populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  this.populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  this.populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
2080	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  double  elitismRate);  [CE]  '.class'  expected  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  double  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  double  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	36	None	replace
2081	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  new  int[]  {  0  }  );	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
2082	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  final  double  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  final  double  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  final  double  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
2083	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  totalLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  totalLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  totalLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
2084	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  totalLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  totalLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate,  totalLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
2085	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
2086	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
2087	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  <  elitismRate;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  <  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  <  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
2088	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0001)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0001)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0001)  {  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
2089	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  <=  elitismRate;  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  <=  elitismRate;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  <=  elitismRate;	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
2090	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0.0)  {  this.elitismRate  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0.0)  {  this.elitismRate  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0.0)  {  this.elitismRate  =  populationLimit;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
2091	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2092	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  +  PopulationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  +  PopulationLimit.doubleValue();  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate  +  PopulationLimit.doubleValue();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2093	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.abs(elitismRate);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.abs(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.abs(elitismRate);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2094	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  populate();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  populate();  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  populate();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2095	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2096	[BUG]  [BUGGY]  if(populationLimit  <=  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2097	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2098	[BUG]  [BUGGY]  if(populationLimit  <=  0.0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  0.0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  0.0)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2099	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2100	[BUG]  [BUGGY]  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  ElitisticListPopulation(double  populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2101	[BUG]  [BUGGY]  if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  ==  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2102	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2103	[BUG]  [BUGGY]  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2104	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2105	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  number)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  number)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  number)  {  this.populationLimit  =  populationLimit;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2106	[BUG]  [BUGGY]  if(populationLimit  <=  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  elitismRate)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate,    int    populationLimit)    {    this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2107	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population  [CE]  ';'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
2108	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(  [CE]  ';'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
2109	[BUG]  [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit  [CE]  ';'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  ';'  expected	62	None	replace
2110	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2111	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2112	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2113	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2114	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2115	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populateLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populateLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populateLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2116	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2117	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populateLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populateLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populateLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2118	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.elitismRate;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2119	[BUG]  [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  demographicLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation.this.populationLimit    =    populationLimit;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2120	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
2121	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
2122	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  <  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
2123	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleValue();  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleValue();  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.doubleValue();  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
2124	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.MAX_VALUE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.MAX_VALUE);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
2125	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
2126	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationL  [CE]  ')'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	32	None	replace
2127	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
2128	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
2129	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  1,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  1,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  1,  elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
2130	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  1;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  1;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  1;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
2131	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  1,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  1,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  1,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
2132	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
2133	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  0,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  0,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
2134	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit  ||  elitismRate  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit  ||  elitismRate  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit  ||  elitismRate  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
2135	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  ==  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  ==  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  ==  populationLimit);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
2136	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  setPopulationLimit(populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  setPopulationLimit(populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  setPopulationLimit(populationLimit);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
2137	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
2138	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	56	None	replace
2139	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e  [CE]  ')'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  +  1,  e	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	56	None	replace
2140	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  ==  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  ==  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  Preconditions.checkState(populationLimit  ==  populationLimit);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
2141	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
2142	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
2143	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  PopulationLimit.	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
2144	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate  [CE]  ')'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate	  setPopulationLimit(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	56	None	replace
2145	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  1);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2146	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  numberLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  numberLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  numberLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2147	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  populations);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  populations);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate,  populations);	  this.populationLimit    =    PopulationLimit.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2148	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MIN_VALUE;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MIN_VALUE;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MIN_VALUE;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2149	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2150	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2151	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2152	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2153	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.NaN;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.NaN;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.NaN;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2154	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MIN_PER_SIZE;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MIN_PER_SIZE;  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MIN_PER_SIZE;  this.elitismRate  =  elitismRate;  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2155	[BUG]  [BUGGY]  for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  elitismLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
2156	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
2157	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  numberLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
2158	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
2159	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
2160	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populations.length;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
2161	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  this.elitismRate;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
2162	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  size;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
2163	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0,  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0,  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0,  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    ElitisticListPopulation(populationLimit,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
2164	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleToIntBits(populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleToIntBits(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.doubleToIntBits(populationLimit);	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2165	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.floatToIntBits(populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.floatToIntBits(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.floatToIntBits(populationLimit);	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2166	[BUG]  [BUGGY]  this.populationLimit  -=  PopulationLimit.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  -=  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  -=  PopulationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2167	[BUG]  [BUGGY]  System.arraycopy(elitismLimit,  0,  this.populationLimit,  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(elitismLimit,  0,  this.populationLimit,  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(elitismLimit,  0,  this.populationLimit,  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
2168	[BUG]  [BUGGY]  System.arraycopy(this.populationLimit,  0,  this.populationLimit,  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(this.populationLimit,  0,  this.populationLimit,  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(this.populationLimit,  0,  this.populationLimit,  1,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
2169	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  11,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  11,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  11,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
2170	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(limit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(limit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(limit,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2171	[BUG]  [BUGGY]  int  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(len,  populationLimit,  elitismRate);  }  [CE]  >  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  int  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(len,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	int  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(len,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  >  expected	29	None	replace
2172	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(index,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(index,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(index,  populationLimit,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2173	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  PopulationLimit.ZERO,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  PopulationLimit.ZERO,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  PopulationLimit.ZERO,  elitismRate);  }	  for(int    i    =    0,    len    =    populationLimit;    i    <    len;    ++i)    {    ElitisticListPopulation.this.population    =    new    ElitisticListPopulation(i,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2174	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
2175	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
2176	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationL  [CE]  ')'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	20	None	replace
2177	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit  [CE]  ')'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	20	None	replace
2178	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populateLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
2179	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
2180	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
2181	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  PopulationLimit.instance);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  PopulationLimit.instance);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  PopulationLimit.instance);	  System.arraycopy(populationLimit,    0,    this.populationRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
2182	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2183	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2184	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2185	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  PopulationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2186	[BUG]  [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  this.populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2187	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2188	[BUG]  [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  1;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  1,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2189	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2190	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  elitismRate  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2191	[BUG]  [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2192	[BUG]  [BUGGY]  for(final  int  populationLimit  :  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  e  [CE]  <identifier>  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  :  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  :  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2193	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  [CE]  <identifier>  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2194	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  e  [CE]  <identifier>  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  e	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate,    populationLimit);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2195	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2196	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2197	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationL  [CE]  ')'  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationL  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationL	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
2198	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  [CE]  ')'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
2199	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2200	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  numberLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2201	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2202	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  int  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2203	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
2204	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate  [CE]  ')'  expected  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	30	None	replace
2205	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(elitismRate,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
2206	[BUG]  [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy  [CE]  >  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  >  expected	60	None	replace
2207	[BUG]  [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population  [CE]  >  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(population	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  >  expected	60	None	replace
2208	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(population,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(population,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(population,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
2209	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    else    {    System.arraycopy(populationLimit,    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
2210	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationRimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationRimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  populationRimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2211	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  numberLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  numberLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  numberLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2212	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  populations);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  populations);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  populations);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2213	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  1);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  1);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2214	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  0.0);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  0.0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate,  0.0);	  this.populationLimit    =    PopulationLimit.getInstance(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2215	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populations);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populations);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2216	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  1);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  1);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2217	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populatorLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populatorLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate,  populatorLimit);	  this.populationLimit    =    PopulationLimit.getValue(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2218	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
2219	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
2220	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
2221	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  numberLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  numberLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  numberLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
2222	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populateLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populateLimit,  elitismRate  }  );  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populateLimit,  elitismRate  }  );  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(new    int[]    {    0    },    populationLimit,    elitismRate    }    );    }    	non-compiled	[CE]  ')'  expected	58	None	replace
2223	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
2224	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populateLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populateLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populateLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
2225	[BUG]  [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	private  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
2226	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
2227	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populitiveLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populitiveLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populitiveLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
2228	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  remainingLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  remainingLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  remainingLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2229	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  PopulationLimit.instance);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  PopulationLimit.instance);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  PopulationLimit.instance);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2230	[BUG]  [BUGGY]  System.arraycopy(datasetLimit,  0,  this.populationLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(datasetLimit,  0,  this.populationLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(datasetLimit,  0,  this.populationLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2231	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  1,  this.populationLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  1,  this.populationLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  1,  this.populationLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2232	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  this.populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  this.populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  this.populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2233	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2234	[BUG]  [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	public  static  final  ElitisticListPopulation(int  populationLimit,  int  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2235	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    public    static    final    ElitisticListPopulation(int    populationLimit,    double    elitismRate)    {    super(populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2236	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2237	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2238	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  <  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2239	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  +  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  +  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  +  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2240	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ",  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ",  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ",  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2241	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2242	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  >  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  >  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  >  elitismRate;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2243	[BUG]  [BUGGY]  final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationsLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2244	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2245	[BUG]  [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleValue();  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  PopulationLimit.doubleValue();  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  PopulationLimit.doubleValue();  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2246	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  *  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit  *  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit  *  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2247	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.compute(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.compute(populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.compute(populationLimit,  elitismRate);	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2248	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit)/  populationLimit;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit)/  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit)/  populationLimit;	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2249	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit;  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit;	  this.populationLimit    =    PopulationLimit.get(populationLimit);    	non-compiled	[CE]  ')'  expected	4	None	replace
2250	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  this.elitismRate);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  this.elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  this.elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2251	[BUG]  [BUGGY]  System.arraycopy(this.populationLimit,  0,  populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(this.populationLimit,  0,  populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(this.populationLimit,  0,  populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2252	[BUG]  [BUGGY]  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(elitismLimit,  0,  this.populationLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2253	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  PopulationLimit.MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  PopulationLimit.MAX_VALUE);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  PopulationLimit.MAX_VALUE);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    0,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2254	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  elitismRate);  }	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
2255	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	  if(populationLimit    >    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
2256	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)+  Math.max(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)+  Math.max(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)+  Math.max(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2257	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(repeatLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(repeatLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(repeatLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2258	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(elitismLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(elitismLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(elitismLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2259	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.mini(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.mini(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.mini(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2260	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)+  Math.min(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)+  Math.min(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)+  Math.min(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2261	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(repeatLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.min(repeatLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.min(repeatLimit,  elitismRate);	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2262	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)-  populationLimit;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)-  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate)-  populationLimit;	      this.populationLimit    =    populationLimit    +    Math.max(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2263	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit  +  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit  +  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit  +  populationLimit,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
2264	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  -  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  -  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate  -  populationLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
2265	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationsLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationsLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationsLimit);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
2266	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  +  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  +  1,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit  +  1,  elitismRate);	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
2267	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit;  [CE]  ')'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit;  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  populationLimit;	  this.populationLimit    =    NumberInput.parse(populationLimit,    elitismRate);    	non-compiled	[CE]  ')'  expected	57	None	replace
2268	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2269	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  <  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2270	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  +  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  +  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  +  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2271	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit;  if(populationLimit  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2272	[BUG]  [BUGGY]  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	populationLimit  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2273	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  -  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  -  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  -  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2274	[BUG]  [BUGGY]  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2275	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  e  [CE]  ')'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  e  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  e	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
2276	[BUG]  [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <=  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
2277	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit,  elitismRate  [CE]  ')'  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit,  elitismRate  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  populationLimit,  elitismRate	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    this.elitismRate    =    elitismRate;    }    else    {    System.arraycopy(populationLimit,    elitismRate,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
2278	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2279	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  demographicLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  demographicLimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  demographicLimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2280	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2281	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  1,  populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  1,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  1,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2282	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  PopulationLimit.instance);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  PopulationLimit.instance);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  PopulationLimit.instance);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2283	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  totalLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  totalLimit,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  totalLimit,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2284	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationRimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationRimit,  0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationRimit,  0,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2285	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2286	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populateLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2287	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populateLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2288	[BUG]  [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  100;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2289	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2290	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  PopulationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2291	[BUG]  [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  double  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populateLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2292	[BUG]  [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  0;  populationLimit  <  PopulationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2293	[BUG]  [BUGGY]  for(final  int  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  for(final  int  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  numberLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	  for(final    int    populationLimit    =    populationLimit;    populationLimit    <    populationLimit;    elitismRate++)    {    final    ElitisticListPopulation(populationLimit    +    populationLimit,    elitismRate);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2294	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.instance);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.instance);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.instance);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2295	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismMask,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismMask,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismMask,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2296	[BUG]  [BUGGY]  System.arraycopy(datasetLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(datasetLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(datasetLimit,  0,  this.elitismRate,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2297	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRoot,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRoot,  0,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRoot,  0,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.elitismRate,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2298	[BUG]  [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  int  populationLimit  =  populationLimit  <  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  int  populationLimit  =  populationLimit  <  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
2299	[BUG]  [BUGGY]  final  double  elitismRate  =  populationLimit;  Log.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  final  double  elitismRate  =  populationLimit;  Log.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	final  double  elitismRate  =  populationLimit;  Log.arraycopy(populationLimit,  0,  this.elitismRate,  elitismRate);	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    System.arraycopy(populationLimit,    0,    this.elitismRate,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
2300	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.intValue  -  populationLimit;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.intValue  -  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.intValue  -  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2301	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  this.populationLimit;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  this.populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  this.populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2302	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  previousPopulationLimit;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  previousPopulationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  previousPopulationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2303	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_LOAD_FACTOR;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_LOAD_FACTOR;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_LOAD_FACTOR;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2304	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.intValue()  -  populationLimit;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  PopulationLimit.intValue()  -  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.intValue()  -  populationLimit;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2305	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.ZERO;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.ZERO;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.ZERO;	      this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2306	[BUG]  [BUGGY]  System.arraycopy(elitismLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(elitismLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(elitismLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
2307	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  colonizationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  colonizationLimit,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  colonizationLimit,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
2308	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  public  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  public  elitismRate,  populationLimit);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  public  elitismRate,  populationLimit);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
2309	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  data.length,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  data.length,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  data.length,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
2310	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  version,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  version,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  version,  elitismRate);	  System.arraycopy(populationLimit,    0,    this.populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
2311	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.ZERO;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2312	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  PopulationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  PopulationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  PopulationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2313	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.doubleValue();  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2314	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationsLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2315	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  elitismRate;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  elitismRate;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  +  elitismRate;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2316	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.0.0;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.0.0;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.0.0;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	61	None	replace
2317	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  numberLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  numberLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  numberLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2318	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.001)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2319	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationsLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationsLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationsLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2320	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.0.0;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  ';'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.0.0;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  Population.0.0;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  ';'  expected	61	None	replace
2321	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  PopulationLimit.MAX_VALUE;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2322	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;    [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]      [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  1.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  if(populationLimit    <    populationLimit)    {    final    double    elitismRate    =    populationLimit;    if(elitismRate    >    0.0)    {    return    new    ElitisticListPopulation(this,    populationLimit,    elitismRate);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
