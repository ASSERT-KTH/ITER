bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  this.populationLimit  =  populationLimit;  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit;	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate;  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  populationLimit  +  elitismRate;	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
3	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  setPopulation(populationLimit,  elitismRate);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulation(populationLimit,  elitismRate);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
4	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  this.populationLimit  =  PopulationLimit.get(populationLimit);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.get(populationLimit);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]    this.populationLimit  =  populationLimit  -  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    this.populationLimit  =  populationLimit  -  populationLimit;  [BUGGY]  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	    this.populationLimit  =  populationLimit  -  populationLimit;		non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	16	None	add
7	[BUG]  [BUGGY]    super(populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit,  elitismRate);  [BUGGY]  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	    super(populationLimit,  elitismRate);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	16	None	add
8	[BUG]  [BUGGY]    this.populationLimit  =  PopulationLimit.doubleValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    this.populationLimit  =  PopulationLimit.doubleValue();  [BUGGY]  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	    this.populationLimit  =  PopulationLimit.doubleValue();		non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	16	None	add
9	[BUG]  [BUGGY]    this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate);  [BUGGY]  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	    this.populationLimit  =  populationLimit  +  Math.max(populationLimit,  elitismRate);		non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	16	None	add
10	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
12	[BUG]  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  populationLimit);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
15	[BUG]  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]              AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	super(populationLimit);  this.elitismRate  =  elitismRate;	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
16	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getValue(populationLimit,  elitismRate);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationRate,  0,  populationLimit);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  this.populationLimit  =  populationLimit;  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
19	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.parse(populationLimit,  elitismRate);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
20	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                              AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  PopulationLimit.getInstance(populationLimit,  elitismRate);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  1,  elitismRate);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  ElitisticListPopulation.this.population  =  new  ElitisticListPopulation(i,  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [CE]  illegal  start  of  expression  [FE]                                              AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate)  {  super(populationLimit,  elitismRate	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  elitismRate,  0,  populationLimit);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
33	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  return  new  ElitisticListPopulation(populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  public  static  final  ElitisticListPopulation(int  populationLimit,  double  elitismRate,  int  populationLimit)  {  this.populationLimit  =  populationLimit;  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
37	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  <identifier>  expected	15	None	replace
38	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
42	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  super(populationLimit  +  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
44	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  <identifier>  expected  [FE]                          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	}  	non-compiled	[CE]  <identifier>  expected	15	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populationLimit);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  populationLimit);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
48	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
49	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  final  ElitisticListPopulation(populationLimit,  populateLimit,  elitismRate);  }	}  	non-compiled	[CE]  <identifier>  expected	15	None	replace
51	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	for(final  int  populationLimit  =  populationLimit;  populationLimit  <  populationLimit;  elitismRate++)  {  ElitisticListPopulation.this.populationLimit  =  populationLimit;  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
54	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	Preconditions.checkState(populationLimit  <  populationLimit);  this.elitismRate  =  elitismRate;	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
56	[BUG]  [BUGGY]  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate);  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	this.populationLimit  =  NumberInput.parse(populationLimit,  elitismRate);	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [CE]  ')'  expected  [FE]              AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(new  int[]  {  0  },  populationLimit,  elitismRate  }  );  }	}  	non-compiled	[CE]  ')'  expected	15	None	replace
59	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  this.elitismRate  =  elitismRate;  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
60	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,  [CE]  illegal  start  of  expression  [FE]                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
61	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
62	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,  [CE]  illegal  start  of  expression  [FE]                      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  else  {  System.arraycopy(populationLimit,	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
63	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]    [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	66	66	4	replace	if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  this.elitismRate  =  elitismRate;  }	}  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
