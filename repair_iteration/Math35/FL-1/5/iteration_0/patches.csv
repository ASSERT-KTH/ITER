bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    super(populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    super(populationLimit,  elitismRate);  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    super(populationLimit,  elitismRate);		non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	10	None	add
2	[BUG]  [BUGGY]    this(populationLimit,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean)  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    this(populationLimit,  elitismRate,  false);  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    this(populationLimit,  elitismRate,  false);		non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean)	10	None	add
3	[BUG]  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    super(populationLimit);  this.elitismRate  =  elitismRate;		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	10	None	add
4	[BUG]  [BUGGY]    this.populationLimit  =  populationLimit  +  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    this.populationLimit  =  populationLimit  +  elitismRate;  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    this.populationLimit  =  populationLimit  +  elitismRate;		non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	10	None	add
5	[BUG]  [BUGGY]    this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    this.populationLimit  =  populationLimit;  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    this.populationLimit  =  populationLimit;		non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	10	None	add
6	[BUG]  [BUGGY]  this(populationLimit,  elitismRate);  [CE]  recursive  constructor  invocation  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  this(populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  recursive  constructor  invocation	9	None	replace
7	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  +  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	9	None	replace
8	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	9	None	replace
9	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	9	None	replace
10	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	9	None	replace
11	[BUG]  [BUGGY]    super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;		non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	10	None	add
12	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }  );	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	9	None	replace
13	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitismRate.doubleValue());  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.doubleValue());	super(populationLimit);  	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
14	[BUG]  [BUGGY]  super(populationLimit,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitism);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitism);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitism	9	None	replace
15	[BUG]  [BUGGY]  super(numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(numberLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(numberLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  numberLimit	9	None	replace
16	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,int)  [FE]            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  +  elitismRate,  populationLimit);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate,  populationLimit);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,int)	9	None	replace
17	[BUG]  [BUGGY]  super(populationLimit,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]              AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitismMask);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismMask);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitismMask	9	None	replace
18	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  +  1,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	9	None	replace
19	[BUG]  [BUGGY]  super(populationLimit,  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  0,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	9	None	replace
20	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.intValue());  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitismRate.intValue());  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.intValue());	super(populationLimit);  	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
21	[BUG]  [BUGGY]  super(publicationLimit,  elitismRate);  [CE]  cannot  find  symbol  publicationLimit  [FE]                      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(publicationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  publicationLimit	9	None	replace
22	[BUG]  [BUGGY]  super(populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  double  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  double  elitismRate);	super(populationLimit);  	non-compiled	[CE]  '.class'  expected	9	None	replace
23	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  this.elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate);	super(populationLimit);  	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	9	None	replace
24	[BUG]  [BUGGY]  super(populationLimit,  elitism.doubleValue());  [CE]  cannot  find  symbol  elitism  [FE]                            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitism.doubleValue());  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitism.doubleValue());	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitism	9	None	replace
25	[BUG]  [BUGGY]  super(populationLimit,  elitismRoot);  [CE]  cannot  find  symbol  elitismRoot  [FE]                              AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitismRoot);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRoot);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitismRoot	9	None	replace
26	[BUG]  [BUGGY]  super(populationLimit,  elitismDate);  [CE]  cannot  find  symbol  elitismDate  [FE]                                AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitismDate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismDate);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitismDate	9	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  /  populationLimit);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  /  populationLimit);	super(populationLimit);  	compilable	  [FE]  AssertionError  	9	5	replace
28	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  [FE]  AssertionError  [FE]                                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  /  populationLimit);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit);	super(populationLimit);  	compilable	  [FE]  AssertionError  	9	5	replace
29	[BUG]  [BUGGY]  super(populationLimit,  elitismLeft);  [CE]  cannot  find  symbol  elitismLeft  [FE]                                    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitismLeft);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismLeft);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitismLeft	9	None	replace
30	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitism  }  );  [CE]  cannot  find  symbol  elitism  [FE]                                      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  new  double[]  {  elitism  }  );  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitism  }  );	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitism	9	None	replace
31	[BUG]  [BUGGY]  super(populatedLimit,  elitismRate);  [CE]  cannot  find  symbol  populatedLimit  [FE]                                        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populatedLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populatedLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  populatedLimit	9	None	replace
32	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	9	None	replace
33	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	9	None	replace
34	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	9	None	replace
35	[BUG]  [BUGGY]  super(populationLimit  +  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  +  numberLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  numberLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  numberLimit	9	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  -  populationLimit);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  -  populationLimit);	super(populationLimit);  	compilable	  [FE]  AssertionError  	9	8	replace
37	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  -  populationLimit);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit);	super(populationLimit);  	compilable	  [FE]  AssertionError  	9	8	replace
38	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]              AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	9	None	replace
39	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.doubleValue());  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate.doubleValue());	super(populationLimit);  	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
40	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                  AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	9	None	replace
41	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate,  elitismLimit);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  elitismRate,  elitismLimit);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitismLimit	9	None	replace
42	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate,  elitismLimit);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  elitismRate,  elitismLimit);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitismLimit	9	None	replace
43	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate));  [CE]  no  suitable  constructor  found  for  ListPopulation(int,Double)  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  new  Double(elitismRate));  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate));	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,Double)	9	None	replace
44	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  +  elitismRate,  elitismLimit);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate,  elitismLimit);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitismLimit	9	None	replace
45	[BUG]  [BUGGY]  super(populationLimit,  elitismLast);  [CE]  cannot  find  symbol  elitismLast  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitismLast);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismLast);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitismLast	9	None	replace
46	[BUG]  [BUGGY]  super(populationLimit,  elitismFactor);  [CE]  cannot  find  symbol  elitismFactor  [FE]          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit,  elitismFactor);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismFactor);	super(populationLimit);  	non-compiled	[CE]  cannot  find  symbol  elitismFactor	9	None	replace
