bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(populationLimit,  populationLimit.doubleValue());  [CE]  int  cannot  be  dereferenced  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
2	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
3	[BUG]  [BUGGY]  super(populationLimit,  populate.doubleValue());  [CE]  cannot  find  symbol  populate  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populate	24	None	replace
4	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  +  elitism.doubleValue());  [CE]  cannot  find  symbol  elitism  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  +  elitism.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  +  elitism.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitism	24	None	replace
5	[BUG]  [BUGGY]  super(populationLimit,  number.doubleValue());  [CE]  cannot  find  symbol  number  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  number.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  number.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  number	24	None	replace
6	[BUG]  [BUGGY]  super(populationLimit,  populator.doubleValue());  [CE]  cannot  find  symbol  populator  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populator.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populator.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populator	24	None	replace
7	[BUG]  [BUGGY]  super(populationLimit,  population.doubleValue());  [CE]  cannot  find  symbol  population  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  population.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  population.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  population	24	None	replace
8	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitism.doubleValue());  [CE]  cannot  find  symbol  elitism  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitism.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitism.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitism	24	None	replace
9	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  -  elitism.doubleValue());  [CE]  cannot  find  symbol  elitism  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  -  elitism.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  -  elitism.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitism	24	None	replace
10	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate.doubleValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	24	None	replace
11	[BUG]  [BUGGY]  super(populationLimit,  populationLimit.doubleValue(),  elitismRate.doubleValue());  [CE]  int  cannot  be  dereferenced  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit.doubleValue(),  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit.doubleValue(),  elitismRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
12	[BUG]  [BUGGY]  super(populationLimit,  populationRimit.doubleValue());  [CE]  cannot  find  symbol  populationRimit  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRimit.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populationRimit	24	None	replace
13	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.doubleValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	24	None	replace
14	[BUG]  [BUGGY]  super(populationLimit,  populationLimit.doubleValue()  /  elitismRate.doubleValue());  [CE]  int  cannot  be  dereferenced  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit.doubleValue()  /  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit.doubleValue()  /  elitismRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
15	[BUG]  [BUGGY]  super(populationLimit,  populationLimit.doubleValue()  +  elitismRate.doubleValue());  [CE]  int  cannot  be  dereferenced  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit.doubleValue()  +  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit.doubleValue()  +  elitismRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
16	[BUG]  [BUGGY]  super(populationLimit,  size.doubleValue());  [CE]  cannot  find  symbol  size  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  size.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  size.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  size	24	None	replace
17	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  +  elitismRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
18	[BUG]  [BUGGY]  super(populationLimit,  populations.doubleValue());  [CE]  cannot  find  symbol  populations  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populations.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populations.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populations	24	None	replace
19	[BUG]  [BUGGY]  super(populationLimit,  this.elitism.doubleValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitism.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitism.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	24	None	replace
20	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  /.doubleValue());  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  /.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  /.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
21	[BUG]  [BUGGY]  super(populationLimit,  populationRate.doubleValue());  [CE]  cannot  find  symbol  populationRate  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populationRate	24	None	replace
22	[BUG]  [BUGGY]  super(populationLimit,  populationLimit.doubleValue()  -  elitismRate.doubleValue());  [CE]  int  cannot  be  dereferenced  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit.doubleValue()  -  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit.doubleValue()  -  elitismRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
23	[BUG]  [BUGGY]  super(populationLimit,  populationLimit.doubleValue()  &  elitismRate.doubleValue());  [CE]  int  cannot  be  dereferenced  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit.doubleValue()  &  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit.doubleValue()  &  elitismRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
24	[BUG]  [BUGGY]  super(populationLimit,  PopulationType.doubleValue());  [CE]  cannot  find  symbol  PopulationType  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationType.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationType.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationType	24	None	replace
25	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  -  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  -  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  -  this.elitismRate,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
26	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate  -  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  elitismRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	40	None	replace
27	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  /  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  /  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  /  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
28	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  /  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  /  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  /  this.elitismRate,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
29	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  *  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  *  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  *  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
30	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  +  this.elitismRate  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  +  this.elitismRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  +  this.elitismRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
31	[BUG]  [BUGGY]  super(populationLimit  /  this.elitismRate  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  this.elitismRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  this.elitismRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
32	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate,  populationLimit  -  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate,  populationLimit  -  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate,  populationLimit  -  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
33	[BUG]  [BUGGY]  super(populationLimit  *  this.elitismRate  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  this.elitismRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  this.elitismRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
34	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate,  populationLimit  -  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate,  populationLimit  -  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate,  populationLimit  -  this.elitismRate,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
35	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  PopulationLimit.MIN_VALUE,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  -  PopulationLimit.MIN_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  PopulationLimit.MIN_VALUE,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
36	[BUG]  [BUGGY]  super(populationLimit  +  this.elitemRate  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitemRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitemRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
37	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  -  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  -  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  -  this.elitismRate,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
38	[BUG]  [BUGGY]  super(populationLimit  +  numberLimit  -  this.elitismRate,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  numberLimit  -  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  numberLimit  -  this.elitismRate,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	40	None	replace
39	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  +  this.elitismRate  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  +  this.elitismRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  +  this.elitismRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
40	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
41	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  populateLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  -  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  populateLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
42	[BUG]  [BUGGY]  super(populationLimit  +  populateLimit  -  this.elitismRate,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populateLimit  -  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populateLimit  -  this.elitismRate,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	40	None	replace
43	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  PopulationLimit.MAX_VALUE,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  -  PopulationLimit.MAX_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  PopulationLimit.MAX_VALUE,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
44	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  PopulationLimit.MINUTE,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  -  PopulationLimit.MINUTE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  PopulationLimit.MINUTE,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
45	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  /  this.elitismRate  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  /  this.elitismRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  /  this.elitismRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
46	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate  -  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	40	None	replace
47	[BUG]  [BUGGY]  super(populationLimit  +  populateLimit  -  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populateLimit  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populateLimit  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	40	None	replace
48	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate,  populationLimit  -  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate,  populationLimit  -  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate,  populationLimit  -  this.elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
49	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationsLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationsLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  populationsLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
50	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate  -  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate  -  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate  -  this.elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
51	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationLimit,  elitismMask);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationLimit,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  populationLimit,  elitismMask);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
52	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	23	None	replace
53	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
54	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  elitismLimit);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
55	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
56	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  this.elitismRate,  elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
57	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  populationLimit);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
58	[BUG]  [BUGGY]  super(populationLimit,  populateLimit,  this.elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	23	None	replace
59	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
60	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  this.elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	23	None	replace
61	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	23	None	replace
62	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  this.elitismLimit);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
63	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  this.elitism);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  this.elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  this.elitism);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
64	[BUG]  [BUGGY]  super(populationLimit,  populationRimit,  this.elitismRate);  [CE]  cannot  find  symbol  populationRimit  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	23	None	replace
65	[BUG]  [BUGGY]  super(populationLimit,  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit,  elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	23	None	replace
66	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  null);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  this.elitismRate,  null);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
67	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  false);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	23	None	replace
68	[BUG]  [BUGGY]  super(populationLimit,  0,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
69	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  elitism);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  elitism);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
70	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  elitism);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  this.elitismRate,  elitism);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
71	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  this.elitismRate,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
72	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  false);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  this.elitismRate,  false);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
73	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
74	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  elitismMask);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  elitismMask);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
75	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  this.elitismCount);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  this.elitismCount);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  this.elitismCount);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
76	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  elitismLast);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  elitismLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  elitismLast);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
77	[BUG]  [BUGGY]  super(populationLimit,  false,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  false,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  false,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
78	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  elitismMask);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  this.elitismRate,  elitismMask);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
79	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  false);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	8	None	replace
80	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitismRate);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	8	None	replace
81	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  null);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)	8	None	replace
82	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  -  populationLimit,  elitismLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	8	None	replace
83	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  -  populationLimit,  elitismRate);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	8	None	replace
84	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  true);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  true);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	8	None	replace
85	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitism);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	8	None	replace
86	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	8	None	replace
87	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  -  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  -  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  -  elitismRate,  elitismRate);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	8	None	replace
88	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  this.elitismLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	8	None	replace
89	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  this.elitismRate);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	8	None	replace
90	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  populateLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	8	None	replace
91	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  0,  elitismRate);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	8	None	replace
92	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  new  double[]  {  0  }  );	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	8	None	replace
93	[BUG]  [BUGGY]  super(populationLimit  -  1,  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  1,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  1,  elitismRate,  populationLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	8	None	replace
94	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  -  populationLimit,  elitism);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	8	None	replace
95	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitismMask);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	8	None	replace
96	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  size);  [CE]  cannot  find  symbol  size  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  size);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  size);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	8	None	replace
97	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismLast);  [CE]  cannot  find  symbol  elitismLast  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitismLast);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLast	8	None	replace
98	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  0);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  0);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  0);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	8	None	replace
99	[BUG]  [BUGGY]  super(populationLimit  -  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populateLimit,  elitismRate);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	8	None	replace
100	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismStandard);  [CE]  cannot  find  symbol  elitismStandard  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismStandard);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitismStandard);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismStandard	8	None	replace
101	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismCount);  [CE]  cannot  find  symbol  elitismCount  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismCount);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitismCount);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismCount	8	None	replace
102	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismFactory);  [CE]  cannot  find  symbol  elitismFactory  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismFactory);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitismFactory);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismFactory	8	None	replace
103	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismStd);  [CE]  cannot  find  symbol  elitismStd  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismStd);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitismStd);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismStd	8	None	replace
104	[BUG]  [BUGGY]  super(populationLimit  -  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  1,  elitismRate);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	8	None	replace
105	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  double  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  double  elitismRate);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	8	None	replace
106	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  -  populationLimit);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	37	None	replace
107	[BUG]  [BUGGY]  super(populationLimit  -  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	37	None	replace
108	[BUG]  [BUGGY]  super(populationLimit  -  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  numberLimit,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	37	None	replace
109	[BUG]  [BUGGY]  super(populationLimit  -  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  this.elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	37	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  +  populationLimit);	  super(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	37	5	replace
111	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit);	  super(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	37	5	replace
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  -  1);	  super(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	37	4	replace
113	[BUG]  [BUGGY]  super(populationLimit  -  1);  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  1);	  super(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	37	4	replace
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  *  populationLimit);	  super(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	37	5	replace
115	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit);  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit);	  super(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	37	5	replace
116	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MIN_VALUE,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	37	None	replace
117	[BUG]  [BUGGY]  super(populationLimit  -  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  this.elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	37	None	replace
118	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MIN_VALUE);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	37	None	replace
119	[BUG]  [BUGGY]  super(populationLimit  -  total,  elitismRate);  [CE]  cannot  find  symbol  total  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  total,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  total,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  total	37	None	replace
120	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MINUTE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MINUTE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MINUTE,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	37	None	replace
121	[BUG]  [BUGGY]  super(populationLimit  -  populationsLimit,  elitismRate);  [CE]  cannot  find  symbol  populationsLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationsLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationsLimit,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	37	None	replace
122	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MAX_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MAX_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MAX_VALUE);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	37	None	replace
123	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.DEFAULT_PREFIX);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.DEFAULT_PREFIX);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	37	None	replace
124	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MILLIS_PER_SIZE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MILLIS_PER_SIZE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MILLIS_PER_SIZE);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	37	None	replace
125	[BUG]  [BUGGY]  super(populationLimit  -  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  0,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	37	None	replace
126	[BUG]  [BUGGY]  super(populationLimit  -  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,int)  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  elitismRate,  populationLimit);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,int)	37	None	replace
127	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  -  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  -  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  -  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	37	None	replace
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  -  populationLimit  +  1);	  super(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	37	5	replace
129	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1);  [FE]  AssertionError  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1);	  super(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	37	5	replace
130	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismMask);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	37	None	replace
131	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  elitismRate;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
132	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	11	None	replace
133	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  false);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  false);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  false);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	11	None	replace
134	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
135	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populateLimit);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  populateLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populateLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populateLimit);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	11	None	replace
136	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  null);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  null);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  null);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)	11	None	replace
137	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitism);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  elitism  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  elitism);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  elitism);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  elitism	11	None	replace
138	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  size);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  size  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  size);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  size);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  size	11	None	replace
139	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismLimit);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  elitismLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  elitismLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  elitismLimit);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	11	None	replace
140	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  );  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  );  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }  );  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	11	None	replace
141	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.doubleValue());  this.populationLimit  =  populationLimit;  [CE]  double  cannot  be  dereferenced  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.doubleValue());  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.doubleValue());  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	replace
142	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  elitismRate);	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	11	None	replace
143	[BUG]  [BUGGY]  super(populationLimit,  0,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	11	None	replace
144	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  this.populationLimit  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  this.populationLimit  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate);  this.populationLimit  =  elitismRate;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	11	None	replace
145	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  true);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  true);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  true);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	11	None	replace
146	[BUG]  [BUGGY]  super(populationLimit,  false,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,boolean,double)  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  false,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  false,  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,boolean,double)	11	None	replace
147	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populations);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  populations  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populations);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populations);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populations	11	None	replace
148	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  0);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  0);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  0);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
149	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  demographicLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  demographicLimit);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	11	None	replace
150	[BUG]  [BUGGY]  super(populationLimit,  null,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>,double)  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  null,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  null,  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>,double)	11	None	replace
151	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populateLimit);  this.populationLimit  =  elitismRate;  [CE]  cannot  find  symbol  populateLimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populateLimit);  this.populationLimit  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populateLimit);  this.populationLimit  =  elitismRate;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	11	None	replace
152	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismCount);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  elitismCount  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  elitismCount);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  elitismCount);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  elitismCount	11	None	replace
153	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.EMPTY;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.EMPTY;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.EMPTY;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
154	[BUG]  [BUGGY]  super(populationLimit,  double  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  '.class'  expected  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  double  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  double  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  '.class'  expected	11	None	replace
155	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  number;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  number;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  number;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
156	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  1.0);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  1.0);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  1.0);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	11	None	replace
157	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,boolean)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  false);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,boolean)	1	None	replace
158	[BUG]  [BUGGY]  super(populationLimit,  populationRimit,  elitismRate);  [CE]  cannot  find  symbol  populationRimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRimit,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	1	None	replace
159	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,<null>)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  null);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  null);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,<null>)	1	None	replace
160	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
161	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,boolean)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  true);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  true);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,boolean)	1	None	replace
162	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,double)	1	None	replace
163	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populateLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populateLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	1	None	replace
164	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,double[])  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0  }  );	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,double[])	1	None	replace
165	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	1	None	replace
166	[BUG]  [BUGGY]  super(populationLimit,  populateRate,  elitismRate);  [CE]  cannot  find  symbol  populateRate  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateRate,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateRate,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateRate	1	None	replace
167	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  null);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  null);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)	1	None	replace
168	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismCount);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismCount);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitismCount);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
169	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  1);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,int)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  1);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  1);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,int)	1	None	replace
170	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismValue);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismValue);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitismValue);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
171	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismStandard);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismStandard);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitismStandard);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
172	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismMask);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismMask);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitismMask);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
173	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismFactory);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismFactory);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitismFactory);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
174	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitism);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitism);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitism);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
175	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  final  double  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  final  double  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  final  double  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
176	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismError);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismError);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitismError);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
177	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,int,double)  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,int,double)	1	None	replace
178	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismLast);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismLast);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitismLast);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
179	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismRoot);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  this.elitismRoot);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  this.elitismRoot);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	1	None	replace
180	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  this.elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	41	None	replace
181	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
182	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  1,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	41	None	replace
183	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  elitismRate,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	41	None	replace
184	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  1,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  1,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  1,  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
185	[BUG]  [BUGGY]  super(populationLimit  /  totalLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  totalLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  totalLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  totalLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	41	None	replace
186	[BUG]  [BUGGY]  super(populationLimit  /  size  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  size  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  size  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  size  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  size	41	None	replace
187	[BUG]  [BUGGY]  super(populationLimit  /  PopulationLimit.MIN_VALUE  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  PopulationLimit.MIN_VALUE  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  PopulationLimit.MIN_VALUE  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	41	None	replace
188	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
189	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  1  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  1  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  1  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
190	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  doubleRate,  elitismLimit);  [CE]  cannot  find  symbol  doubleRate  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  doubleRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  doubleRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  doubleRate	41	None	replace
191	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  double.elitismRate,  elitismLimit);  [CE]  class  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  double.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  double.elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  class  expected	41	None	replace
192	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  double,  elitismRate);  [CE]  '.class'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  double,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  double,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  '.class'  expected	41	None	replace
193	[BUG]  [BUGGY]  super(populationLimit  /  populateLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populateLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populateLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	41	None	replace
194	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  2  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  2  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  2  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
195	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	41	None	replace
196	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  this.elitemRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  this.elitemRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  this.elitemRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	41	None	replace
197	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  double.length,  elitismRate);  [CE]  class  expected  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  double.length,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  double.length,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  class  expected	41	None	replace
198	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  size,  elitismRate);  [CE]  cannot  find  symbol  size  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  size,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  size,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  size	41	None	replace
199	[BUG]  [BUGGY]  super(populationLimit  /  numberLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  numberLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  numberLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	41	None	replace
200	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit  +  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit  +  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit  +  elitismRate,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	41	None	replace
201	[BUG]  [BUGGY]  super(populationLimit  /  unitLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  unitLimit  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  unitLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  unitLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  unitLimit	41	None	replace
202	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  Double.MIN_VALUE,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  Double.MIN_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  Double.MIN_VALUE,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	41	None	replace
203	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  elitismRate,  elitism);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitism	41	None	replace
204	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  numberLimit,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	41	None	replace
205	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  totalLimit,  elitismRate);  [CE]  cannot  find  symbol  totalLimit  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  totalLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  totalLimit,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	41	None	replace
206	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  elitismRate,  elitismMask);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	41	None	replace
207	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  devLimit,  elitismRate);  [CE]  cannot  find  symbol  devLimit  [FE]                                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  devLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  devLimit,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  devLimit	41	None	replace
208	[BUG]  [BUGGY]  super(populationLimit  *  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,int)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  elitismRate,  populationLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,int)	34	None	replace
209	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  *  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  *  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  *  elitismRate,  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	34	None	replace
210	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	34	None	replace
211	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  false);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	34	None	replace
212	[BUG]  [BUGGY]  super(populationLimit  *  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  elitismRate,  populateLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	34	None	replace
213	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  elitismLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	34	None	replace
214	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  null);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)	34	None	replace
215	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  *  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  *  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  *  populationLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	34	None	replace
216	[BUG]  [BUGGY]  super(populationLimit  *  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  this.elitismRate,  elitismLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	34	None	replace
217	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  elitism);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	34	None	replace
218	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  true);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  true);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	34	None	replace
219	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  this.elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	34	None	replace
220	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  *  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  *  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  *  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	34	None	replace
221	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  populateLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	34	None	replace
222	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  this.elitismLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	34	None	replace
223	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  elitismMask);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	34	None	replace
224	[BUG]  [BUGGY]  super(populationLimit,  numberLimit  *  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit  *  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit  *  elitismRate,  elitismLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	34	None	replace
225	[BUG]  [BUGGY]  super(populationLimit  *  numberLimit,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  numberLimit,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  numberLimit,  elitismRate,  elitismLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	34	None	replace
226	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  *  elitismRate,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  *  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  *  elitismRate,  elitism);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	34	None	replace
227	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismCount);  [CE]  cannot  find  symbol  elitismCount  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismCount);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  elitismCount);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismCount	34	None	replace
228	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  new  double[]  {  0  }  );	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	34	None	replace
229	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismLast);  [CE]  cannot  find  symbol  elitismLast  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  elitismLast);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLast	34	None	replace
230	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismStandard);  [CE]  cannot  find  symbol  elitismStandard  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  elitismStandard);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  elitismStandard);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismStandard	34	None	replace
231	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  0,  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	34	None	replace
232	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  0);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  0);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  0);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	34	None	replace
233	[BUG]  [BUGGY]  super(populationLimit  *  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populateLimit,  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	34	None	replace
234	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  double  elitismRate,  elitismRate);  [CE]  '.class'  expected  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  double  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  double  elitismRate,  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	34	None	replace
235	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	33	None	replace
236	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  -  populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  -  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  -  populationLimit  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	33	None	replace
237	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  populateLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	33	None	replace
238	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  this.elitismRate,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	33	None	replace
239	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  1);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	33	None	replace
240	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  elitismRate,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	33	None	replace
241	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	33	None	replace
242	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit  +  1);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  -  populationLimit  +  1);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	33	None	replace
243	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  -  populationLimit  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	33	None	replace
244	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  -  populationLimit  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  -  populationLimit  +  1,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	33	None	replace
245	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  populationLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	33	None	replace
246	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  size);  [CE]  cannot  find  symbol  size  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  size);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  size);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	33	None	replace
247	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  *  elitismRate,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	33	None	replace
248	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  -  elitismRate  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  -  elitismRate  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  -  elitismRate  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	33	None	replace
249	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  numberLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  numberLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	33	None	replace
250	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	33	None	replace
251	[BUG]  [BUGGY]  super(populationLimit,  -  populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  -  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  -  populationLimit  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	33	None	replace
252	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  this.elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	33	None	replace
253	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  this.elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	33	None	replace
254	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  this.elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	33	None	replace
255	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	35	None	replace
256	[BUG]  [BUGGY]  super(populationLimit  +  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populateLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	35	None	replace
257	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MIN_VALUE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MIN_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MIN_VALUE,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	35	None	replace
258	[BUG]  [BUGGY]  super(populationLimit  +  size,  elitismRate);  [CE]  cannot  find  symbol  size  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  size,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  size,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	35	None	replace
259	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MINUTE,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	35	None	replace
260	[BUG]  [BUGGY]  super(populationLimit  +  totalLimit,  elitismRate);  [CE]  cannot  find  symbol  totalLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  totalLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  totalLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	35	None	replace
261	[BUG]  [BUGGY]  super(populationLimit  +  populationsLimit,  elitismRate);  [CE]  cannot  find  symbol  populationsLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationsLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationsLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	35	None	replace
262	[BUG]  [BUGGY]  super(populationLimit  +  devLimit,  elitismRate);  [CE]  cannot  find  symbol  devLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  devLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  devLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  devLimit	35	None	replace
263	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate.doubleValue());	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  double  cannot  be  dereferenced	35	None	replace
264	[BUG]  [BUGGY]  super(populationLimit  +  demographicLimit,  elitismRate);  [CE]  cannot  find  symbol  demographicLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  demographicLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  demographicLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	35	None	replace
265	[BUG]  [BUGGY]  super(populationLimit  +  numberRate,  elitismRate);  [CE]  cannot  find  symbol  numberRate  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  numberRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  numberRate,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberRate	35	None	replace
266	[BUG]  [BUGGY]  super(populationLimit  +  double  elitismRate,  elitismRate);  [CE]  '.class'  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  double  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  double  elitismRate,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	35	None	replace
267	[BUG]  [BUGGY]  super(populationLimit  +  denominationLimit,  elitismRate);  [CE]  cannot  find  symbol  denominationLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  denominationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  denominationLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  denominationLimit	35	None	replace
268	[BUG]  [BUGGY]  super(populationLimit  +  this.populationRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.populationRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.populationRate,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	35	None	replace
269	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  this.elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	35	None	replace
270	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.NUMBER,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	35	None	replace
271	[BUG]  [BUGGY]  super(populationLimit  +  double,  elitismRate);  [CE]  '.class'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  double,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  double,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	35	None	replace
272	[BUG]  [BUGGY]  super(populationLimit  +  BevölkerungLimit,  elitismRate);  [CE]  cannot  find  symbol  Bev  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  BevölkerungLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  BevölkerungLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  Bev	35	None	replace
273	[BUG]  [BUGGY]  super(populationLimit  +  percentageLimit,  elitismRate);  [CE]  cannot  find  symbol  percentageLimit  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  percentageLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  percentageLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  percentageLimit	35	None	replace
274	[BUG]  [BUGGY]  super(populationLimit  +  100,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  100,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  100,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	35	None	replace
275	[BUG]  [BUGGY]  super(populationLimit  +  dataLimit,  elitismRate);  [CE]  cannot  find  symbol  dataLimit  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  dataLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  dataLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	35	None	replace
276	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate.intValue());  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
277	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit.intValue());  [CE]  int  cannot  be  dereferenced  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
278	[BUG]  [BUGGY]  super(populationLimit,  populateLimit,  elitismRate.intValue());  [CE]  cannot  find  symbol  populateLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit,  elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populateLimit	20	None	replace
279	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populateLimit.intValue());  [CE]  cannot  find  symbol  populateLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populateLimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populateLimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populateLimit	20	None	replace
280	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.longValue());  [CE]  double  cannot  be  dereferenced  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.longValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.longValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
281	[BUG]  [BUGGY]  super(populationLimit,  populationRimit,  elitismRate.intValue());  [CE]  cannot  find  symbol  populationRimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRimit,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRimit,  elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populationRimit	20	None	replace
282	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.floatValue());  [CE]  double  cannot  be  dereferenced  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.floatValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.floatValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
283	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismRate.intValue());  [CE]  double  cannot  be  dereferenced  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
284	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate.intValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	20	None	replace
285	[BUG]  [BUGGY]  super(populationLimit,  new  Integer(elitismRate.intValue()));  [CE]  double  cannot  be  dereferenced  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Integer(elitismRate.intValue()));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Integer(elitismRate.intValue()));	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
286	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  elitismRate.intValue());  [CE]  cannot  find  symbol  numberLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit,  elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  numberLimit	20	None	replace
287	[BUG]  [BUGGY]  super(populationLimit,  populationRimit.intValue());  [CE]  cannot  find  symbol  populationRimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populationRimit	20	None	replace
288	[BUG]  [BUGGY]  super(populationLimit,  populationLimit.intValue());  [CE]  int  cannot  be  dereferenced  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
289	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.intValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	20	None	replace
290	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate.longValue());  [CE]  double  cannot  be  dereferenced  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate.longValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate.longValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
291	[BUG]  [BUGGY]  super(populationLimit,  populateRate.intValue());  [CE]  cannot  find  symbol  populateRate  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populateRate	20	None	replace
292	[BUG]  [BUGGY]  super(populationLimit,  populateLimit.intValue());  [CE]  cannot  find  symbol  populateLimit  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populateLimit	20	None	replace
293	[BUG]  [BUGGY]  super(populationLimit,  populate.intValue());  [CE]  cannot  find  symbol  populate  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populate	20	None	replace
294	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.intValue()  +  populationLimit);  [CE]  double  cannot  be  dereferenced  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.intValue()  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.intValue()  +  populationLimit);	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
295	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populate.intValue());  [CE]  cannot  find  symbol  populate  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populate	20	None	replace
296	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitism.intValue());  [CE]  cannot  find  symbol  elitism  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  elitism.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  elitism.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  elitism	20	None	replace
297	[BUG]  [BUGGY]  super(populationLimit,  elitism.intValue());  [CE]  cannot  find  symbol  elitism  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitism.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitism.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  elitism	20	None	replace
298	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate.floatValue());  [CE]  double  cannot  be  dereferenced  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate.floatValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate.floatValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
299	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.intValue(),  populationLimit);  [CE]  double  cannot  be  dereferenced  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.intValue(),  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.intValue(),  populationLimit);	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
300	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  super(populationLimit  -  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  super(populationLimit  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    super(populationLimit  -  populationLimit);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
301	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this(populationLimit  -  populationLimit);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this(populationLimit  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this(populationLimit  -  populationLimit);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	36	None	add
302	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  -  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
303	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  -  populationLimit);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  -  populationLimit);	  	non-compiled	[CE]  not  a  statement	36	None	add
304	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
305	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
306	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
307	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
308	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populate(populationLimit,  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populate(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populate(populationLimit,  elitismRate);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
309	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.elitismRate  =  populate(populationLimit,  elitismRate);  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.elitismRate  =  populate(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.elitismRate  =  populate(populationLimit,  elitismRate);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
310	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
311	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
312	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  *  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
313	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  setPopulationLimit(populationLimit  -  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  setPopulationLimit(populationLimit  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    setPopulationLimit(populationLimit  -  populationLimit);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
314	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  populationLimit);  [CE]  ';'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  -  populationLimit);	  	non-compiled	[CE]  ';'  expected	36	None	add
315	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  populateLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  populateLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  -  populateLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
316	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  +  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
317	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  populationLimit;  super(populationLimit  -  populationLimit);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  populationLimit;  super(populationLimit  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  -  populationLimit;  super(populationLimit  -  populationLimit);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
318	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  PopulationLimit.doubleValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  PopulationLimit.doubleValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  PopulationLimit.doubleValue();	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
319	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  PopulationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  PopulationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  -  PopulationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
320	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.elitismRate  =  populationLimit  -  populationLimit;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.elitismRate  =  populationLimit  -  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.elitismRate  =  populationLimit  -  populationLimit;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
321	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  PopulationLimit.intValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  PopulationLimit.intValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  +  PopulationLimit.intValue();	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
322	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  setPopulationLimit(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  setPopulationLimit(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    setPopulationLimit(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
323	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  populateLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  +  populateLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  +  populateLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
324	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  -  populationLimit);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit  -  populationLimit);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
325	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  /  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  /  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  /  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
326	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
327	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  numberLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populationLimit  -  numberLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populationLimit  -  numberLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
328	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  -  populationLimit;  [CE]  not  a  statement  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  -  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  -  populationLimit;	  	non-compiled	[CE]  not  a  statement	36	None	add
329	[BUG]  [BUGGY]  super(populationLimit,  0,  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,int,double)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  populationLimit,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,int,double)	19	None	replace
330	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  0,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int,int)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  0,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  0,  populationLimit);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int,int)	19	None	replace
331	[BUG]  [BUGGY]  super(populationLimit,  0,  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  populateLimit,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	19	None	replace
332	[BUG]  [BUGGY]  super(populationLimit,  0,  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,int)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  elitismRate,  populationLimit);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,int)	19	None	replace
333	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  0,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,int,double,double)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  0,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  0,  elitismRate,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,int,double,double)	19	None	replace
334	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  0,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit,  0,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	19	None	replace
335	[BUG]  [BUGGY]  super(populationLimit,  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  1,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	19	None	replace
336	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  populateLimit);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	19	None	replace
337	[BUG]  [BUGGY]  super(populationLimit,  0,  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  numberLimit,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	19	None	replace
338	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  0,  elitismRate,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  0,  elitismRate,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  0,  elitismRate,  this.elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	19	None	replace
339	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,int,double)  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  0,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,int,double)	19	None	replace
340	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  0,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  0,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	19	None	replace
341	[BUG]  [BUGGY]  super(populationLimit,  0,  populationRimit,  elitismRate);  [CE]  cannot  find  symbol  populationRimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  populationRimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  populationRimit,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	19	None	replace
342	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  0,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,int,double,<null>)  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  0,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  0,  elitismRate,  null);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,int,double,<null>)	19	None	replace
343	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  e  }  );  [CE]  cannot  find  symbol  e  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  e  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  e  }  );	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  e	19	None	replace
344	[BUG]  [BUGGY]  super(populationLimit,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int)	45	None	replace
345	[BUG]  [BUGGY]  super(populationLimit,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	45	None	replace
346	[BUG]  [BUGGY]  super(populationLimit,  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	45	None	replace
347	[BUG]  [BUGGY]  super(populationLimit,  elit);  [CE]  cannot  find  symbol  elit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elit);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elit	45	None	replace
348	[BUG]  [BUGGY]  super(populationLimit,  elitemRate);  [CE]  cannot  find  symbol  elitemRate  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitemRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitemRate);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitemRate	45	None	replace
349	[BUG]  [BUGGY]  super(populationLimit,  elmRate);  [CE]  cannot  find  symbol  elmRate  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elmRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elmRate);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elmRate	45	None	replace
350	[BUG]  [BUGGY]  super(populationLimit,  elimRate);  [CE]  cannot  find  symbol  elimRate  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elimRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elimRate);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elimRate	45	None	replace
351	[BUG]  [BUGGY]  super(populationLimit,  elitismPosition);  [CE]  cannot  find  symbol  elitismPosition  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismPosition);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismPosition);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitismPosition	45	None	replace
352	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.NaN);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.NaN);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.NaN);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	45	None	replace
353	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.MIN_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.MIN_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.MIN_VALUE);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	45	None	replace
354	[BUG]  [BUGGY]  super(populationLimit,  elitismStandard);  [CE]  cannot  find  symbol  elitismStandard  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismStandard);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismStandard);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitismStandard	45	None	replace
355	[BUG]  [BUGGY]  super(populationLimit,  elitismStd);  [CE]  cannot  find  symbol  elitismStd  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismStd);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismStd);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitismStd	45	None	replace
356	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  true);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  true);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	22	None	replace
357	[BUG]  [BUGGY]  super(populationLimit,  double  elitismRate,  populationLimit);  [CE]  '.class'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  double  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  double  elitismRate,  populationLimit);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  '.class'  expected	22	None	replace
358	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  +  elitismRate);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	22	None	replace
359	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  +  1);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  +  1);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	22	None	replace
360	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit);  [CE]  cannot  find  symbol  demographicLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  demographicLimit);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	22	None	replace
361	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  new  double[]  {  0  }  );	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	22	None	replace
362	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  size);  [CE]  cannot  find  symbol  size  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  size);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  size);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	22	None	replace
363	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate  +  1);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate  +  1);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	22	None	replace
364	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  1);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  1);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	22	None	replace
365	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  0);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  0);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  0);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	22	None	replace
366	[BUG]  [BUGGY]  super(populationLimit,  double  elitismRate,  false);  [CE]  '.class'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  double  elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  double  elitismRate,  false);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  '.class'  expected	22	None	replace
367	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.MAX_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.MAX_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.MAX_VALUE);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	22	None	replace
368	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.NaN);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.NaN);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.NaN);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	22	None	replace
369	[BUG]  [BUGGY]  super(populationLimit,  null,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>,double)  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  null,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  null,  elitismRate);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>,double)	22	None	replace
370	[BUG]  [BUGGY]  super(populationLimit,  false,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,boolean,double)  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  false,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  false,  elitismRate);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,boolean,double)	22	None	replace
371	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,int)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  populationLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,int)	43	None	replace
372	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit),  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit),  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit),  elitismRate);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,double)	43	None	replace
373	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate));  [CE]  no  suitable  constructor  found  for  Double(int,double)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit,  elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double)	43	None	replace
374	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate,  populationLimit));  [CE]  no  suitable  constructor  found  for  Double(double,int)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate,  populationLimit));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate,  populationLimit));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,int)	43	None	replace
375	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double,double)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate),  elitismRate);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double,double)	43	None	replace
376	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  new  Double(populationLimit));  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,Double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  new  Double(populationLimit));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  new  Double(populationLimit));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,Double)	43	None	replace
377	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationRate),  elitismRate);  [CE]  cannot  find  symbol  populationRate  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationRate),  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationRate),  elitismRate);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  populationRate	43	None	replace
378	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  populationLimit);  [CE]  no  suitable  constructor  found  for  Double(int,double)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit,  elitismRate),  populationLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double)	43	None	replace
379	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate));  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double)	43	None	replace
380	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationRate,  elitismRate));  [CE]  cannot  find  symbol  populationRate  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationRate,  elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationRate,  elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  populationRate	43	None	replace
381	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate),  this.elitismRate);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	43	None	replace
382	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit,  double  elitismRate));  [CE]  '.class'  expected  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit,  double  elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit,  double  elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  '.class'  expected	43	None	replace
383	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  false);  [CE]  no  suitable  constructor  found  for  Double(int,double)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit,  elitismRate),  false);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double)	43	None	replace
384	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate,  elitismRate));  [CE]  no  suitable  constructor  found  for  Double(double,double)  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate,  elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate,  elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(double,double)	43	None	replace
385	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double,boolean)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate),  false);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double,boolean)	43	None	replace
386	[BUG]  [BUGGY]  super(populationLimit,  new  Double(regionLimit,  elitismRate));  [CE]  cannot  find  symbol  regionLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(regionLimit,  elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(regionLimit,  elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  regionLimit	43	None	replace
387	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate.doubleValue()));  [CE]  double  cannot  be  dereferenced  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate.doubleValue()));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit,  elitismRate.doubleValue()));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
388	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double,<null>)  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate),  null);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double,<null>)	43	None	replace
389	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,double)  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  elitismRate);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,double)	43	None	replace
390	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  null);  [CE]  no  suitable  constructor  found  for  Double(int,double)  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit,  elitismRate),  null);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double)	43	None	replace
391	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate),  elitism);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  elitism	43	None	replace
392	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  elitismRate);  [CE]  no  suitable  constructor  found  for  Double(int,double)  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit,  elitismRate),  elitismRate);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double)	43	None	replace
393	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate,  elitismLimit));  [CE]  cannot  find  symbol  elitismLimit  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate,  elitismLimit));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate,  elitismLimit));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	43	None	replace
394	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  populateLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  populateLimit	43	None	replace
395	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  this.elitismRate);  [CE]  no  suitable  constructor  found  for  Double(int,double)  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit,  elitismRate),  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit,  elitismRate),  this.elitismRate);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double)	43	None	replace
396	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()));  [CE]  double  cannot  be  dereferenced  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate.doubleValue()));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
397	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationRate,  populationLimit));  [CE]  cannot  find  symbol  populationRate  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationRate,  populationLimit));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationRate,  populationLimit));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  populationRate	43	None	replace
398	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate.doubleValue()));  [CE]  double  cannot  be  dereferenced  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate.doubleValue()));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate.doubleValue()));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
399	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  1;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  1;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  1;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
400	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  ';'  expected	4	None	replace
401	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  /  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
402	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
403	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  *  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
404	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  1,  elitismRate;  [CE]  ';'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  1,  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  1,  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  ';'  expected	4	None	replace
405	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  super.populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  super.populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  super.populationLimit;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
406	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate);  [CE]  ';'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate,  elitismRate);	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  ';'  expected	4	None	replace
407	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  1;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  1;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  1;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
408	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  2;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  2;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  2;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
409	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  double  elitismRate;  [CE]  '.class'  expected  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  double  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  double  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  '.class'  expected	4	None	replace
410	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  1,  elitismRate;  [CE]  ';'  expected  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  1,  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  1,  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  ';'  expected	4	None	replace
411	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  size;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  size;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  size;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
412	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit,  elitismRate;  [CE]  ';'  expected  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit,  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit,  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  ';'  expected	4	None	replace
413	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  numberLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  numberLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  numberLimit;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
414	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  new  Double(elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  new  Double(elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  new  Double(elitismRate);	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
415	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  populateLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  populateLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  populateLimit;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
416	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  0,  elitismRate;  [CE]  ';'  expected  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  0,  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  0,  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  ';'  expected	4	None	replace
417	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  dataLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  dataLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  dataLimit;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
418	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  new  double(elitismRate);  [CE]  '['  expected  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  new  double(elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  new  double(elitismRate);	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  '['  expected	4	None	replace
419	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  10;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  10;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  10;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
420	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  populateLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  populateLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  populateLimit;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
421	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  4;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  4;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  4;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
422	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  8;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  8;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  8;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
423	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  3;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  3;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  3;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
424	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  super.populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  super.populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  super.populationLimit;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
425	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  size;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  size;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  size;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
426	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  11;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  11;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  11;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
427	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate,  elitismLimit  }  );  [CE]  cannot  find  symbol  elitismLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate,  elitismLimit  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate,  elitismLimit  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	12	None	replace
428	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],boolean)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  false);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],boolean)	12	None	replace
429	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate,  populationLimit  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate,  populationLimit  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate,  populationLimit  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	12	None	replace
430	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],int)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  populationLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],int)	12	None	replace
431	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],<null>)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  null);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],<null>)	12	None	replace
432	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate,  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate,  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate,  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	12	None	replace
433	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	12	None	replace
434	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  new  double[]  {  populationLimit  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  new  double[]  {  populationLimit  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  new  double[]  {  populationLimit  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	12	None	replace
435	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate,  populateLimit  }  );  [CE]  cannot  find  symbol  populateLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate,  populateLimit  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate,  populateLimit  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  populateLimit	12	None	replace
436	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  0,  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  0,  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  0,  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	12	None	replace
437	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],boolean)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  false);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],boolean)	12	None	replace
438	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],<null>)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  null);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],<null>)	12	None	replace
439	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],boolean)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  true);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  true);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],boolean)	12	None	replace
440	[BUG]  [BUGGY]  super(populationLimit,  null,  new  double[]  {  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>,double[])  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  null,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  null,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>,double[])	12	None	replace
441	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  populateLimit,  elitismRate  }  );  [CE]  cannot  find  symbol  populateLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  populateLimit,  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  populateLimit,  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  populateLimit	12	None	replace
442	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double[])  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double[])	12	None	replace
443	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],boolean)  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  true);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  true);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],boolean)	12	None	replace
444	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  populateRimit,  elitismRate  }  );  [CE]  cannot  find  symbol  populateRimit  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  populateRimit,  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  populateRimit,  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  populateRimit	12	None	replace
445	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  new  double[]  {  elitismLimit  }  );  [CE]  cannot  find  symbol  elitismLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  new  double[]  {  elitismLimit  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  new  double[]  {  elitismLimit  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	12	None	replace
446	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  populationLimit,  elitismRate  },  this.elitismRate);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	12	None	replace
447	[BUG]  [BUGGY]  super(publicationLimit,  new  double[]  {  elitismRate  }  );  [CE]  cannot  find  symbol  publicationLimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	12	None	replace
448	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  ||  populationLimit  ==  elitismRate);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  ||  populationLimit  ==  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }  ||  populationLimit  ==  elitismRate);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	12	None	replace
449	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }   ");  [CE]  unclosed  string  literal  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }   ");  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }   ");	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
450	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  1,  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  1,  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  1,  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	12	None	replace
451	[BUG]  [BUGGY]  super(dataset,  populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  cannot  find  symbol  dataset  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(dataset,  populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(dataset,  populationLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  dataset	12	None	replace
452	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  public  static  final  long  serialVersionUID());  [CE]  illegal  start  of  expression  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  public  static  final  long  serialVersionUID());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  public  static  final  long  serialVersionUID());	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
453	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  size);  [CE]  cannot  find  symbol  size  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  size);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  size);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  size	12	None	replace
454	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	7	None	replace
455	[BUG]  [BUGGY]  super(populationLimit,  populateLimit  +  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit  +  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	7	None	replace
456	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate,  populateLimit);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	7	None	replace
457	[BUG]  [BUGGY]  super(populationLimit  *  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	7	None	replace
458	[BUG]  [BUGGY]  super(populationLimit,  numberLimit  +  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit  +  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	7	None	replace
459	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  /  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  /  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  /  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	7	None	replace
460	[BUG]  [BUGGY]  super(populationLimit  +  populationRimit,  elitismRate);  [CE]  cannot  find  symbol  populationRimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationRimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationRimit,  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	7	None	replace
461	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	7	None	replace
462	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate,  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  elitismRate,  numberLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate,  numberLimit);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	7	None	replace
463	[BUG]  [BUGGY]  super(populationLimit  +  total,  elitismRate);  [CE]  cannot  find  symbol  total  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  total,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  total,  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  total	7	None	replace
464	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate,  elitismLimit);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	7	None	replace
465	[BUG]  [BUGGY]  super(populationLimit,  public  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  public  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  public  elitismRate);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
466	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.MAX_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.MAX_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.MAX_VALUE);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	29	None	replace
467	[BUG]  [BUGGY]  super(populationLimit,  populateRate);  [CE]  cannot  find  symbol  populateRate  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateRate);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  populateRate	29	None	replace
468	[BUG]  [BUGGY]  super(populationLimit,  elitism.doubleValue);  [CE]  cannot  find  symbol  elitism  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitism.doubleValue);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitism.doubleValue);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  elitism	29	None	replace
469	[BUG]  [BUGGY]  super(populationLimit,  populatorLimit);  [CE]  cannot  find  symbol  populatorLimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populatorLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populatorLimit);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  populatorLimit	29	None	replace
470	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  true);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  true);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean)	2	None	replace
471	[BUG]  [BUGGY]  this(populationLimit,  populationRimit,  elitismRate,  false);  [CE]  cannot  find  symbol  populationRimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationRimit,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationRimit,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	2	None	replace
472	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean)	2	None	replace
473	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  populationLimit);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,int)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  populationLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  populationLimit);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,int)	2	None	replace
474	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  true);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  true);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean)	2	None	replace
475	[BUG]  [BUGGY]  this(populationLimit,  populationRimit,  false);  [CE]  cannot  find  symbol  populationRimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationRimit,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationRimit,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	2	None	replace
476	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  null);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,<null>)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  null);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  null);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,<null>)	2	None	replace
477	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  null,  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,<null>,boolean)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  null,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  null,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,<null>,boolean)	2	None	replace
478	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  populateLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  populateLimit);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	2	None	replace
479	[BUG]  [BUGGY]  this(populationLimit,  populateLimit,  elitismRate,  false);  [CE]  cannot  find  symbol  populateLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populateLimit,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populateLimit,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	2	None	replace
480	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  true);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,boolean)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  true);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  true);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,boolean)	2	None	replace
481	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false,  elitism);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  false,  elitism);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  elitism	2	None	replace
482	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false,  null);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean,<null>)  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false,  null);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  false,  null);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean,<null>)	2	None	replace
483	[BUG]  [BUGGY]  this(populationLimit,  false,  elitismRate);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,boolean,double)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  false,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  false,  elitismRate);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,boolean,double)	2	None	replace
484	[BUG]  [BUGGY]  this(populationLimit,  numberLimit,  elitismRate,  false);  [CE]  cannot  find  symbol  numberLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  numberLimit,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  numberLimit,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	2	None	replace
485	[BUG]  [BUGGY]  this(populationLimit,  populateRate,  elitismRate,  false);  [CE]  cannot  find  symbol  populateRate  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populateRate,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populateRate,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populateRate	2	None	replace
486	[BUG]  [BUGGY]  this(populationLimit,  populationRate,  elitismRate,  false);  [CE]  cannot  find  symbol  populationRate  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationRate,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationRate,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populationRate	2	None	replace
487	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false,  true);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean,boolean)  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false,  true);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  false,  true);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean,boolean)	2	None	replace
488	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  elitismLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  elitismLimit);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	2	None	replace
489	[BUG]  [BUGGY]  this(populationLimit,  new  double[]  {  elitismRate  },  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double[],boolean)  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  new  double[]  {  elitismRate  },  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  new  double[]  {  elitismRate  },  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double[],boolean)	2	None	replace
490	[BUG]  [BUGGY]  this(populationLimit,  populationRimit,  elitismRate,  true);  [CE]  cannot  find  symbol  populationRimit  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationRimit,  elitismRate,  true);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationRimit,  elitismRate,  true);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	2	None	replace
491	[BUG]  [BUGGY]  this(populationLimit,  populationNumber,  elitismRate,  false);  [CE]  cannot  find  symbol  populationNumber  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationNumber,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationNumber,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populationNumber	2	None	replace
492	[BUG]  [BUGGY]  this(populationLimit,  null,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,<null>,double,boolean)  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  null,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  null,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,<null>,double,boolean)	2	None	replace
493	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  elitism);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  elitism);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  elitism	2	None	replace
494	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false,  elitismRate);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean,double)  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  false,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  false,  elitismRate);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,boolean,double)	2	None	replace
495	[BUG]  [BUGGY]  this(publicationLimit,  populationLimit,  elitismRate,  false);  [CE]  cannot  find  symbol  publicationLimit  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(publicationLimit,  populationLimit,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(publicationLimit,  populationLimit,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	2	None	replace
496	[BUG]  [BUGGY]  this(elitismRate,  populationLimit,  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(double,int,boolean)  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(elitismRate,  populationLimit,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(elitismRate,  populationLimit,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(double,int,boolean)	2	None	replace
497	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,double[])  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  new  double[]  {  0  }  );  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  new  double[]  {  0  }  );	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,double[])	2	None	replace
498	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,int)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  populationLimit);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,int)	6	None	replace
499	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,<null>)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  null);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,<null>)	6	None	replace
500	[BUG]  [BUGGY]  this(populationLimit,  populationRimit,  elitismRate);  [CE]  cannot  find  symbol  populationRimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationRimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationRimit,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	6	None	replace
501	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,<null>)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  null);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,<null>)	6	None	replace
502	[BUG]  [BUGGY]  this(populationLimit,  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populateLimit,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	6	None	replace
503	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,double)	6	None	replace
504	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  populateLimit);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	6	None	replace
505	[BUG]  [BUGGY]  this(populationLimit,  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  numberLimit,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	6	None	replace
506	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double[])  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0  }  );	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double[])	6	None	replace
507	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double)	6	None	replace
508	[BUG]  [BUGGY]  this(populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double[])  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  new  double[]  {  elitismRate  }  );	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double[])	6	None	replace
509	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  1);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,int)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  1);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,int)	6	None	replace
510	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  0);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,int)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  0);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  0);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,int)	6	None	replace
511	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,double[])  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  new  double[]  {  0  }  );	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,double[])	6	None	replace
512	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  1.0);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,double)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  1.0);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  1.0);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,double)	6	None	replace
513	[BUG]  [BUGGY]  this(populationLimit,  null,  elitismRate);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,<null>,double)  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  null,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  null,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,<null>,double)	6	None	replace
514	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  demographicLimit);  [CE]  cannot  find  symbol  demographicLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  demographicLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  demographicLimit);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	6	None	replace
515	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  negative);  [CE]  cannot  find  symbol  negative  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  negative);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  negative);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  negative	6	None	replace
516	[BUG]  [BUGGY]  setPopulationLimit(populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  setPopulationLimit(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	setPopulationLimit(populationLimit,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	6	None	replace
517	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  public  static  final  long  serialVersionUID());  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  public  static  final  long  serialVersionUID());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  public  static  final  long  serialVersionUID());	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
518	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  DEFAULT_SIZE);  [CE]  cannot  find  symbol  DEFAULT_SIZE  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  DEFAULT_SIZE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  DEFAULT_SIZE);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SIZE	6	None	replace
519	[BUG]  [BUGGY]  super(publicationLimit,  elitismRate,  elitismRate);  [CE]  cannot  find  symbol  publicationLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  elitismRate,  elitismRate);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	21	None	replace
520	[BUG]  [BUGGY]  super(populationLimit,  new  double[elitismRate]);  [CE]  possible  loss  of  precision  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[elitismRate]);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[elitismRate]);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
521	[BUG]  [BUGGY]  super(publicationLimit,  elitismRate,  populationLimit);  [CE]  cannot  find  symbol  publicationLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  elitismRate,  populationLimit);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	21	None	replace
522	[BUG]  [BUGGY]  super(publicationLimit,  elitismRate,  false);  [CE]  cannot  find  symbol  publicationLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  elitismRate,  false);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	21	None	replace
523	[BUG]  [BUGGY]  super(datasetLimit,  elitismRate);  [CE]  cannot  find  symbol  datasetLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(datasetLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(datasetLimit,  elitismRate);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  datasetLimit	21	None	replace
524	[BUG]  [BUGGY]  super(publicationLimit,  elitismRate,  this.populationLimit);  [CE]  cannot  find  symbol  publicationLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  elitismRate,  this.populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  elitismRate,  this.populationLimit);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	21	None	replace
525	[BUG]  [BUGGY]  super(elitismLimit,  elitismRate);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(elitismLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(elitismLimit,  elitismRate);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	21	None	replace
526	[BUG]  [BUGGY]  super(publicationLimit,  elitismRate,  this.elitismRate);  [CE]  cannot  find  symbol  publicationLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  elitismRate,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  elitismRate,  this.elitismRate);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	21	None	replace
527	[BUG]  [BUGGY]  super(publicationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  double  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  double  elitismRate);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	21	None	replace
528	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  -  populationLimit  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  -  populationLimit  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  -  populationLimit  +  1,  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	38	None	replace
529	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  1,  elitismLimit);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	38	None	replace
530	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	38	None	replace
531	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	38	None	replace
532	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  1,  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	38	None	replace
533	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.doubleValue()  +  1,  elitismRate);  [CE]  double  cannot  be  dereferenced  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.doubleValue()  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate.doubleValue()  +  1,  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  double  cannot  be  dereferenced	38	None	replace
534	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitism);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	38	None	replace
535	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit  +  1,  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	38	None	replace
536	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  1,  elitism);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	38	None	replace
537	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  1,  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	38	None	replace
538	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  null);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)	38	None	replace
539	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  false);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	38	None	replace
540	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  1,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  1,  populateLimit);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	38	None	replace
541	[BUG]  [BUGGY]  super(populationLimit,  numberLimit  -  populationLimit  +  1,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit  -  populationLimit  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit  -  populationLimit  +  1,  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	38	None	replace
542	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  populateLimit,  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	38	None	replace
543	[BUG]  [BUGGY]  super(populationLimit,  populationRimit);  [CE]  cannot  find  symbol  populationRimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRimit);	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	26	None	replace
544	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.MILLIS_PER_SIZE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.MILLIS_PER_SIZE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.MILLIS_PER_SIZE);	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	26	None	replace
545	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.MILLIS_PER_SECOND);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.MILLIS_PER_SECOND);	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	26	None	replace
546	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismDate  }  );  [CE]  cannot  find  symbol  elitismDate  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismDate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismDate  }  );	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  cannot  find  symbol  elitismDate	26	None	replace
547	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismDate);  [CE]  cannot  find  symbol  elitismDate  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismDate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  elitismDate);	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  cannot  find  symbol  elitismDate	26	None	replace
548	[BUG]  [BUGGY]  super(populationLimit,  state.elitismRate);  [CE]  cannot  find  symbol  state  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  state.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  state.elitismRate);	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  cannot  find  symbol  state	26	None	replace
549	[BUG]  [BUGGY]  super(populationLimit,  populationRate);  [CE]  cannot  find  symbol  populationRate  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRate);	  super(populationLimit,    elitismFactor);    	non-compiled	[CE]  cannot  find  symbol  populationRate	46	None	replace
550	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismFactor);  [CE]  cannot  find  symbol  elitismFactor  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismFactor);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  elitismFactor);	  super(populationLimit,    elitismFactor);    	non-compiled	[CE]  cannot  find  symbol  elitismFactor	46	None	replace
551	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismFactor  }  );  [CE]  cannot  find  symbol  elitismFactor  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismFactor  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismFactor  }  );	  super(populationLimit,    elitismFactor);    	non-compiled	[CE]  cannot  find  symbol  elitismFactor	46	None	replace
552	[BUG]  [BUGGY]  super(populationLimit  +  1,  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  populationLimit,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	18	None	replace
553	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  +  1,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	18	None	replace
554	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  populationLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	18	None	replace
555	[BUG]  [BUGGY]  super(populationLimit  +  1,  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  populateLimit,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	18	None	replace
556	[BUG]  [BUGGY]  super(populationLimit  +  1,  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  numberLimit,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	18	None	replace
557	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  populateLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	18	None	replace
558	[BUG]  [BUGGY]  super(populationLimit  /  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  1,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	18	None	replace
559	[BUG]  [BUGGY]  super(populationLimit,  populateLimit  +  1,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit  +  1,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	18	None	replace
560	[BUG]  [BUGGY]  super(populationLimit,  numberLimit  +  1,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit  +  1,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	18	None	replace
561	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	18	None	replace
562	[BUG]  [BUGGY]  super(populationLimit  +  1,  populationRimit,  elitismRate);  [CE]  cannot  find  symbol  populationRimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  populationRimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  populationRimit,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	18	None	replace
563	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  elitismLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	18	None	replace
564	[BUG]  [BUGGY]  super(populationLimit  +  1,  totalLimit,  elitismRate);  [CE]  cannot  find  symbol  totalLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  totalLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  totalLimit,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	18	None	replace
565	[BUG]  [BUGGY]  super(populationLimit  +  1,  populations,  elitismRate);  [CE]  cannot  find  symbol  populations  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  populations,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  populations,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populations	18	None	replace
566	[BUG]  [BUGGY]  super(populationLimit  +  1,  size,  elitismRate);  [CE]  cannot  find  symbol  size  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  size,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  size,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	18	None	replace
567	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  false);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	18	None	replace
568	[BUG]  [BUGGY]  super(populationLimit  +  1,  demographicLimit,  elitismRate);  [CE]  cannot  find  symbol  demographicLimit  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  demographicLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  demographicLimit,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	18	None	replace
569	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  numberLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  numberLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	18	None	replace
570	[BUG]  [BUGGY]  super(populationLimit  +  1,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  this.elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	18	None	replace
571	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  null);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)	18	None	replace
572	[BUG]  [BUGGY]  super(populationLimit  +  1,  number,  elitismRate);  [CE]  cannot  find  symbol  number  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  number,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  number,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  number	18	None	replace
573	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  size);  [CE]  cannot  find  symbol  size  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  size);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  size);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	18	None	replace
574	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.NaN);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.NaN);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  PopulationLimit.NaN);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	18	None	replace
575	[BUG]  [BUGGY]  super(populationLimit,  size  +  1,  elitismRate);  [CE]  cannot  find  symbol  size  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  size  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  size  +  1,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	18	None	replace
576	[BUG]  [BUGGY]  super(populationLimit  +  1,  false,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,boolean,double)  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  false,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  false,  elitismRate);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,boolean,double)	18	None	replace
577	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  elitism);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	18	None	replace
578	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  -  populationLimit;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
579	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  /  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  /  populationLimit;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
580	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
581	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit,  elitismRate;  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit,  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  -  populationLimit,  elitismRate;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  ';'  expected	5	None	replace
582	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  |  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  |  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  |  elitismRate;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
583	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.MIN_VALUE;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.MIN_VALUE;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.MIN_VALUE;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
584	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  1;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  -  1;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  -  1;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
585	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.parsePopulation(populationLimit);	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
586	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.MAX_VALUE;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.MAX_VALUE;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.MAX_VALUE;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
587	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  +  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  +  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  -  populationLimit  +  elitismRate;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
588	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.DEFAULT_PREFIX;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.DEFAULT_PREFIX;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.DEFAULT_PREFIX;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
589	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.NaN;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.NaN;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.NaN;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
590	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.ZERO;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.ZERO;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.ZERO;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
591	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.parseInt(populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.parseInt(populationLimit,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.parseInt(populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
592	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.intValue();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.intValue();  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.intValue();	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
593	[BUG]  [BUGGY]  this.populationLimit  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  elitismRate;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
594	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.EMPTY_LIST;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.EMPTY_LIST;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.EMPTY_LIST;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
595	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  2.0;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  /  2.0;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  /  2.0;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
596	[BUG]  [BUGGY]  this.populationLimit  -=  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  -=  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  -=  populationLimit;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
597	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  size;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  /  size;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  /  size;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
598	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.doubleValue();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.doubleValue();  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.doubleValue();	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
599	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.MAX_PER_SECOND;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.MAX_PER_SECOND;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.MAX_PER_SECOND;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
600	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  this.elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	42	None	replace
601	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MIN_VALUE  +  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	42	None	replace
602	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  this.elitemRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  this.elitemRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  this.elitemRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	42	None	replace
603	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	42	None	replace
604	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  2,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  2,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  2,  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	42	None	replace
605	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  *  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	42	None	replace
606	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  double.length,  elitismRate);  [CE]  class  expected  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  double.length,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  double.length,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  class  expected	42	None	replace
607	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  size,  elitismRate);  [CE]  cannot  find  symbol  size  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  size,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  size,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  size	42	None	replace
608	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  doubleRate,  elitismLimit);  [CE]  cannot  find  symbol  doubleRate  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  doubleRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  doubleRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  doubleRate	42	None	replace
609	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  double,  elitismRate);  [CE]  '.class'  expected  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  double,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  double,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  '.class'  expected	42	None	replace
610	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  10.0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  10.0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  10.0,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	42	None	replace
611	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  0,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	42	None	replace
612	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  Double.MIN_VALUE,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  Double.MIN_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  Double.MIN_VALUE,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	42	None	replace
613	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  2  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  2  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  2  +  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	42	None	replace
614	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1  +  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	42	None	replace
615	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  100,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  100,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  100,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	42	None	replace
616	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  2,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  2,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  2,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	42	None	replace
617	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  totalLimit,  elitismRate);  [CE]  cannot  find  symbol  totalLimit  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  totalLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  totalLimit,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	42	None	replace
618	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  devLimit,  elitismRate);  [CE]  cannot  find  symbol  devLimit  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  devLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  devLimit,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  devLimit	42	None	replace
619	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1000,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1000,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1000,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	42	None	replace
620	[BUG]  [BUGGY]  super(populatedLimit,  elitismRate,  populationLimit);  [CE]  cannot  find  symbol  populatedLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populatedLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populatedLimit,  elitismRate,  populationLimit);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populatedLimit	31	None	replace
621	[BUG]  [BUGGY]  super(publicityLimit,  elitismRate);  [CE]  cannot  find  symbol  publicityLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicityLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicityLimit,  elitismRate);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicityLimit	31	None	replace
622	[BUG]  [BUGGY]  super(dividedLimit,  elitismRate);  [CE]  cannot  find  symbol  dividedLimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(dividedLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(dividedLimit,  elitismRate);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dividedLimit	31	None	replace
623	[BUG]  [BUGGY]  super(populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populateLimit,  elitismRate);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	31	None	replace
624	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.doubleValue);  [CE]  double  cannot  be  dereferenced  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.doubleValue);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.doubleValue);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  double  cannot  be  dereferenced	31	None	replace
625	[BUG]  [BUGGY]  super(globalLimit,  elitismRate);  [CE]  cannot  find  symbol  globalLimit  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(globalLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(globalLimit,  elitismRate);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  globalLimit	31	None	replace
626	[BUG]  [BUGGY]  super(populationLimit,  new  double[elitismRate].doubleValue());  [CE]  possible  loss  of  precision  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[elitismRate].doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[elitismRate].doubleValue());	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  possible  loss  of  precision	31	None	replace
627	[BUG]  [BUGGY]  super(regionLimit,  elitismRate);  [CE]  cannot  find  symbol  regionLimit  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(regionLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(regionLimit,  elitismRate);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  regionLimit	31	None	replace
628	[BUG]  [BUGGY]  super(popultLimit,  elitismRate);  [CE]  cannot  find  symbol  popultLimit  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(popultLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(popultLimit,  elitismRate);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  popultLimit	31	None	replace
629	[BUG]  [BUGGY]  super(populatedLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populatedLimit  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populatedLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populatedLimit,  elitismRate,  populateLimit);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populatedLimit	31	None	replace
630	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  +  elitismRate,  elitismRate);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	10	None	replace
631	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  elitismRate);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	10	None	replace
632	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  false);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	10	None	replace
633	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  null);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)	10	None	replace
634	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  true);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  true);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	10	None	replace
635	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  this.elitismRate);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	10	None	replace
636	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  elitism);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	10	None	replace
637	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  populateLimit);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	10	None	replace
638	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  elitismLimit);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	10	None	replace
639	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate,  populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate,  populationLimit);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	10	None	replace
640	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  elitismMask);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	10	None	replace
641	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  new  double[]  {  0  }  );	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	10	None	replace
642	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  this.elitismLimit);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	10	None	replace
643	[BUG]  [BUGGY]  super(populationLimit  +  numberLimit,  elitismRate,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  numberLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  numberLimit,  elitismRate,  elitismRate);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	10	None	replace
644	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  +  elitismRate,  elitism);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	10	None	replace
645	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismStandard);  [CE]  cannot  find  symbol  elitismStandard  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismStandard);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  elitismStandard);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismStandard	10	None	replace
646	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismLast);  [CE]  cannot  find  symbol  elitismLast  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  elitismLast);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLast	10	None	replace
647	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismCount);  [CE]  cannot  find  symbol  elitismCount  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismCount);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  elitismCount);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismCount	10	None	replace
648	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  0);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  0);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  0);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	10	None	replace
649	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismFactory);  [CE]  cannot  find  symbol  elitismFactory  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  elitismFactory);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  elitismFactory);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismFactory	10	None	replace
650	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  /  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  /  populationLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	28	None	replace
651	[BUG]  [BUGGY]  super(populationLimit  /  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  numberLimit,  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	28	None	replace
652	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,int)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  populationLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,int)	28	None	replace
653	[BUG]  [BUGGY]  super(populationLimit  /  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  this.elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	28	None	replace
654	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate  /  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  elitismRate  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate  /  populationLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	28	None	replace
655	[BUG]  [BUGGY]  super(populationLimit  /  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismMask);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	28	None	replace
656	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	28	None	replace
657	[BUG]  [BUGGY]  super(populationLimit  /  double  elitismRate);  [CE]  '.class'  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  double  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  double  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  '.class'  expected	28	None	replace
658	[BUG]  [BUGGY]  super(populationLimit  /  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  this.elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	28	None	replace
659	[BUG]  [BUGGY]  super(populationLimit  *  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  numberLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  numberLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	28	None	replace
660	[BUG]  [BUGGY]  super(populationLimit  /  elitismFactor);  [CE]  cannot  find  symbol  elitismFactor  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismFactor);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismFactor);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismFactor	28	None	replace
661	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.MAX_VALUE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.MAX_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.MAX_VALUE,  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
662	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.MINUTE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.MINUTE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.MINUTE,  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
663	[BUG]  [BUGGY]  super(populationLimit  /  total,  elitismRate);  [CE]  cannot  find  symbol  total  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  total,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  total,  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  total	28	None	replace
664	[BUG]  [BUGGY]  super(populationLimit  /  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitism);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitism	28	None	replace
665	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.MIN_VALUE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.MIN_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.MIN_VALUE,  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
666	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.MAX_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.MAX_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.MAX_VALUE);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
667	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate.doubleValue());	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  double  cannot  be  dereferenced	28	None	replace
668	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  +  populationLimit  /  populationLimit);	  super(populationLimit    /    populationLimit);    	compilable	  [FE]  AssertionError  	28	4	replace
669	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  /  populationLimit);  [FE]  AssertionError  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  /  populationLimit);	  super(populationLimit    /    populationLimit);    	compilable	  [FE]  AssertionError  	28	4	replace
670	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismMask  }  );  [CE]  cannot  find  symbol  elitismMask  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismMask  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismMask  }  );	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	17	None	replace
671	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  elitismMask);	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	17	None	replace
672	[BUG]  [BUGGY]  super(populationLimit,  int  elitismRate);  [CE]  '.class'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  int  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  int  elitismRate);	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  '.class'  expected	17	None	replace
673	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismError  }  );  [CE]  cannot  find  symbol  elitismError  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismError  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismError  }  );	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  cannot  find  symbol  elitismError	17	None	replace
674	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  super(populationLimit  /  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  super(populationLimit  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    super(populationLimit  /  populationLimit);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
675	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this(populationLimit  /  populationLimit);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	27	None	add
676	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  /  populationLimit);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  /  populationLimit);	  	non-compiled	[CE]  not  a  statement	27	None	add
677	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  /  populationLimit;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  /  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  /  populationLimit;	  	non-compiled	[CE]  not  a  statement	27	None	add
678	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
679	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit,  elitismRate);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
680	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
681	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  /  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  /  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  /  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
682	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  super(populationLimit  /  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  super(populationLimit  /  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  super(populationLimit  /  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
683	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
684	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
685	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  <=  elitismRate;  elitismRate  =  elitismRate;  }  [CE]  ')'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  <=  elitismRate;  elitismRate  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  <=  elitismRate;  elitismRate  =  elitismRate;  }	  	non-compiled	[CE]  ')'  expected	27	None	add
686	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  this.elitismRate  =  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
687	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  1,  this.elitismRate,  0,  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  1,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  1,  this.elitismRate,  0,  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
688	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  1,  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
689	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  super(populationLimit  /  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  super(populationLimit  /  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  super(populationLimit  /  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
690	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.MAX_VALUE);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.MAX_VALUE);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  PopulationLimit.MAX_VALUE);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
691	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  *  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
692	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
693	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  this.populationLimit  =  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
694	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populateLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
695	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  this.elitismRate  =  null;  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  this.elitismRate  =  null;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  this.elitismRate  =  null;  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
696	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  else  {  super(populationLimit  /  populationLimit);  }  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  else  {  super(populationLimit  /  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  else  {  super(populationLimit  /  populationLimit);  }	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
697	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this(populationLimit  /  populationLimit,  new  double[]  {  elitismRate  }  );	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	27	None	add
698	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  PopulationUtils.getPopulationLimit(populationLimit);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
699	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;)  {  this.elitismRate  =  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
700	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
701	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate  +=  elitismRate);  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate  +=  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate  +=  elitismRate);  }	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	27	None	add
702	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  final  double  elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  final  double  elitismRate  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  final  double  elitismRate  =  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
703	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  super(populationLimit  *  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  super(populationLimit  *  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  super(populationLimit  *  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
704	[BUG]  [BUGGY]  super(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	3	None	replace
705	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
706	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	3	None	replace
707	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
708	[BUG]  [BUGGY]  super(populationLimit,  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int)	3	None	replace
709	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
710	[BUG]  [BUGGY]  n(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  n(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	n(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
711	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	3	None	replace
712	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	3	None	replace
713	[BUG]  [BUGGY]  setPopulationLimit(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  setPopulationLimit(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	setPopulationLimit(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
714	[BUG]  [BUGGY]  setPopulation(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  setPopulation(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	setPopulation(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
715	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  );  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  );  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }  );  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	3	None	replace
716	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  0,  populationLimit);  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
717	[BUG]  [BUGGY]  set(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  set(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	set(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
718	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
719	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.doubleValue());  this.elitismRate  =  elitismRate;  [CE]  double  cannot  be  dereferenced  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.doubleValue());  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.doubleValue());  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	replace
720	[BUG]  [BUGGY]  luate(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  luate(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	luate(populationLimit,  elitismRate);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
721	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	compilable	  [FE]  AssertionError  	3	5	replace
722	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;  [FE]  AssertionError  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	compilable	  [FE]  AssertionError  	3	5	replace
723	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	compilable	  [FE]  AssertionError  	3	5	replace
724	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;  [FE]  AssertionError  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	compilable	  [FE]  AssertionError  	3	5	replace
725	[BUG]  [BUGGY]  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	setPopulationLimit(populationLimit);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
726	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
727	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
728	[BUG]  [BUGGY]  super(populationLimit,  false);  this.elitismRate  =  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,boolean)  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  false);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  false);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,boolean)	3	None	replace
729	[BUG]  [BUGGY]  super(populationLimit,  elitism);  this.elitismRate  =  elitismRate;  [CE]  cannot  find  symbol  elitism  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitism);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitism);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  elitism	3	None	replace
730	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
731	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  false);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	9	None	replace
732	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  null);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,<null>)	9	None	replace
733	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  /  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  /  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  /  populationLimit,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	9	None	replace
734	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  populateLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	9	None	replace
735	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  /  elitismRate,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	9	None	replace
736	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  true);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  true);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	9	None	replace
737	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	9	None	replace
738	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  this.elitismLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	9	None	replace
739	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	9	None	replace
740	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  elitism);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	9	None	replace
741	[BUG]  [BUGGY]  super(populationLimit  /  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  this.elitismRate,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	9	None	replace
742	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  populateLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	9	None	replace
743	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  new  double[]  {  0  }  );	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	9	None	replace
744	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  this.elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	9	None	replace
745	[BUG]  [BUGGY]  super(populationLimit  /  total,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  total  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  total,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  total,  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  total	9	None	replace
746	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  /  populationLimit,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  /  populationLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  /  populationLimit,  elitismLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	9	None	replace
747	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  double  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  double  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	9	None	replace
748	[BUG]  [BUGGY]  super(populationLimit  /  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populateLimit,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	9	None	replace
749	[BUG]  [BUGGY]  super(populationLimit  /  size,  elitismRate);  [CE]  cannot  find  symbol  size  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  size,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  size,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	9	None	replace
750	[BUG]  [BUGGY]  super(populationLimit  /  numberLimit,  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  numberLimit,  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  numberLimit,  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	9	None	replace
751	[BUG]  [BUGGY]  super(populationLimit  /  total,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  total  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  total,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  total,  populationLimit,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  total	9	None	replace
752	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  this);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	9	None	replace
753	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  public  static  final  long  serialVersionUID);  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  public  static  final  long  serialVersionUID);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  public  static  final  long  serialVersionUID);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
754	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  elitismMask);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	9	None	replace
755	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  0,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	9	None	replace
756	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate,  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,int,double)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  elitismRate,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate,  populationLimit,  elitismRate);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,int,double)	16	None	replace
757	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  populationLimit);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	16	None	replace
758	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate,  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  elitismRate,  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate,  populateLimit,  elitismRate);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	16	None	replace
759	[BUG]  [BUGGY]  super(populationLimit  +  numberLimit,  elitismRate,  populationLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  numberLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  numberLimit,  elitismRate,  populationLimit);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	16	None	replace
760	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  +  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  +  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  +  populationLimit,  elitismRate);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	16	None	replace
761	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate,  populationLimit,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  elitismRate,  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate,  populationLimit,  elitismRate.doubleValue());	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
762	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  size);  [CE]  cannot  find  symbol  size  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  size);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  size);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  size	16	None	replace
763	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  numberLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  numberLimit);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	16	None	replace
764	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  public  static  final  long  serialVersionUID);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  public  static  final  long  serialVersionUID);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  public  static  final  long  serialVersionUID);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
765	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  populationLimit  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  populationLimit  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	30	None	replace
766	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  populateLimit  }  );  [CE]  cannot  find  symbol  populateLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  populateLimit  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  populateLimit  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  populateLimit	30	None	replace
767	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitemRate  }  );  [CE]  cannot  find  symbol  elitemRate  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitemRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitemRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitemRate	30	None	replace
768	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elimit  }  );  [CE]  cannot  find  symbol  elimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elimit  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elimit  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elimit	30	None	replace
769	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  int  elitismRate  }  );  [CE]  '.class'  expected  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  int  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  int  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  '.class'  expected	30	None	replace
770	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  this.elitismRate  }  );  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  this.elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  this.elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	30	None	replace
771	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  size  }  );  [CE]  cannot  find  symbol  size  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  size  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  size  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  size	30	None	replace
772	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  0,  elitism  }  );  [CE]  cannot  find  symbol  elitism  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  0,  elitism  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  0,  elitism  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitism	30	None	replace
773	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {   "elitism "  }  );  [CE]  incompatible  types  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {   "elitism "  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {   "elitism "  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  incompatible  types	30	None	replace
774	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismr  }  );  [CE]  cannot  find  symbol  elitismr  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismr  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismr  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismr	30	None	replace
775	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  public  elitism  }  );  [CE]  illegal  start  of  expression  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  public  elitism  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  public  elitism  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
776	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  ==  elitismRate  }  );  [CE]  array  dimension  missing  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  ==  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  ==  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  array  dimension  missing	30	None	replace
777	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRunner  }  );  [CE]  cannot  find  symbol  elitismRunner  [FE]                                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRunner  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRunner  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismRunner	30	None	replace
778	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  denominator  }  );  [CE]  cannot  find  symbol  denominator  [FE]                                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  denominator  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  denominator  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  denominator	30	None	replace
779	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  1,  elitism  }  );  [CE]  cannot  find  symbol  elitism  [FE]                                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  1,  elitism  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  1,  elitism  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitism	30	None	replace
780	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  numberRate  }  );  [CE]  cannot  find  symbol  numberRate  [FE]                                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  numberRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  numberRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  numberRate	30	None	replace
781	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismROOT  }  );  [CE]  cannot  find  symbol  elitismROOT  [FE]                                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismROOT  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismROOT  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismROOT	30	None	replace
782	[BUG]  [BUGGY]  super(numberLimit,  elitismRate,  populationLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(numberLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(numberLimit,  elitismRate,  populationLimit);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	15	None	replace
783	[BUG]  [BUGGY]  super(divideLimit,  elitismRate);  [CE]  cannot  find  symbol  divideLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(divideLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(divideLimit,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  divideLimit	15	None	replace
784	[BUG]  [BUGGY]  super(divisionLimit,  elitismRate);  [CE]  cannot  find  symbol  divisionLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(divisionLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(divisionLimit,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  divisionLimit	15	None	replace
785	[BUG]  [BUGGY]  super(dividerLimit,  elitismRate);  [CE]  cannot  find  symbol  dividerLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(dividerLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(dividerLimit,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dividerLimit	15	None	replace
786	[BUG]  [BUGGY]  super(numberLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(numberLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(numberLimit,  elitismRate,  populateLimit);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	15	None	replace
787	[BUG]  [BUGGY]  super(cityLimit,  elitismRate);  [CE]  cannot  find  symbol  cityLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(cityLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(cityLimit,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  cityLimit	15	None	replace
788	[BUG]  [BUGGY]  super(popularLimit,  elitismRate);  [CE]  cannot  find  symbol  popularLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(popularLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(popularLimit,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  popularLimit	15	None	replace
789	[BUG]  [BUGGY]  super(populationLimit,  elitismRate;  [CE]  ')'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate;	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  ')'  expected	15	None	replace
790	[BUG]  [BUGGY]  super(numberLimit,  elitismRate,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(numberLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(numberLimit,  elitismRate,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	15	None	replace
791	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MAX_VALUE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MAX_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MAX_VALUE,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
792	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MILLIS_PER_SIZE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MILLIS_PER_SIZE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MILLIS_PER_SIZE,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
793	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MILLIS,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MILLIS,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MILLIS,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
794	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTE,  populationLimit,  elitismLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTE,  populationLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MINUTE,  populationLimit,  elitismLimit);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
795	[BUG]  [BUGGY]  super(populationLimit  *  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  elitismRate,  elitismLimit);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	44	None	replace
796	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MILLIS_PER_SECOND,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MILLIS_PER_SECOND,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MILLIS_PER_SECOND,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
797	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismMask);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	44	None	replace
798	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit.doubleValue());  [CE]  int  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
799	[BUG]  [BUGGY]  super(populationLimit,  populateLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit,  elitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populateLimit	13	None	replace
800	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populateLimit.doubleValue());  [CE]  cannot  find  symbol  populateLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populateLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populateLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populateLimit	13	None	replace
801	[BUG]  [BUGGY]  super(populationLimit,  populationRimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  populationRimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRimit,  elitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populationRimit	13	None	replace
802	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  -  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  -  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  -  elitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
803	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  numberLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit,  elitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  numberLimit	13	None	replace
804	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  /  elitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
805	[BUG]  [BUGGY]  super(populationLimit,  populateLimit.doubleValue());  [CE]  cannot  find  symbol  populateLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populateLimit	13	None	replace
806	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.doubleValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	13	None	replace
807	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()),  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()),  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate.doubleValue()),  elitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
808	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.doubleValue()  +  populationLimit);  [CE]  double  cannot  be  dereferenced  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.doubleValue()  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.doubleValue()  +  populationLimit);	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
809	[BUG]  [BUGGY]  super(elitismLimit,  populationLimit.doubleValue());  [CE]  cannot  find  symbol  elitismLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(elitismLimit,  populationLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(elitismLimit,  populationLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	13	None	replace
810	[BUG]  [BUGGY]  super(populationLimit,  populateRate.doubleValue());  [CE]  cannot  find  symbol  populateRate  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populateRate	13	None	replace
811	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
812	[BUG]  [BUGGY]  super(populationLimit  -  populateLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  populateLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populateLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populateLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populateLimit	39	None	replace
813	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MIN_VALUE,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	39	None	replace
814	[BUG]  [BUGGY]  super(populationLimit  -  this.elitismRate,  elitismRate.doubleValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  this.elitismRate,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  this.elitismRate,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	39	None	replace
815	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
816	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  0,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  0,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  0,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
817	[BUG]  [BUGGY]  super(populationLimit  -  numberLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  numberLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  numberLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  numberLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  numberLimit	39	None	replace
818	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
819	[BUG]  [BUGGY]  super(populationLimit  -  1,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  1,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  1,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
820	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MAX_VALUE,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MAX_VALUE,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MAX_VALUE,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	39	None	replace
821	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  this.elitismRate.doubleValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  this.elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  this.elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	39	None	replace
822	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MINUTE,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MINUTE,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MINUTE,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	39	None	replace
823	[BUG]  [BUGGY]  super(populationLimit  -  BevölkerungLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  Bev  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  BevölkerungLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  BevölkerungLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  Bev	39	None	replace
824	[BUG]  [BUGGY]  super(populationLimit  -  populationsLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  populationsLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationsLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationsLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	39	None	replace
825	[BUG]  [BUGGY]  super(populationLimit  -  total,  populationLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  total  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  total,  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  total,  populationLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  total	39	None	replace
826	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  1,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  1,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  1,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
827	[BUG]  [BUGGY]  super(populationLimit  -  size,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  size  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  size,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  size,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  size	39	None	replace
828	[BUG]  [BUGGY]  super(populationLimit  -  100,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  100,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  100,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
829	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elelitismRate.doubleValue());  [CE]  cannot  find  symbol  elelitismRate  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elelitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elelitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elelitismRate	39	None	replace
830	[BUG]  [BUGGY]  super(populationLimit  -  demographicLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  demographicLimit  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  demographicLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  demographicLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	39	None	replace
831	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MINUTE,  populationLimit.doubleValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MINUTE,  populationLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MINUTE,  populationLimit.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	39	None	replace
832	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitism.doubleValue());  [CE]  cannot  find  symbol  elitism  [FE]                                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  elitism.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  elitism.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitism	39	None	replace
833	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitism.doubleValue());  [CE]  cannot  find  symbol  elitism  [FE]                                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitism.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitism.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitism	39	None	replace
834	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  populationLimit  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	32	None	replace
835	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  /  populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  /  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  /  populationLimit  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	32	None	replace
836	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  /  elitismRate  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	32	None	replace
837	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  populateLimit  +  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  populateLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  populateLimit  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	32	None	replace
838	[BUG]  [BUGGY]  super(populationLimit  /  total,  populationLimit  +  elitismRate);  [CE]  cannot  find  symbol  total  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  total,  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  total,  populationLimit  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  total	32	None	replace
839	[BUG]  [BUGGY]  super(populationLimit  /  this.elitismRate,  populationLimit  +  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  this.elitismRate,  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  this.elitismRate,  populationLimit  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	32	None	replace
840	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate  +  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate  +  populationLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	32	None	replace
841	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  populationsLimit  +  elitismRate);  [CE]  cannot  find  symbol  populationsLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  populationsLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  populationsLimit  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	32	None	replace
842	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  this.elitismRate,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	32	None	replace
843	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate  +  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate  +  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate  +  populateLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	32	None	replace
844	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  /  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  /  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  /  elitismRate,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	32	None	replace
845	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate  +  populateLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	32	None	replace
846	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  elitismLimit  +  populationLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  elitismLimit  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  elitismLimit  +  populationLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	32	None	replace
847	[BUG]  [BUGGY]  super(populationLimit  /  size,  elitismRate  +  populationLimit);  [CE]  cannot  find  symbol  size  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  size,  elitismRate  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  size,  elitismRate  +  populationLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	32	None	replace
848	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  else  {  super(populationLimit  -  populationLimit);  }  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  else  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  this.populationLimit  =  populationLimit;  }  else  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
849	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this(populationLimit,  elitismRate);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this(populationLimit,  elitismRate);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	36	None	add
850	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
851	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationUtils.doubleValue(populationLimit);  if(elitismRate  >  0.0)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationUtils.doubleValue(populationLimit);  if(elitismRate  >  0.0)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationUtils.doubleValue(populationLimit);  if(elitismRate  >  0.0)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
852	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
853	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
854	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
855	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  super(populationLimit  -  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
856	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  0)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  0)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  0)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
857	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  PopulationLimit.ZERO)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  PopulationLimit.ZERO)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  PopulationLimit.ZERO)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
858	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populationLimit;  if(elitismRate  >  0.0)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
859	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
860	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
861	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit  +  1,  elitismRate);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit  +  1,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit  +  1,  elitismRate);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
862	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
863	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
864	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  new  double[]  {  elitismRate  }  );  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  new  double[]  {  elitismRate  }  );  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  new  double[]  {  elitismRate  }  );  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
865	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	36	None	add
866	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
867	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  0)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  0)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  0)  {  this.populationLimit  =  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
868	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populateLimit(populationLimit,  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populateLimit(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populateLimit(populationLimit,  elitismRate);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
869	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  demographicLimit);  [CE]  cannot  find  symbol  demographicLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  demographicLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  demographicLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	18	None	replace
870	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  populationsLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  populationsLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	18	None	replace
871	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  new  double[]  {  0  }  );	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	18	None	replace
872	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  dataLimit);  [CE]  cannot  find  symbol  dataLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  dataLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	18	None	replace
873	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.MAX_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.MAX_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  PopulationLimit.MAX_VALUE);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	18	None	replace
874	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  new  double[]  {  0.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  new  double[]  {  0.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  new  double[]  {  0.0  }  );	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	18	None	replace
875	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  true);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  true);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	18	None	replace
876	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  this.populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  this.populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  this.populationLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	18	None	replace
877	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  type);  [CE]  cannot  find  symbol  type  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  type);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  type);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  type	18	None	replace
878	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  new  double[]  {  1.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  new  double[]  {  1.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  new  double[]  {  1.0  }  );	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	18	None	replace
879	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.DEFAULT);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.DEFAULT);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  PopulationLimit.DEFAULT);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	18	None	replace
880	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  elitismLimit);	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	25	None	replace
881	[BUG]  [BUGGY]  Super(populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  Super(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	Super(populationLimit,  elitismRate);	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	25	None	replace
882	[BUG]  [BUGGY]  super(populationLimit,  elitismFactory);  [CE]  cannot  find  symbol  elitismFactory  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismFactory);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismFactory);	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  cannot  find  symbol  elitismFactory	25	None	replace
883	[BUG]  [BUGGY]  super(populationLimit,  elitismLeadingStrategy);  [CE]  cannot  find  symbol  elitismLeadingStrategy  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismLeadingStrategy);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismLeadingStrategy);	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  cannot  find  symbol  elitismLeadingStrategy	25	None	replace
884	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate).doubleValue());  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate).doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate).doubleValue());	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	25	None	replace
885	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitism);  [CE]  cannot  find  symbol  elitism  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  elitism);	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  cannot  find  symbol  elitism	25	None	replace
886	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.DEFAULT_LOAD_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.DEFAULT_LOAD_FACTOR);	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	25	None	replace
887	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.DEFAULT_PREFIX);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.DEFAULT_PREFIX);	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	25	None	replace
888	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationsLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationsLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	1	None	replace
889	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  dataLimit);  [CE]  cannot  find  symbol  dataLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  dataLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  dataLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	1	None	replace
890	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.DEFAULT);  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.DEFAULT);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.DEFAULT);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	1	None	replace
891	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT_PREFIX,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT_PREFIX,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.DEFAULT_PREFIX,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
892	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT_PADDING,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT_PADDING,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.DEFAULT_PADDING,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
893	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.DEFAULT,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
894	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER_OF_RANGE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER_OF_RANGE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.NUMBER_OF_RANGE,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
895	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER_OF_YEAR,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER_OF_YEAR,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.NUMBER_OF_YEAR,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
896	[BUG]  [BUGGY]  super(populationLimit,  double.doubleValue());  [CE]  class  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  double.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  double.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  class  expected	24	None	replace
897	[BUG]  [BUGGY]  super(populationLimit,  numberLimit.doubleValue());  [CE]  cannot  find  symbol  numberLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  numberLimit	24	None	replace
898	[BUG]  [BUGGY]  super(populationLimit,  data.doubleValue());  [CE]  cannot  find  symbol  data  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  data.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  data.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  data	24	None	replace
899	[BUG]  [BUGGY]  super(populationLimit,  demographic.doubleValue());  [CE]  cannot  find  symbol  demographic  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  demographic.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  demographic.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  demographic	24	None	replace
900	[BUG]  [BUGGY]  super(populationLimit,  public.doubleValue());  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  public.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  public.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
901	[BUG]  [BUGGY]  super(populationLimit,  category.doubleValue());  [CE]  cannot  find  symbol  category  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  category.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  category.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  category	24	None	replace
902	[BUG]  [BUGGY]  super(populationLimit,  value.doubleValue());  [CE]  cannot  find  symbol  value  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  value.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  value.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  value	24	None	replace
903	[BUG]  [BUGGY]  super(populationLimit,  colon.doubleValue());  [CE]  cannot  find  symbol  colon  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  colon.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  colon.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  colon	24	None	replace
904	[BUG]  [BUGGY]  super(populationLimit,  state.doubleValue());  [CE]  cannot  find  symbol  state  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  state.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  state.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  state	24	None	replace
905	[BUG]  [BUGGY]  super(populationLimit,  group.doubleValue());  [CE]  cannot  find  symbol  group  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  group.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  group.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  group	24	None	replace
906	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
907	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	add	super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	compilable	  [FE]  AssertionError  	3	8	replace
908	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit);  this.elitismRate  =  elitismRate;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	compilable	  [FE]  AssertionError  	3	8	replace
909	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
910	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
911	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
912	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  populationLimit,  elitismRate,  0,  populationLimit);  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
913	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  throw  new  IllegalStateException( " ");  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
914	[BUG]  [BUGGY]  super(populationLimit,  elitismRate);  this.elitismRate  =  new  ElitisticListPopulation(populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate);  this.elitismRate  =  new  ElitisticListPopulation(populationLimit,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate);  this.elitismRate  =  new  ElitisticListPopulation(populationLimit,  elitismRate);	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	3	None	replace
915	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  populateLimit);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	38	None	replace
916	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  true);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  true);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  true);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,boolean)	38	None	replace
917	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  size);  [CE]  cannot  find  symbol  size  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  size);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  size);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	38	None	replace
918	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  this.elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	38	None	replace
919	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  this.elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	38	None	replace
920	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  double[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  double[]  {  0  }  );	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	38	None	replace
921	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  this.elitismLimit);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	38	None	replace
922	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  numberLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  numberLimit);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	38	None	replace
923	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  double[]  {  0.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  double[]  {  0.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  double[]  {  0.0  }  );	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	38	None	replace
924	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  value);  [CE]  cannot  find  symbol  value  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  value);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  value);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  value	38	None	replace
925	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  int[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int[])  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  int[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  int[]  {  0  }  );	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int[])	38	None	replace
926	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  type);  [CE]  cannot  find  symbol  type  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  type);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  type);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  type	38	None	replace
927	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  state);  [CE]  cannot  find  symbol  state  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  state);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  state);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  state	38	None	replace
928	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  public  static  final  long  serialVersionUID);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  public  static  final  long  serialVersionUID);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  public  static  final  long  serialVersionUID);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
929	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  this.type);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  this.type);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  this.type);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	38	None	replace
930	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  globalScope);  [CE]  cannot  find  symbol  globalScope  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  globalScope);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  globalScope);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  globalScope	38	None	replace
931	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  double[]  {  1.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  double[]  {  1.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  new  double[]  {  1.0  }  );	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	38	None	replace
932	[BUG]  [BUGGY]  super(populationLimit,  0.01,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0.01,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0.01,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	19	None	replace
933	[BUG]  [BUGGY]  super(populationLimit,  populateLimit,  0,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit,  0,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	19	None	replace
934	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  double  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  double  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  '.class'  expected	19	None	replace
935	[BUG]  [BUGGY]  super(populationLimit,  0,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  elitismRate,  populateLimit);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	19	None	replace
936	[BUG]  [BUGGY]  super(populationLimit,  0,  populationsLimit,  elitismRate);  [CE]  cannot  find  symbol  populationsLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  populationsLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  populationsLimit,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	19	None	replace
937	[BUG]  [BUGGY]  super(populationLimit,  100,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  100,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  100,  elitismRate);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	19	None	replace
938	[BUG]  [BUGGY]  super(populationLimit,  0,  populationLimit,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  populationLimit,  elitismRate.doubleValue());	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
939	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  this.elitismLimit);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
940	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
941	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  populateLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  populateLimit);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
942	[BUG]  [BUGGY]  super(populationLimit,  dataLimit,  this.elitismRate);  [CE]  cannot  find  symbol  dataLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  dataLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  dataLimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	23	None	replace
943	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  demographicLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  demographicLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  demographicLimit);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
944	[BUG]  [BUGGY]  super(populationLimit,  demographicLimit,  this.elitismRate);  [CE]  cannot  find  symbol  demographicLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  demographicLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  demographicLimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	23	None	replace
945	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  populationsLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  populationsLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  populationsLimit);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
946	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  new  double[]  {  0  }  );  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  new  double[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  new  double[]  {  0  }  );	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
947	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  elitismCount);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  elitismCount);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  elitismCount);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
948	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate  -  1);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  this.elitismRate  -  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  this.elitismRate  -  1);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
949	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTES,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTES,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MINUTES,  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	7	None	replace
950	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTES_PER_MILLIS,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTES_PER_MILLIS,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MINUTES_PER_MILLIS,  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	7	None	replace
951	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT_SIZE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT_SIZE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.DEFAULT_SIZE,  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	7	None	replace
952	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate.intValue()));  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate.intValue()));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate.intValue()));	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
953	[BUG]  [BUGGY]  Super(populationLimit,  populationLimit,  elitismRate.intValue());  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  Super(populationLimit,  populationLimit,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	Super(populationLimit,  populationLimit,  elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	20	None	replace
954	[BUG]  [BUGGY]  super(populationLimit,  null,  elitismRate.intValue());  [CE]  double  cannot  be  dereferenced  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  null,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  null,  elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
955	[BUG]  [BUGGY]  super(elitismLimit,  elitismRate.intValue());  [CE]  cannot  find  symbol  elitismLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(elitismLimit,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(elitismLimit,  elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	20	None	replace
956	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.intValue()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.intValue()  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.intValue()  +  1);	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
957	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.booleanValue());  [CE]  double  cannot  be  dereferenced  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.booleanValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.booleanValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
958	[BUG]  [BUGGY]  super(populationLimit,  elelitismRate.intValue());  [CE]  cannot  find  symbol  elelitismRate  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elelitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elelitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  elelitismRate	20	None	replace
959	[BUG]  [BUGGY]  Super(populationLimit,  elitismRate.intValue());  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  Super(populationLimit,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	Super(populationLimit,  elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	20	None	replace
960	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.intValue()).intValue();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.intValue()).intValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.intValue()).intValue();	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	20	None	replace
961	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.intValue()  *  populationLimit);  [CE]  double  cannot  be  dereferenced  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.intValue()  *  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.intValue()  *  populationLimit);	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
962	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  2;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  2;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  2;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
963	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_PREFIX;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_PREFIX;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.DEFAULT_PREFIX;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
964	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.UNDEFINED;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.UNDEFINED;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.UNDEFINED;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
965	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MAX_VALUE;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.MAX_VALUE;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.MAX_VALUE;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
966	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.DEFAULT_PARAMETERS_PER_SIZE;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.DEFAULT_PARAMETERS_PER_SIZE;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.DEFAULT_PARAMETERS_PER_SIZE;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
967	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  2;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  /  2;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  /  2;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
968	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  this.elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	32	None	replace
969	[BUG]  [BUGGY]  super(populationLimit  /  this.elitismRate  +  populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  this.elitismRate  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  this.elitismRate  +  populationLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	32	None	replace
970	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate  +  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate  +  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  /  elitismRate  +  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	32	None	replace
971	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate  +  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	32	None	replace
972	[BUG]  [BUGGY]  super(populationLimit  /  size  +  elitismRate);  [CE]  cannot  find  symbol  size  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  size  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  size  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	32	None	replace
973	[BUG]  [BUGGY]  super(populationLimit  /  PopulationLimit.MINUTE,  elitismRate  +  populationLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  PopulationLimit.MINUTE,  elitismRate  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  PopulationLimit.MINUTE,  elitismRate  +  populationLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	32	None	replace
974	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  1  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  1  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  1  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	32	None	replace
975	[BUG]  [BUGGY]  super(populationLimit  /  this.  populationLimit  +  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  this.  populationLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  this.  populationLimit  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	32	None	replace
976	[BUG]  [BUGGY]  super(populationLimit  /  numberLimit,  elitismRate  +  populationLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  numberLimit,  elitismRate  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  numberLimit,  elitismRate  +  populationLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	32	None	replace
977	[BUG]  [BUGGY]  super(populationLimit  /  total  +  elitismRate);  [CE]  cannot  find  symbol  total  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  total  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  total  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  total	32	None	replace
978	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTE,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTE,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MINUTE,  populationLimit,  elitismRate);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	16	None	replace
979	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	16	None	replace
980	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTES,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTES,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MINUTES,  populationLimit,  elitismRate);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	16	None	replace
981	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER_OF_RANGE,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER_OF_RANGE,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.NUMBER_OF_RANGE,  populationLimit,  elitismRate);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	16	None	replace
982	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate,  populationLimit,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  elitismRate,  populationLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate,  populationLimit,  this.elitismRate);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	16	None	replace
983	[BUG]  [BUGGY]  super(populationLimit  +  total,  elitismRate,  populationLimit);  [CE]  cannot  find  symbol  total  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  total,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  total,  elitismRate,  populationLimit);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  total	16	None	replace
984	[BUG]  [BUGGY]  super(populationLimit,  elitRate);  [CE]  cannot  find  symbol  elitRate  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitRate);	  super(populationLimit,    elitism);    	non-compiled	[CE]  cannot  find  symbol  elitRate	14	None	replace
985	[BUG]  [BUGGY]  super(populationLimit,  totalLimit);  [CE]  cannot  find  symbol  totalLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  totalLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  totalLimit);	  super(populationLimit,    elitism);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	14	None	replace
986	[BUG]  [BUGGY]  super(requireLimit,  elitismRate);  [CE]  cannot  find  symbol  requireLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(requireLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(requireLimit,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  requireLimit	15	None	replace
987	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  +  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  +  populationLimit);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	15	None	replace
988	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  populateLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  populateLimit	12	None	replace
989	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	12	None	replace
990	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[])	12	None	replace
991	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }.doubleValue());  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }.doubleValue());	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
992	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  ;  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  ;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }  ;	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  ')'  expected	12	None	replace
993	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  -  populationLimit);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }  -  populationLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	12	None	replace
994	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  :  populationLimit);  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  :  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }  :  populationLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  ')'  expected	12	None	replace
995	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  this.populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  this.populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  this.populationLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	12	None	replace
996	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  ));  [CE]  ';'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  ));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }  ));	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  ';'  expected	12	None	replace
997	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }, " ");  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],String)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }, " ");  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }, " ");	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],String)	12	None	replace
998	[BUG]  [BUGGY]  super(publicityLimit,  new  double[]  {  elitismRate  }  );  [CE]  cannot  find  symbol  publicityLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicityLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicityLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  publicityLimit	12	None	replace
999	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  }  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  }  +  1);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	12	None	replace
1000	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  populationLimit;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1001	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  new  Double(populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  new  Double(populationLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  new  Double(populationLimit);	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1002	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  1;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  1;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  1;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1003	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  2;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  2;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  2;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1004	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  100;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  100;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  100;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1005	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  dataLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  dataLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  dataLimit;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1006	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit();  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  getPopulationLimit();	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1007	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  this.elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	8	None	replace
1008	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  dataLimit);  [CE]  cannot  find  symbol  dataLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  dataLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	8	None	replace
1009	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  this.dataLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  this.dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  this.dataLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	8	None	replace
1010	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  denominator);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  denominator);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  denominator	8	None	replace
1011	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  1);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  1);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	8	None	replace
1012	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  locale);  [CE]  cannot  find  symbol  locale  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  locale);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  locale);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  locale	8	None	replace
1013	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	8	None	replace
1014	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  value);  [CE]  cannot  find  symbol  value  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  value);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  value);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  value	8	None	replace
1015	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  type);  [CE]  cannot  find  symbol  type  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  type);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  type);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  type	8	None	replace
1016	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  new  double[]  {  0.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  new  double[]  {  0.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  new  double[]  {  0.0  }  );	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	8	None	replace
1017	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  populationLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	8	None	replace
1018	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  native);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  native);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  native);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1019	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  this.elitismRate,  elitismLimit);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	10	None	replace
1020	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  double  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  double  elitismRate);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	10	None	replace
1021	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  dataLimit);  [CE]  cannot  find  symbol  dataLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  dataLimit);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	10	None	replace
1022	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  this.populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  this.populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  this.populationLimit);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	10	None	replace
1023	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  this.dataLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  this.dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  this.dataLimit);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	10	None	replace
1024	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	10	None	replace
1025	[BUG]  [BUGGY]  super(populationLimit  +  this.  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.  populationLimit,  elitismRate);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	10	None	replace
1026	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  0,  elitismRate);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	10	None	replace
1027	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  value);  [CE]  cannot  find  symbol  value  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  value);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  value);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  value	10	None	replace
1028	[BUG]  [BUGGY]  super(populationLimit,  double  elitismRate,  populateLimit);  [CE]  '.class'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  double  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  double  elitismRate,  populateLimit);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  '.class'  expected	22	None	replace
1029	[BUG]  [BUGGY]  super(populationLimit,  Double.POSITIVE_INFINITY);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  Double.POSITIVE_INFINITY);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  Double.POSITIVE_INFINITY);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	22	None	replace
1030	[BUG]  [BUGGY]  super(populationLimit,  double  elitismRate,  null);  [CE]  '.class'  expected  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  double  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  double  elitismRate,  null);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  '.class'  expected	22	None	replace
1031	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.MILLIS_PER_SIZE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.MILLIS_PER_SIZE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.MILLIS_PER_SIZE);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
1032	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.MILLIS_PER_SIZE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.MILLIS_PER_SIZE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.MILLIS_PER_SIZE,  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
1033	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.MAX_VALUE  +  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.MAX_VALUE  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.MAX_VALUE  +  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
1034	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.DEFAULT_PADDING,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.DEFAULT_PADDING,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.DEFAULT_PADDING,  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
1035	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.DEFAULT_SIZE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.DEFAULT_SIZE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.DEFAULT_SIZE,  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
1036	[BUG]  [BUGGY]  super(populationLimit  *  PopulationLimit.DEFAULT_PREFIX);  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  PopulationLimit.DEFAULT_PREFIX);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  PopulationLimit.DEFAULT_PREFIX);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
1037	[BUG]  [BUGGY]  super(populationLimit  /  this.elitismRate  +  elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  this.elitismRate  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  this.elitismRate  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	41	None	replace
1038	[BUG]  [BUGGY]  super(populationLimit  /  total  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  total  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  total  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  total  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  total	41	None	replace
1039	[BUG]  [BUGGY]  super(populationLimit  /  PopulationLimit.MINUTE  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  PopulationLimit.MINUTE  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  PopulationLimit.MINUTE  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	41	None	replace
1040	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit  +  this.elitismRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit  +  this.elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit  +  this.elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	41	None	replace
1041	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  dataLimit,  elitismRate);  [CE]  cannot  find  symbol  dataLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  dataLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  dataLimit,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	41	None	replace
1042	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  new  Double(elitismRate),  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  new  Double(elitismRate),  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  new  Double(elitismRate),  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
1043	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  this.serialRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  this.serialRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  this.serialRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	41	None	replace
1044	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  this.valueRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  this.valueRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  this.valueRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	41	None	replace
1045	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  1000,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  1000,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  1000,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	41	None	replace
1046	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  denominator,  elitismRate);  [CE]  cannot  find  symbol  denominator  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  denominator,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  denominator,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  denominator	41	None	replace
1047	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  delta,  elitismRate);  [CE]  cannot  find  symbol  delta  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  delta,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  delta,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  delta	41	None	replace
1048	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  100,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  100,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  100,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	41	None	replace
1049	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit  +  10.0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit  +  10.0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit  +  10.0,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	41	None	replace
1050	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  setPopulationLimit(populationLimit  /  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  setPopulationLimit(populationLimit  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    setPopulationLimit(populationLimit  /  populationLimit);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1051	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    System.arraycopy(populationLimit,  0,  this.populationLimit,  0,  elitismRate);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1052	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate  =  elitismRate;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate  =  elitismRate;  }	  	non-compiled	[CE]  ')'  expected	27	None	add
1053	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  if(elitismRate  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  if(elitismRate  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  if(elitismRate  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
1054	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationUtils.doubleValue(populationLimit);  if(elitismRate  >  0.0)  {  super(populationLimit  /  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationUtils.doubleValue(populationLimit);  if(elitismRate  >  0.0)  {  super(populationLimit  /  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  PopulationUtils.doubleValue(populationLimit);  if(elitismRate  >  0.0)  {  super(populationLimit  /  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
1055	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit,  elitismRate);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1056	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
1057	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  elitismRate);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1058	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populate(populationLimit,  elitismRate);  }  else  {  super(populationLimit  /  populationLimit);  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populate(populationLimit,  elitismRate);  }  else  {  super(populationLimit  /  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  populate(populationLimit,  elitismRate);  }  else  {  super(populationLimit  /  populationLimit);  }	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	27	None	add
1059	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit  +  1,  elitismRate);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit  +  1,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit  +  1,  elitismRate);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1060	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populateLimit(populationLimit,  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populateLimit(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populateLimit(populationLimit,  elitismRate);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1061	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate!=  0;  elitismRate  =  elitismRate;  }  [CE]  ')'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate!=  0;  elitismRate  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate!=  0;  elitismRate  =  elitismRate;  }	  	non-compiled	[CE]  ')'  expected	27	None	add
1062	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1063	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  new  double[]  {  elitismRate  }  );  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  new  double[]  {  elitismRate  }  );  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  new  double[]  {  elitismRate  }  );  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1064	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1065	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  super(populationLimit  /  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  super(populationLimit  /  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  super(populationLimit  /  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1066	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
1067	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  this.populationLimit  +=  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  this.populationLimit  +=  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  >=  0;  elitismRate++)  {  this.populationLimit  +=  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
1068	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  <=  0;  elitismRate++)  {  this.populationLimit  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  <=  0;  elitismRate++)  {  this.populationLimit  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  <=  0;  elitismRate++)  {  this.populationLimit  =  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
1069	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    System.arraycopy(populationLimit,  0,  this.populationLimit,  elitismRate,  0,  populationLimit);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1070	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  <=  0;  elitismRate++)  {  super(populationLimit  /  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  <=  0;  elitismRate++)  {  super(populationLimit  /  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  for(final  int  elitismRate  =  populationLimit;  elitismRate  <=  0;  elitismRate++)  {  super(populationLimit  /  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
1071	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  super(elitismRate  /  populationLimit);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  super(elitismRate  /  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  super(populationLimit  /  populationLimit);  }  else  {  super(elitismRate  /  populationLimit);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1072	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationRate),  elitismLimit);  [CE]  cannot  find  symbol  populationRate  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationRate),  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationRate),  elitismLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  populationRate	43	None	replace
1073	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationRate,  elitismLimit));  [CE]  cannot  find  symbol  populationRate  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationRate,  elitismLimit));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationRate,  elitismLimit));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  populationRate	43	None	replace
1074	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationLimit));  [CE]  no  suitable  constructor  found  for  ListPopulation(int,Double)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationLimit));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationLimit));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,Double)	43	None	replace
1075	[BUG]  [BUGGY]  super(populationLimit,  new  Double(populationRate),  populationLimit);  [CE]  cannot  find  symbol  populationRate  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(populationRate),  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(populationRate),  populationLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  populationRate	43	None	replace
1076	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  demographicLimit);  [CE]  cannot  find  symbol  demographicLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  demographicLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  demographicLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	43	None	replace
1077	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate  +  populationLimit));  [CE]  no  suitable  constructor  found  for  ListPopulation(int,Double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate  +  populationLimit));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate  +  populationLimit));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,Double)	43	None	replace
1078	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  this.populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  this.populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  this.populationLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	43	None	replace
1079	[BUG]  [BUGGY]  super(populationLimit,  null,  new  Double(elitismRate));  [CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>,Double)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  null,  new  Double(elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  null,  new  Double(elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>,Double)	43	None	replace
1080	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  false);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,boolean)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  false);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,boolean)	43	None	replace
1081	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double,int)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate),  populationLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,Double,int)	43	None	replace
1082	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  new  Double(elitismRate),  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  new  Double(elitismRate),  elitismLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	43	None	replace
1083	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elemRate),  populationLimit);  [CE]  cannot  find  symbol  elemRate  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elemRate),  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elemRate),  populationLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  elemRate	43	None	replace
1084	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.valueOf(elitismRate));  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.valueOf(elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.valueOf(elitismRate));	  super(populationLimit,    elitismFactor);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	46	None	replace
1085	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.DEFAULT_NUMBER_FACTOR);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.DEFAULT_NUMBER_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.DEFAULT_NUMBER_FACTOR);	  super(populationLimit,    elitismFactor);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	46	None	replace
1086	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double)	6	None	replace
1087	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  populateLimit);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	6	None	replace
1088	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double[])  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double[])	6	None	replace
1089	[BUG]  [BUGGY]  this(populationLimit  -  populationLimit,  elitismRate);  [CE]  recursive  constructor  invocation  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit  -  populationLimit,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  recursive  constructor  invocation	6	None	replace
1090	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0.0  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double[])  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  0.0  }  );	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double[])	6	None	replace
1091	[BUG]  [BUGGY]  this(populationLimit,  new  Double(elitismRate),  populationLimit);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,Double,int)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  new  Double(elitismRate),  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  new  Double(elitismRate),  populationLimit);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,Double,int)	6	None	replace
1092	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,int[])  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  new  int[]  {  0  }  );	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,int[])	6	None	replace
1093	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  -1  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double[])  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  -1  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  -1  }  );	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,double[])	6	None	replace
1094	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  Integer(0));  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,Integer)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  new  Integer(0));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  new  Integer(0));	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,Integer)	6	None	replace
1095	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  -  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	40	None	replace
1096	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.doubleValue()  -  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.doubleValue()  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.doubleValue()  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	40	None	replace
1097	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate  -  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	40	None	replace
1098	[BUG]  [BUGGY]  super(populationLimit  +  numberLimit  -  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  numberLimit  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  numberLimit  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	40	None	replace
1099	[BUG]  [BUGGY]  super(populationLimit  +  this.regionLimit  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.regionLimit  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.regionLimit  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
1100	[BUG]  [BUGGY]  super(populationLimit  +  this.serialRate  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.serialRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.serialRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
1101	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  populationLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
1102	[BUG]  [BUGGY]  super(populationLimit  +  this.elemRate  -  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elemRate  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elemRate  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
1103	[BUG]  [BUGGY]  super(populationLimit  +  populationsLimit  -  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  populationsLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationsLimit  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationsLimit  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	40	None	replace
1104	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  -  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  -  populateLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  -  populateLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	40	None	replace
1105	[BUG]  [BUGGY]  super(populationLimit  +  dataLimit  -  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  dataLimit  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  dataLimit  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  dataLimit  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	40	None	replace
1106	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationLimit,  elitismLast);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  -  populationLimit,  elitismLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  populationLimit,  elitismLast);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
1107	[BUG]  [BUGGY]  this(populationLimit,  new  Double(elitismRate),  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,Double,boolean)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  new  Double(elitismRate),  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  new  Double(elitismRate),  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,Double,boolean)	2	None	replace
1108	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  demographicLimit);  [CE]  cannot  find  symbol  demographicLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  demographicLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  demographicLimit);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	2	None	replace
1109	[BUG]  [BUGGY]  this(populationLimit,  true,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,boolean,double,boolean)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  true,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  true,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,boolean,double,boolean)	2	None	replace
1110	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  new  int[]  {  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,int[])  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  new  int[]  {  }  );  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  new  int[]  {  }  );	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,int[])	2	None	replace
1111	[BUG]  [BUGGY]  this(populationLimit,  numberCount,  elitismRate,  false);  [CE]  cannot  find  symbol  numberCount  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  numberCount,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  numberCount,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  numberCount	2	None	replace
1112	[BUG]  [BUGGY]  this(populationLimit,  populations,  elitismRate,  false);  [CE]  cannot  find  symbol  populations  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populations,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populations,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populations	2	None	replace
1113	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  populations);  [CE]  cannot  find  symbol  populations  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  populations);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  populations);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populations	2	None	replace
1114	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  PopulationLimit.negative);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  PopulationLimit.negative);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  PopulationLimit.negative);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	2	None	replace
1115	[BUG]  [BUGGY]  Super(populationLimit,  new  double[]  {  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  Super(populationLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	Super(populationLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	30	None	replace
1116	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismMarker  }  );  [CE]  cannot  find  symbol  elitismMarker  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismMarker  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismMarker  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismMarker	30	None	replace
1117	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismCount  }  );  [CE]  cannot  find  symbol  elitismCount  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismCount  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismCount  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismCount	30	None	replace
1118	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismTRate  }  );  [CE]  cannot  find  symbol  elitismTRate  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismTRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismTRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismTRate	30	None	replace
1119	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  ElitismRate  }  );  [CE]  cannot  find  symbol  ElitismRate  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  ElitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  ElitismRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  ElitismRate	30	None	replace
1120	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismFlag  }  );  [CE]  cannot  find  symbol  elitismFlag  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismFlag  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismFlag  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismFlag	30	None	replace
1121	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  _elitism  }  );  [CE]  cannot  find  symbol  _elitism  [FE]                                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  _elitism  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  _elitism  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  _elitism	30	None	replace
1122	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismVate  }  );  [CE]  cannot  find  symbol  elitismVate  [FE]                                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismVate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismVate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismVate	30	None	replace
1123	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  number  }  );  [CE]  cannot  find  symbol  number  [FE]                                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  number  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  number  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  number	30	None	replace
1124	[BUG]  [BUGGY]  super(populationLimit,  null,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  null,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  null,  elitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
1125	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()),  elitismLimit);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()),  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate.doubleValue()),  elitismLimit);	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
1126	[BUG]  [BUGGY]  super(populationLimit,  0,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  0,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  0,  elitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
1127	[BUG]  [BUGGY]  super(populationLimit,  elelitismRate.doubleValue());  [CE]  cannot  find  symbol  elelitismRate  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elelitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elelitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elelitismRate	13	None	replace
1128	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()),  populationLimit);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()),  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate.doubleValue()),  populationLimit);	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
1129	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.doubleValue()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.doubleValue()  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.doubleValue()  +  1);	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
1130	[BUG]  [BUGGY]  super(populationLimit,  elitismRate.doubleValue()  *  populationLimit);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate.doubleValue()  *  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate.doubleValue()  *  populationLimit);	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
1131	[BUG]  [BUGGY]  super(populationLimit,  elitismRelativeToLastMask);  [CE]  cannot  find  symbol  elitismRelativeToLastMask  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRelativeToLastMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRelativeToLastMask);	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  cannot  find  symbol  elitismRelativeToLastMask	17	None	replace
1132	[BUG]  [BUGGY]  super(populationLimit,  new  double[elitismRate],  elitismMask);  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[elitismRate],  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[elitismRate],  elitismMask);	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
1133	[BUG]  [BUGGY]  super(populationLimit,  elitismLeadingMask);  [CE]  cannot  find  symbol  elitismLeadingMask  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismLeadingMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismLeadingMask);	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  cannot  find  symbol  elitismLeadingMask	17	None	replace
1134	[BUG]  [BUGGY]  super(populationLimit  -  unitLimit,  elitismRate);  [CE]  cannot  find  symbol  unitLimit  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  unitLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  unitLimit,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  unitLimit	37	None	replace
1135	[BUG]  [BUGGY]  super(populationLimit  -1,  elitismRate  -  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -1,  elitismRate  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -1,  elitismRate  -  populationLimit);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	37	None	replace
1136	[BUG]  [BUGGY]  super(populationLimit  -  dataLimit,  elitismRate);  [CE]  cannot  find  symbol  dataLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  dataLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  dataLimit,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	37	None	replace
1137	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRoot);  [CE]  cannot  find  symbol  elitismRoot  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRoot);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRoot);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismRoot	37	None	replace
1138	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit),  elitismRate;  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit),  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit),  elitismRate;	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  ';'  expected	37	None	replace
1139	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit),  elitismRate);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit),  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit),  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  ';'  expected	37	None	replace
1140	[BUG]  [BUGGY]  super(populationLimit,  null);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>)  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  null);	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,<null>)	26	None	replace
1141	[BUG]  [BUGGY]  super(publicitationLimit,  elitismRate);  [CE]  cannot  find  symbol  publicitationLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicitationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicitationLimit,  elitismRate);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicitationLimit	31	None	replace
1142	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismLeft);  [CE]  cannot  find  symbol  elitismLeft  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismLeft);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  elitismLeft);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  elitismLeft	29	None	replace
1143	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double)	11	None	replace
1144	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	11	None	replace
1145	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  populationLimit);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,int)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  populationLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  populationLimit);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,Double,int)	11	None	replace
1146	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate));  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,Double)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate));  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate));  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,Double)	11	None	replace
1147	[BUG]  [BUGGY]  super(populationLimit,  elitismRate);  this.populationLimit  =  PopulationLimit.EMPTY;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate);  this.populationLimit  =  PopulationLimit.EMPTY;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate);  this.populationLimit  =  PopulationLimit.EMPTY;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	11	None	replace
1148	[BUG]  [BUGGY]  super(populationLimit  -  1,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  1,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  1,  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	11	None	replace
1149	[BUG]  [BUGGY]  super(populationLimit,  elitismRate);  this.populationLimit  =  PopulationLimit.EMPTY_LIST;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate);  this.populationLimit  =  PopulationLimit.EMPTY_LIST;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate);  this.populationLimit  =  PopulationLimit.EMPTY_LIST;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	11	None	replace
1150	[BUG]  [BUGGY]  super(populationLimit);  this.populationLimit  =  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	11	None	replace
1151	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  +  1);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  +  1);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  +  1);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	11	None	replace
1152	[BUG]  [BUGGY]  super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit  +  1;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit  +  1;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit  +  1;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	11	None	replace
1153	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  populationsLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  populationsLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  populationsLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
1154	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismLast);  [CE]  cannot  find  symbol  elitismLast  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate),  elitismLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate),  elitismLast);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitismLast	45	None	replace
1155	[BUG]  [BUGGY]  super(populationLimit,  elitismLeadingLast);  [CE]  cannot  find  symbol  elitismLeadingLast  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismLeadingLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismLeadingLast);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitismLeadingLast	45	None	replace
1156	[BUG]  [BUGGY]  super(populationLimit,  elitLast);  [CE]  cannot  find  symbol  elitLast  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitLast);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitLast	45	None	replace
1157	[BUG]  [BUGGY]  super(populationLimit,  elitismLead);  [CE]  cannot  find  symbol  elitismLead  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismLead);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismLead);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitismLead	45	None	replace
1158	[BUG]  [BUGGY]  super(populationLimit,  new  double[elitismRate  -  populationLimit]);  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[elitismRate  -  populationLimit]);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[elitismRate  -  populationLimit]);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  possible  loss  of  precision	45	None	replace
1159	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  *  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	33	None	replace
1160	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	33	None	replace
1161	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  populationsLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  populationsLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	33	None	replace
1162	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  PopulationLimit.MAX_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  PopulationLimit.MAX_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  PopulationLimit.MAX_VALUE);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	33	None	replace
1163	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  demographicLimit);  [CE]  cannot  find  symbol  demographicLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  demographicLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  demographicLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	33	None	replace
1164	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  denominator);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  denominator);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  denominator	33	None	replace
1165	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  /  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  /  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  /  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	33	None	replace
1166	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  total,  elitismRate);  [CE]  cannot  find  symbol  total  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  total,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  total,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  total	33	None	replace
1167	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  this.serialRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  this.serialRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  this.serialRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	42	None	replace
1168	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  this.valueRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  this.valueRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  this.valueRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	42	None	replace
1169	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  denominator,  elitismRate);  [CE]  cannot  find  symbol  denominator  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  denominator,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  denominator,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  denominator	42	None	replace
1170	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  this.regionLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  this.regionLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  this.regionLimit,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	42	None	replace
1171	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  this.elimitRate,  elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  this.elimitRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  this.elimitRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	42	None	replace
1172	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  this.nodeLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  this.nodeLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  this.nodeLimit,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	42	None	replace
1173	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  3,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  3,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  3,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	42	None	replace
1174	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1.5,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1.5,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1.5,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	42	None	replace
1175	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1),  elitismRate);  [CE]  ';'  expected  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1),  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1),  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  ';'  expected	42	None	replace
1176	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  0.01,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  0.01,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  0.01,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	42	None	replace
1177	[BUG]  [BUGGY]  super(populationLimit  +  this.numberLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.numberLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	35	None	replace
1178	[BUG]  [BUGGY]  super(populationLimit  +  numberLimit,  this.elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  numberLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  numberLimit,  this.elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	35	None	replace
1179	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER_INDEX,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.NUMBER_INDEX,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.NUMBER_INDEX,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	35	None	replace
1180	[BUG]  [BUGGY]  super(populationLimit  +  numberLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  numberLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  numberLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  numberLimit,  elitismRate.doubleValue());	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	35	None	replace
1181	[BUG]  [BUGGY]  super(populationLimit  /  numberLimit,  elitismRate,  populationLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  numberLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  numberLimit,  elitismRate,  populationLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	9	None	replace
1182	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  dataLimit);  [CE]  cannot  find  symbol  dataLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  dataLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	9	None	replace
1183	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  size);  [CE]  cannot  find  symbol  size  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  size);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  size);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	9	None	replace
1184	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this.dataLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this.dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  this.dataLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	9	None	replace
1185	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  denominator);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  denominator);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  denominator	9	None	replace
1186	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  predicate);  [CE]  cannot  find  symbol  predicate  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  predicate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  predicate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  predicate	9	None	replace
1187	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	9	None	replace
1188	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this.populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  this.populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  this.populationLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	9	None	replace
1189	[BUG]  [BUGGY]  super(populationLimit  /  double,  elitismRate);  [CE]  '.class'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  double,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  double,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	9	None	replace
1190	[BUG]  [BUGGY]  Super(populationLimit  -  populationLimit,  elitismRate.doubleValue());  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  Super(populationLimit  -  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	Super(populationLimit  -  populationLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	39	None	replace
1191	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  new  Double(elitismRate.doubleValue()));  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  new  Double(elitismRate.doubleValue()));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  new  Double(elitismRate.doubleValue()));	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
1192	[BUG]  [BUGGY]  super(populationLimit  -  this.  populationLimit,  elitismRate.doubleValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  this.  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  this.  populationLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	39	None	replace
1193	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.longValue());  [CE]  double  cannot  be  dereferenced  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.longValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate.longValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
1194	[BUG]  [BUGGY]  super(populationLimit  -  total,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  total  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  total,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  total,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  total	39	None	replace
1195	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.intValue());  [CE]  double  cannot  be  dereferenced  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate.intValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
1196	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.floatValue());  [CE]  double  cannot  be  dereferenced  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate.floatValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate.floatValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
1197	[BUG]  [BUGGY]  super(populationLimit  *  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  numberLimit,  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	34	None	replace
1198	[BUG]  [BUGGY]  super(populationLimit  *  populationRimit,  elitismRate);  [CE]  cannot  find  symbol  populationRimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationRimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationRimit,  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	34	None	replace
1199	[BUG]  [BUGGY]  super(populationLimit  *  numberLimit,  elitismRate,  populationLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  numberLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  numberLimit,  elitismRate,  populationLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	34	None	replace
1200	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  dataLimit);  [CE]  cannot  find  symbol  dataLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  dataLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  dataLimit	34	None	replace
1201	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  size);  [CE]  cannot  find  symbol  size  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  size);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  size);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	34	None	replace
1202	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  double  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  double  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	34	None	replace
1203	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  this.populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  this.populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  this.populationLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	34	None	replace
1204	[BUG]  [BUGGY]  super(populationLimit  *  elitismRate,  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  elitismRate,  populationsLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  elitismRate,  populationsLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	34	None	replace
1205	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  this.elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  this.elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	34	None	replace
1206	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  this.dataLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  this.dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  this.dataLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	34	None	replace
1207	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  denominator);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  denominator);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  denominator	34	None	replace
1208	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  new  double[]  {  1.0  }  );	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	34	None	replace
1209	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  numberLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  numberLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	34	None	replace
1210	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  new  double[]  {  0.0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  new  double[]  {  0.0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  new  double[]  {  0.0  }  );	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double[])	34	None	replace
1211	[BUG]  [BUGGY]  super(populationLimit  /  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	28	None	replace
1212	[BUG]  [BUGGY]  super(populationLimit  /  elitism.doubleValue());  [CE]  cannot  find  symbol  elitism  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitism.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitism.doubleValue());	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitism	28	None	replace
1213	[BUG]  [BUGGY]  super(populationLimit  /  elitism,  populationLimit);  [CE]  cannot  find  symbol  elitism  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitism,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitism,  populationLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitism	28	None	replace
1214	[BUG]  [BUGGY]  super(populationLimit  /  elitismLimit,  elitismRate);  [CE]  cannot  find  symbol  elitismLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismLimit,  elitismRate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	28	None	replace
1215	[BUG]  [BUGGY]  super(populationLimit  /  elitismDate);  [CE]  cannot  find  symbol  elitismDate  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismDate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismDate);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismDate	28	None	replace
1216	[BUG]  [BUGGY]  super(populationLimit  /  elitismCount);  [CE]  cannot  find  symbol  elitismCount  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismCount);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismCount);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismCount	28	None	replace
1217	[BUG]  [BUGGY]  super(populationLimit  /  elitismSize);  [CE]  cannot  find  symbol  elitismSize  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismSize);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismSize);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismSize	28	None	replace
1218	[BUG]  [BUGGY]  super(populationLimit  /  elitismMask,  populationLimit);  [CE]  cannot  find  symbol  elitismMask  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismMask,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismMask,  populationLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	28	None	replace
1219	[BUG]  [BUGGY]  super(populationLimit  /  elitismLeft);  [CE]  cannot  find  symbol  elitismLeft  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismLeft);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismLeft);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLeft	28	None	replace
1220	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  /  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  /  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  /  populateLimit);	  super(populationLimit    /    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	28	None	replace
1221	[BUG]  [BUGGY]  super(divideDigits,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  divideDigits  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(divideDigits,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(divideDigits,  populationLimit,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  divideDigits	15	None	replace
1222	[BUG]  [BUGGY]  super(divideDimensions,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  divideDimensions  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(divideDimensions,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(divideDimensions,  populationLimit,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  divideDimensions	15	None	replace
1223	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  +  1,  elitismRate);	  super(numberLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	15	None	replace
1224	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate,  populateLimit));  [CE]  cannot  find  symbol  populateLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate,  populateLimit));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate,  populateLimit));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  populateLimit	43	None	replace
1225	[BUG]  [BUGGY]  super(populationLimit,  new  Double(Double.toString(elitismRate),  populationLimit);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(Double.toString(elitismRate),  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(Double.toString(elitismRate),  populationLimit);	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  ')'  expected	43	None	replace
1226	[BUG]  [BUGGY]  super(populationLimit,  new  Double(numberLimit,  elitismRate));  [CE]  cannot  find  symbol  numberLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(numberLimit,  elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(numberLimit,  elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  numberLimit	43	None	replace
1227	[BUG]  [BUGGY]  super(publicationLimit,  populationLimit,  new  Double(elitismRate));  [CE]  cannot  find  symbol  publicationLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  populationLimit,  new  Double(elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  populationLimit,  new  Double(elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	43	None	replace
1228	[BUG]  [BUGGY]  super(populationLimit,  new  Double(Double.toString(elitismRate));  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(Double.toString(elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(Double.toString(elitismRate));	  super(populationLimit,    new    Double(elitismRate));    	non-compiled	[CE]  ')'  expected	43	None	replace
1229	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  populationLimit,  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,int,boolean)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  populationLimit,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  populationLimit,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,int,boolean)	2	None	replace
1230	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  populateLimit,  false);  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  populateLimit,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  populateLimit,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	2	None	replace
1231	[BUG]  [BUGGY]  this(elitismLimit,  populationLimit,  elitismRate,  false);  [CE]  cannot  find  symbol  elitismLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(elitismLimit,  populationLimit,  elitismRate,  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(elitismLimit,  populationLimit,  elitismRate,  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	2	None	replace
1232	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  false,  0,  populationLimit);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,int,int)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  false,  0,  populationLimit);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  false,  0,  populationLimit);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean,int,int)	2	None	replace
1233	[BUG]  [BUGGY]  this(populationLimit,  new  double[elitismRate],  false);  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  new  double[elitismRate],  false);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  new  double[elitismRate],  false);	      this(populationLimit,    elitismRate,    false);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
1234	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.doubleValue(),  elitismLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.doubleValue(),  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.doubleValue(),  elitismLimit);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
1235	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.intValue(),  elitismLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.intValue(),  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.intValue(),  elitismLimit);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
1236	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MIN_VALUE,  elitismLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MIN_VALUE,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MIN_VALUE,  elitismLimit);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
1237	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTE,  elitismLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MINUTE,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MINUTE,  elitismLimit);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
1238	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismLimit);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	44	None	replace
1239	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.ZERO,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.ZERO,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.ZERO,  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
1240	[BUG]  [BUGGY]  super(populationLimit  +  previousPopulationLimit,  elitismLimit);  [CE]  cannot  find  symbol  previousPopulationLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  previousPopulationLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  previousPopulationLimit,  elitismLimit);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  previousPopulationLimit	44	None	replace
1241	[BUG]  [BUGGY]  super(populationLimit  +  populateLimit,  elitismLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populateLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populateLimit,  elitismLimit);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	44	None	replace
1242	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.doubleValue(),  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.doubleValue(),  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.doubleValue(),  elitismRate);	  super(populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	44	None	replace
1243	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate  +  populationLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	32	None	replace
1244	[BUG]  [BUGGY]  super(populationLimit  /  numberLimit  +  elitismRate,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  numberLimit  +  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  numberLimit  +  elitismRate,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	32	None	replace
1245	[BUG]  [BUGGY]  super(populationLimit  /  this.elitismRate,  elitismLimit  +  populationLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  this.elitismRate,  elitismLimit  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  this.elitismRate,  elitismLimit  +  populationLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	32	None	replace
1246	[BUG]  [BUGGY]  super(populationLimit  /  unitLimit  +  elitismRate,  elitismRate);  [CE]  cannot  find  symbol  unitLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  unitLimit  +  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  unitLimit  +  elitismRate,  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  unitLimit	32	None	replace
1247	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate  +  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate  +  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate  +  populationLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	32	None	replace
1248	[BUG]  [BUGGY]  super(populationLimit  /  totalLimit  +  elitismRate);  [CE]  cannot  find  symbol  totalLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  totalLimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  totalLimit  +  elitismRate);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	32	None	replace
1249	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate  +  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  /  elitismRate  +  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  /  elitismRate  +  populateLimit);	  super(populationLimit    /    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	32	None	replace
1250	[BUG]  [BUGGY]  super(populationLimit  +  previousPopulationLimit,  elitismRate);  [CE]  cannot  find  symbol  previousPopulationLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  previousPopulationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  previousPopulationLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  previousPopulationLimit	35	None	replace
1251	[BUG]  [BUGGY]  super(populationLimit  +  unitLimit,  elitismRate);  [CE]  cannot  find  symbol  unitLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  unitLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  unitLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  unitLimit	35	None	replace
1252	[BUG]  [BUGGY]  super(populationLimit  +  amountLimit,  elitismRate);  [CE]  cannot  find  symbol  amountLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  amountLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  amountLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  amountLimit	35	None	replace
1253	[BUG]  [BUGGY]  super(populationLimit  +  publicLimit,  elitismRate);  [CE]  cannot  find  symbol  publicLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  publicLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  publicLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicLimit	35	None	replace
1254	[BUG]  [BUGGY]  super(populationLimit  +  destLimit,  elitismRate);  [CE]  cannot  find  symbol  destLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  destLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  destLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  destLimit	35	None	replace
1255	[BUG]  [BUGGY]  super(populationLimit  +  initializationLimit,  elitismRate);  [CE]  cannot  find  symbol  initializationLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  initializationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  initializationLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  initializationLimit	35	None	replace
1256	[BUG]  [BUGGY]  super(populationLimit  +  int,  elitismRate);  [CE]  '.class'  expected  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  int,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  int,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	35	None	replace
1257	[BUG]  [BUGGY]  super(populationLimit  +  remainingLimit,  elitismRate);  [CE]  cannot  find  symbol  remainingLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  remainingLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  remainingLimit,  elitismRate);	  super(populationLimit    +    numberLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  remainingLimit	35	None	replace
1258	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.UNDEFINED);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.UNDEFINED);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.UNDEFINED);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	22	None	replace
1259	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR	22	None	replace
1260	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.ZERO);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  PopulationLimit.ZERO);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  PopulationLimit.ZERO);	  super(populationLimit,    double    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	22	None	replace
1261	[BUG]  [BUGGY]  super(populationLimit  -  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  this.elitismLimit);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	37	None	replace
1262	[BUG]  [BUGGY]  super(populationLimit  -  this.elitismLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  this.elitismLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  this.elitismLimit,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	37	None	replace
1263	[BUG]  [BUGGY]  super(populationLimit  -  demographicLimit,  elitismRate);  [CE]  cannot  find  symbol  demographicLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  demographicLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  demographicLimit,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	37	None	replace
1264	[BUG]  [BUGGY]  super(populationLimit  -  previousPopulationLimit,  elitismRate);  [CE]  cannot  find  symbol  previousPopulationLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  previousPopulationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  previousPopulationLimit,  elitismRate);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  previousPopulationLimit	37	None	replace
1265	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.DEFAULT_LOAD_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.DEFAULT_LOAD_FACTOR);	  super(populationLimit    -    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	37	None	replace
1266	[BUG]  [BUGGY]  super(populationLimit,  elmRate.doubleValue());  [CE]  cannot  find  symbol  elmRate  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elmRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elmRate.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elmRate	24	None	replace
1267	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRoot.doubleValue());  [CE]  cannot  find  symbol  elitismRoot  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRoot.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRoot.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitismRoot	24	None	replace
1268	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismMask.doubleValue());  [CE]  cannot  find  symbol  elitismMask  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismMask.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismMask.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitismMask	24	None	replace
1269	[BUG]  [BUGGY]  super(populationLimit,  elitismRoot.doubleValue());  [CE]  cannot  find  symbol  elitismRoot  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRoot.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRoot.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitismRoot	24	None	replace
1270	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismFactory.doubleValue());  [CE]  cannot  find  symbol  elitismFactory  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismFactory.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismFactory.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitismFactory	24	None	replace
1271	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitism.doubleValue()));  [CE]  cannot  find  symbol  elitism  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitism.doubleValue()));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitism.doubleValue()));	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitism	24	None	replace
1272	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismr.doubleValue());  [CE]  cannot  find  symbol  elitismr  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismr.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismr.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  elitismr	24	None	replace
1273	[BUG]  [BUGGY]  super(populationLimit,  totalLimit.doubleValue());  [CE]  cannot  find  symbol  totalLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  totalLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  totalLimit.doubleValue());	  super(populationLimit,    elitism.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  totalLimit	24	None	replace
1274	[BUG]  [BUGGY]  super(populationLimit,  elitismFactor,  elitismRate);  [CE]  cannot  find  symbol  elitismFactor  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismFactor,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismFactor,  elitismRate);	  super(populationLimit,    elitismFactor);    	non-compiled	[CE]  cannot  find  symbol  elitismFactor	46	None	replace
1275	[BUG]  [BUGGY]  super(populationLimit,  public  elitismFactor);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  public  elitismFactor);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  public  elitismFactor);	  super(populationLimit,    elitismFactor);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1276	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  1,  elitismRate;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  -  1,  elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  -  1,  elitismRate;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  ';'  expected	5	None	replace
1277	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue();  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.doubleValue();	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
1278	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.NEGATIVE_INFINITY;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  PopulationLimit.NEGATIVE_INFINITY;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  PopulationLimit.NEGATIVE_INFINITY;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
1279	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /(double)elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  /(double)elitismRate;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  /(double)elitismRate;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	5	None	replace
1280	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit,  elitismRate);  [CE]  ';'  expected  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit,  elitismRate);  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit,  elitismRate);	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  ';'  expected	5	None	replace
1281	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate  +  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate  +  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  *  elitismRate  +  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	33	None	replace
1282	[BUG]  [BUGGY]  super(populationLimit  -  populateLimit  +  elitismRate,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populateLimit  +  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populateLimit  +  elitismRate,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	33	None	replace
1283	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  /  elitismRate  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  /  elitismRate  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  /  elitismRate  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	33	None	replace
1284	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE  +  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit.MIN_VALUE  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit.MIN_VALUE  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	33	None	replace
1285	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  *  elitismRate  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  *  elitismRate  +  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	33	None	replace
1286	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  PopulationLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate  +  PopulationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate  +  PopulationLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	33	None	replace
1287	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  elitismRate,  populateLimit);	  super(populationLimit    -    populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	33	None	replace
1288	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()),  elitismRate);  [CE]  double  cannot  be  dereferenced  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismRate.doubleValue()),  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismRate.doubleValue()),  elitismRate);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  double  cannot  be  dereferenced	31	None	replace
1289	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  +  PopulationLimit.doubleValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  +  PopulationLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  +  PopulationLimit.doubleValue());	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	31	None	replace
1290	[BUG]  [BUGGY]  super(requiredLimit,  elitismRate);  [CE]  cannot  find  symbol  requiredLimit  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(requiredLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(requiredLimit,  elitismRate);	  super(populatedLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  requiredLimit	31	None	replace
1291	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  demographicLimit);  [CE]  cannot  find  symbol  demographicLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  demographicLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  demographicLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	12	None	replace
1292	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  populationsLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  populationsLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	12	None	replace
1293	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  this.elitismLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	12	None	replace
1294	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  dataArea);  [CE]  cannot  find  symbol  dataArea  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  dataArea);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  dataArea);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  dataArea	12	None	replace
1295	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  0,  populationLimit);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],int,int)  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  0,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  0,  populationLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double[],int,int)	12	None	replace
1296	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  this.dataLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  this.dataLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  this.dataLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	12	None	replace
1297	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  public  static  final  int  populationLimit);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  public  static  final  int  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  public  static  final  int  populationLimit);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1298	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  size());  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  size());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  size());	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1299	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  category);  [CE]  cannot  find  symbol  category  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  category);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  category);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  category	12	None	replace
1300	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  DEFAULT_LOAD_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  DEFAULT_LOAD_FACTOR);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR	12	None	replace
1301	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  scope);  [CE]  cannot  find  symbol  scope  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  scope);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  scope);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  scope	12	None	replace
1302	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  description);  [CE]  cannot  find  symbol  description  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  description);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  description);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  description	12	None	replace
1303	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  DEFAULT_SIZE);  [CE]  cannot  find  symbol  DEFAULT_SIZE  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  DEFAULT_SIZE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  DEFAULT_SIZE);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SIZE	12	None	replace
1304	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  duration);  [CE]  cannot  find  symbol  duration  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRate  },  duration);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRate  },  duration);	  super(populationLimit,    new    double[]    {    elitismRate    }    );    	non-compiled	[CE]  cannot  find  symbol  duration	12	None	replace
1305	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  this.elitismLimit);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
1306	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  new  double[]  {  elitism  }  );  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  new  double[]  {  elitism  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  new  double[]  {  elitism  }  );	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
1307	[BUG]  [BUGGY]  super(populationLimit,  totalLimit,  this.elitismRate);  [CE]  cannot  find  symbol  totalLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  totalLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  totalLimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	23	None	replace
1308	[BUG]  [BUGGY]  super(publicationLimit,  populationLimit,  this.elitismRate);  [CE]  cannot  find  symbol  publicationLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  populationLimit,  this.elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  populationLimit,  this.elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	23	None	replace
1309	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  new  int[]  {  0  }  );  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  new  int[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  new  int[]  {  0  }  );	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
1310	[BUG]  [BUGGY]  super(populationLimit,  demographicLimit,  elitismRate);  [CE]  cannot  find  symbol  demographicLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  demographicLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  demographicLimit,  elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	23	None	replace
1311	[BUG]  [BUGGY]  super(populationLimit,  this.elitismRate,  PopulationLimit.doubleValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  this.elitismRate,  PopulationLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  this.elitismRate,  PopulationLimit.doubleValue());	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	23	None	replace
1312	[BUG]  [BUGGY]  super(populationLimit,  PopulationLimit.DEFAULT_PADDING,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  PopulationLimit.DEFAULT_PADDING,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  PopulationLimit.DEFAULT_PADDING,  elitismRate);	  super(populationLimit,    this.elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	23	None	replace
1313	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	7	None	replace
1314	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT_LOAD_FACTOR,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.DEFAULT_LOAD_FACTOR,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.DEFAULT_LOAD_FACTOR,  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	7	None	replace
1315	[BUG]  [BUGGY]  super(populationLimit,  populationRimit  +  elitismRate);  [CE]  cannot  find  symbol  populationRimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationRimit  +  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationRimit  +  elitismRate);	  super(populationLimit    +    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationRimit	7	None	replace
1316	[BUG]  [BUGGY]  super(populationLimit,  elitismLatin);  [CE]  cannot  find  symbol  elitismLatin  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismLatin);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismLatin);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  elitismLatin	29	None	replace
1317	[BUG]  [BUGGY]  super(populationLimit,  new  double[elitismLeft]);  [CE]  cannot  find  symbol  elitismLeft  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[elitismLeft]);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[elitismLeft]);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  elitismLeft	29	None	replace
1318	[BUG]  [BUGGY]  super(populationLimit,  elitismStart);  [CE]  cannot  find  symbol  elitismStart  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismStart);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismStart);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  elitismStart	29	None	replace
1319	[BUG]  [BUGGY]  super(populationLimit,  public  elitismLeft);  [CE]  illegal  start  of  expression  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  public  elitismLeft);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  public  elitismLeft);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1320	[BUG]  [BUGGY]  super(populationLimit,  elitismr);  [CE]  cannot  find  symbol  elitismr  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismr);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismr);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  elitismr	29	None	replace
1321	[BUG]  [BUGGY]  super(populationLimit,  elitismCount);  [CE]  cannot  find  symbol  elitismCount  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismCount);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismCount);	  super(populationLimit,    elitismLeft);    	non-compiled	[CE]  cannot  find  symbol  elitismCount	29	None	replace
1322	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  10  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  10  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  10  +  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	42	None	replace
1323	[BUG]  [BUGGY]  super(populationLimit  -  populateLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populateLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populateLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	42	None	replace
1324	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  elitismRate,  elitismMask);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	42	None	replace
1325	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  0.01,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  0.01,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  0.01,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	42	None	replace
1326	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1  +  1,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	42	None	replace
1327	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  devLimit,  elitismLimit);  [CE]  cannot  find  symbol  devLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  devLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  devLimit,  elitismLimit);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  devLimit	42	None	replace
1328	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  0.01,  elitismLimit,  elitismRate);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  0.01,  elitismLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  0.01,  elitismLimit,  elitismRate);	  super(populationLimit    -    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	42	None	replace
1329	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  elitism  }  );  [CE]  cannot  find  symbol  elitism  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  elitism  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  new  double[]  {  elitism  }  );	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	19	None	replace
1330	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  denominator);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  denominator);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  denominator	19	None	replace
1331	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  negative);  [CE]  cannot  find  symbol  negative  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  negative);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  negative);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  negative	19	None	replace
1332	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);	  super(populationLimit,    0,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR	19	None	replace
1333	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.doubleValue();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.doubleValue();  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  PopulationLimit.doubleValue();	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1334	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1335	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  totalLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.populationLimit  =  populationLimit  +  totalLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.populationLimit  =  populationLimit  +  totalLimit;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	4	None	replace
1336	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,int[])  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  new  int[]  {  0  }  );	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,int,double,int[])	1	None	replace
1337	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.MIN_VALUE,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.MIN_VALUE,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.MIN_VALUE,  populationLimit,  elitismRate);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	16	None	replace
1338	[BUG]  [BUGGY]  super(populationLimit,  populateLimit  +  elitismRate,  populationLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit  +  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit  +  elitismRate,  populationLimit);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	16	None	replace
1339	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  +  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  +  elitismRate,  populateLimit);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	16	None	replace
1340	[BUG]  [BUGGY]  super(populationLimit,  populateLimit  +  elitismRate,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit  +  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit  +  elitismRate,  elitismRate);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	16	None	replace
1341	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  populationsLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  populationsLimit);	  super(populationLimit    +    elitismRate,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	16	None	replace
1342	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  this.elitismRate,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  this.elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  this.elitismRate,  elitismRate);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	8	None	replace
1343	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  final  double  elitismLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  final  double  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  final  double  elitismLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1344	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int[])  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  new  int[]  {  0  }  );	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int[])	8	None	replace
1345	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR	8	None	replace
1346	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate,  populationsLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate,  populationsLimit);	  super(populationLimit    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	8	None	replace
1347	[BUG]  [BUGGY]  super(populationLimit,  elitismDate,  elitismRate);  [CE]  cannot  find  symbol  elitismDate  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismDate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismDate,  elitismRate);	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  cannot  find  symbol  elitismDate	26	None	replace
1348	[BUG]  [BUGGY]  super(populationLimit,  elitismDate,  populationLimit);  [CE]  cannot  find  symbol  elitismDate  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismDate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismDate,  populationLimit);	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  cannot  find  symbol  elitismDate	26	None	replace
1349	[BUG]  [BUGGY]  super(populationLimit,  new  double[elitismLimit]);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[elitismLimit]);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[elitismLimit]);	  super(populationLimit,    elitismDate);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	26	None	replace
1350	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  totalLimit);  [CE]  cannot  find  symbol  totalLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  totalLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  totalLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	18	None	replace
1351	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  this.elitismLimit);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  this.elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  this.elitismLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	18	None	replace
1352	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  populatorLimit);  [CE]  cannot  find  symbol  populatorLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  populatorLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  populatorLimit);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populatorLimit	18	None	replace
1353	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.UNDEFINED);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.UNDEFINED);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  PopulationLimit.UNDEFINED);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	18	None	replace
1354	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.ZERO);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  PopulationLimit.ZERO);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  PopulationLimit.ZERO);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	18	None	replace
1355	[BUG]  [BUGGY]  super(populationLimit  +  1,  elitismRate,  DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  1,  elitismRate,  DEFAULT_LOAD_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  1,  elitismRate,  DEFAULT_LOAD_FACTOR);	  super(populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR	18	None	replace
1356	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate  +  populationLimit,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate  +  populationLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate  +  populationLimit,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
1357	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate  +  populateLimit,  elitismLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate  +  populateLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate  +  populateLimit,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	41	None	replace
1358	[BUG]  [BUGGY]  super(populationLimit  /  double  elitismRate  +  populationLimit,  elitismLimit);  [CE]  '.class'  expected  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  double  elitismRate  +  populationLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  double  elitismRate  +  populationLimit,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  '.class'  expected	41	None	replace
1359	[BUG]  [BUGGY]  super(populationLimit  /  previousPopulationLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  previousPopulationLimit  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  previousPopulationLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  previousPopulationLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  previousPopulationLimit	41	None	replace
1360	[BUG]  [BUGGY]  super(populationLimit  /  groupLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  groupLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  groupLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  groupLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  groupLimit	41	None	replace
1361	[BUG]  [BUGGY]  super(populationLimit  /  otherPopulationLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  otherPopulationLimit  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  otherPopulationLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  otherPopulationLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  otherPopulationLimit	41	None	replace
1362	[BUG]  [BUGGY]  super(populationLimit  /  2.0  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  2.0  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  2.0  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
1363	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate  +  populationsLimit,  elitismLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate  +  populationsLimit,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate  +  populationsLimit,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	41	None	replace
1364	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
1365	[BUG]  [BUGGY]  super(populationLimit  /  duration  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  duration  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  duration  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  duration  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  duration	41	None	replace
1366	[BUG]  [BUGGY]  super(populationLimit  /  2  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  2  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  2  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	41	None	replace
1367	[BUG]  [BUGGY]  super(populationLimit  /  categoryLimit  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  categoryLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  categoryLimit  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  categoryLimit  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  categoryLimit	41	None	replace
1368	[BUG]  [BUGGY]  super(populationLimit  /  delta  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  delta  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  delta  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  delta  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  delta	41	None	replace
1369	[BUG]  [BUGGY]  super(populationLimit  /  type  +  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  type  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  type  +  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  type  +  elitismRate,  elitismLimit);	  super(populationLimit    /    populationLimit    +    elitismRate,    elitismLimit);    	non-compiled	[CE]  cannot  find  symbol  type	41	None	replace
1370	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit.intValue());  [CE]  cannot  find  symbol  demographicLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  demographicLimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	20	None	replace
1371	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit).intValue();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit).intValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit).intValue();	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	20	None	replace
1372	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  this.elitismLimit.intValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  this.elitismLimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  this.elitismLimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	20	None	replace
1373	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  this.elitismRate.intValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  this.elitismRate.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  this.elitismRate.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	20	None	replace
1374	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  numberLimit.intValue());  [CE]  cannot  find  symbol  numberLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  numberLimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  numberLimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  numberLimit	20	None	replace
1375	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  size.intValue());  [CE]  cannot  find  symbol  size  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  size.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  size.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  size	20	None	replace
1376	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populations.intValue());  [CE]  cannot  find  symbol  populations  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populations.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populations.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populations	20	None	replace
1377	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  dataLimit.intValue());  [CE]  cannot  find  symbol  dataLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  dataLimit.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  dataLimit.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  dataLimit	20	None	replace
1378	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  category.intValue());  [CE]  cannot  find  symbol  category  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  category.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  category.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  category	20	None	replace
1379	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populator.intValue());  [CE]  cannot  find  symbol  populator  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populator.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populator.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  cannot  find  symbol  populator	20	None	replace
1380	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  public.intValue());  [CE]  illegal  start  of  expression  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  public.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  public.intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1381	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit).intValue());  [CE]  ';'  expected  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit).intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit).intValue());	  super(populationLimit,    elitismRate.intValue());    	non-compiled	[CE]  ';'  expected	20	None	replace
1382	[BUG]  [BUGGY]  super(populationLimit,  elitismRate  *  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate  *  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate  *  populationLimit,  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	34	None	replace
1383	[BUG]  [BUGGY]  super(populationLimit  *  elitismMask,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  elitismMask  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  elitismMask,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  elitismMask,  populationLimit,  elitismRate);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	34	None	replace
1384	[BUG]  [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  final  double  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  populationLimit,  elitismRate,  final  double  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  populationLimit,  elitismRate,  final  double  elitismLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1385	[BUG]  [BUGGY]  super(populationLimit,  populateLimit  *  elitismRate,  elitismLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit  *  elitismRate,  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit  *  elitismRate,  elitismLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	34	None	replace
1386	[BUG]  [BUGGY]  super(populationLimit  *  elitismRate,  PopulationLimit.MAX_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  elitismRate,  PopulationLimit.MAX_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  elitismRate,  PopulationLimit.MAX_VALUE);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	34	None	replace
1387	[BUG]  [BUGGY]  super(populationLimit  *  elitismRate,  demographicLimit);  [CE]  cannot  find  symbol  demographicLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  *  elitismRate,  demographicLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  *  elitismRate,  demographicLimit);	  super(populationLimit    *    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	34	None	replace
1388	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  final  double  elitismLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  final  double  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  final  double  elitismLimit);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1389	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  denominator);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  denominator);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  denominator	10	None	replace
1390	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR	10	None	replace
1391	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int[])  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  new  int[]  {  0  }  );	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int[])	10	None	replace
1392	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  locale);  [CE]  cannot  find  symbol  locale  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  locale);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  locale);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  locale	10	None	replace
1393	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  new  double[]  {  elitism  }  );  [CE]  cannot  find  symbol  elitism  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  new  double[]  {  elitism  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  new  double[]  {  elitism  }  );	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitism	10	None	replace
1394	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int,double)  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate,  0,  elitismRate);	  super(populationLimit    +    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int,double)	10	None	replace
1395	[BUG]  [BUGGY]  super(populationLimit,  elitismRelativeTokens);  [CE]  cannot  find  symbol  elitismRelativeTokens  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRelativeTokens);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRelativeTokens);	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  cannot  find  symbol  elitismRelativeTokens	25	None	replace
1396	[BUG]  [BUGGY]  super(populationLimit,  elitismPtr);  [CE]  cannot  find  symbol  elitismPtr  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismPtr);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismPtr);	  super(populationLimit,    elitismRoot);    	non-compiled	[CE]  cannot  find  symbol  elitismPtr	25	None	replace
1397	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  populationsLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  populationsLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	9	None	replace
1398	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  final  double  elitismLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  final  double  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  final  double  elitismLimit);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1399	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitismLast);  [CE]  cannot  find  symbol  elitismLast  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  elitismLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  elitismLast);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLast	9	None	replace
1400	[BUG]  [BUGGY]  super(populationLimit  /  unitLimit,  elitismRate);  [CE]  cannot  find  symbol  unitLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  unitLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  unitLimit,  elitismRate);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  unitLimit	9	None	replace
1401	[BUG]  [BUGGY]  super(populationLimit  /  elitismRate,  PopulationLimit.MAX_VALUE);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  elitismRate,  PopulationLimit.MAX_VALUE);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  elitismRate,  PopulationLimit.MAX_VALUE);	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	9	None	replace
1402	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int[])  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate,  new  int[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate,  new  int[]  {  0  }  );	  super(populationLimit    /    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int[])	9	None	replace
1403	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.intValue  -  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.intValue  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.intValue  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	40	None	replace
1404	[BUG]  [BUGGY]  super(populationLimit  +  PopulationLimit.intValue()  -  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  PopulationLimit.intValue()  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  PopulationLimit.intValue()  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	40	None	replace
1405	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  -  elitismRate,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double,double)  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  -  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  -  elitismRate,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double,double)	40	None	replace
1406	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  -  PopulationLimit.MIN_VALUE,  elitismRate);  [CE]  cannot  find  symbol  PopulationLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  -  PopulationLimit.MIN_VALUE,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  -  PopulationLimit.MIN_VALUE,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	40	None	replace
1407	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  -  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  -  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  -  1,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	40	None	replace
1408	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  -  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  -  numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  -  numberLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	40	None	replace
1409	[BUG]  [BUGGY]  super(populationLimit  +  size  -  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  size  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  size  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  size  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  size	40	None	replace
1410	[BUG]  [BUGGY]  super(populationLimit  +  this.elitismRate  -  PopulationLimit.MINUTE,  populationLimit,  elitismRate);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  this.elitismRate  -  PopulationLimit.MINUTE,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  this.elitismRate  -  PopulationLimit.MINUTE,  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	40	None	replace
1411	[BUG]  [BUGGY]  super(populationLimit  +  totalLimit  -  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  totalLimit  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  totalLimit  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  totalLimit  -  populationLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  totalLimit	40	None	replace
1412	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit  -  populationsLimit,  elitismRate);  [CE]  cannot  find  symbol  populationsLimit  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  +  populationLimit  -  populationsLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit  -  populationsLimit,  elitismRate);	  super(populationLimit    +    this.elitismRate    -    populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	40	None	replace
1413	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  elitismRate);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this(populationLimit  /  populationLimit,  elitismRate);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	27	None	add
1414	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  setPopulationLimit(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  setPopulationLimit(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    setPopulationLimit(populationLimit  /  populationLimit);  this.elitismRate  =  elitismRate;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1415	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populateLimit  /  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populateLimit  /  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populateLimit  /  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1416	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1417	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  -  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  -  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  -  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1418	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  /  PopulationLimit.doubleValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  /  PopulationLimit.doubleValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  /  PopulationLimit.doubleValue();	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1419	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  /  populateLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  /  populateLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  /  populateLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1420	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  setPopulationLimit(populationLimit  /  populationLimit);  super(elitismRate  /  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  setPopulationLimit(populationLimit  /  populationLimit);  super(elitismRate  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    setPopulationLimit(populationLimit  /  populationLimit);  super(elitismRate  /  populationLimit);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
1421	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  false);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  false);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this(populationLimit  /  populationLimit,  false);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	27	None	add
1422	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  getPopulationLimit(populationLimit,  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  getPopulationLimit(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  +  getPopulationLimit(populationLimit,  elitismRate);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1423	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  Math.abs(populationLimit  /  populationLimit);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  Math.abs(populationLimit  /  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  +  Math.abs(populationLimit  /  populationLimit);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1424	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  new  Double(elitismRate));  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  new  Double(elitismRate));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this(populationLimit  /  populationLimit,  new  Double(elitismRate));	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	27	None	add
1425	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populateLimit  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populateLimit  +  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populateLimit  +  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1426	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1427	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  null);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this(populationLimit  /  populationLimit,  null);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	27	None	add
1428	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  setPopulationLimit(populationLimit  /  populationLimit);  this.elitismRate  =  null;  [CE]  incompatible  types  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  setPopulationLimit(populationLimit  /  populationLimit);  this.elitismRate  =  null;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    setPopulationLimit(populationLimit  /  populationLimit);  this.elitismRate  =  null;	  	non-compiled	[CE]  incompatible  types	27	None	add
1429	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  0,  elitismRate);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this(populationLimit  /  populationLimit,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this(populationLimit  /  populationLimit,  0,  elitismRate);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	27	None	add
1430	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  0)  {  return  null;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  0)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
1431	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue()  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  /  populationLimit);  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue()  *  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    /    populationLimit);    this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue()  *  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	27	None	add
1432	[BUG]  [BUGGY]  super(populationLimit  -  PopulationLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  PopulationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  PopulationLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	39	None	replace
1433	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  _elitismRate.doubleValue());  [CE]  cannot  find  symbol  _elitismRate  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  _elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  _elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  _elitismRate	39	None	replace
1434	[BUG]  [BUGGY]  super(populationLimit  -  totalLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  totalLimit  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  totalLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  totalLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  totalLimit	39	None	replace
1435	[BUG]  [BUGGY]  super(PopulationLimit  -  populationLimit,  elitismRate.doubleValue());  [CE]  cannot  find  symbol  PopulationLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(PopulationLimit  -  populationLimit,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(PopulationLimit  -  populationLimit,  elitismRate.doubleValue());	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	39	None	replace
1436	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate).doubleValue();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate).doubleValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate).doubleValue();	  super(populationLimit    -    populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	39	None	replace
1437	[BUG]  [BUGGY]  super(publicationLimit,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  publicationLimit  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  populationLimit,  elitismRate);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	21	None	replace
1438	[BUG]  [BUGGY]  super(publicationLimit,  elitismRate,  populateLimit);  [CE]  cannot  find  symbol  publicationLimit  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(publicationLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(publicationLimit,  elitismRate,  populateLimit);	  super(publicationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	21	None	replace
1439	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {   "elitism ",  elitismRate  }  );  [CE]  incompatible  types  [FE]                                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {   "elitism ",  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {   "elitism ",  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  incompatible  types	30	None	replace
1440	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismRoot  }  );  [CE]  cannot  find  symbol  elitismRoot  [FE]                                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismRoot  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismRoot  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismRoot	30	None	replace
1441	[BUG]  [BUGGY]  super(numberLimit,  new  double[]  {  elitismRate  }  );  [CE]  cannot  find  symbol  numberLimit  [FE]                                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(numberLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(numberLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  numberLimit	30	None	replace
1442	[BUG]  [BUGGY]  super(new  double[]  {  populationLimit,  elitismRate  }  );  [CE]  no  suitable  constructor  found  for  ListPopulation(double[])  [FE]                                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(new  double[]  {  populationLimit,  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(new  double[]  {  populationLimit,  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double[])	30	None	replace
1443	[BUG]  [BUGGY]  super(populationLimit,  new  double[]  {  elitismVariable  }  );  [CE]  cannot  find  symbol  elitismVariable  [FE]                                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[]  {  elitismVariable  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[]  {  elitismVariable  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  elitismVariable	30	None	replace
1444	[BUG]  [BUGGY]  super(cityLimit,  new  double[]  {  elitismRate  }  );  [CE]  cannot  find  symbol  cityLimit  [FE]                                                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(cityLimit,  new  double[]  {  elitismRate  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(cityLimit,  new  double[]  {  elitismRate  }  );	  super(populationLimit,    new    double[]    {    elitism    }    );    	non-compiled	[CE]  cannot  find  symbol  cityLimit	30	None	replace
1445	[BUG]  [BUGGY]  super(populationLimit,  elitismMask,  elitismRate);  [CE]  cannot  find  symbol  elitismMask  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismMask,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismMask,  elitismRate);	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	17	None	replace
1446	[BUG]  [BUGGY]  super(populationLimit,  public  elitismMask);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  public  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  public  elitismMask);	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1447	[BUG]  [BUGGY]  super(populationLimit,  new  Double(elitismMask));  [CE]  cannot  find  symbol  elitismMask  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  Double(elitismMask));  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  Double(elitismMask));	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	17	None	replace
1448	[BUG]  [BUGGY]  super(populationLimit,  elitismMask.intValue());  [CE]  cannot  find  symbol  elitismMask  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismMask.intValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismMask.intValue());	  super(populationLimit,    elitismMask);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	17	None	replace
1449	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populateLimit  -  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this.populationLimit  =  populateLimit  -  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this.populationLimit  =  populateLimit  -  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	36	None	add
1450	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  populationLimit)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1451	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  final  double  elitismRate  =  0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  final  double  elitismRate  =  0;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  len  =  populationLimit;  i  <  len;  ++i)  {  final  double  elitismRate  =  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1452	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  >  elitismRate)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  >  elitismRate)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  >  elitismRate)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1453	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1454	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  PopulationLimit.MAX_VALUE)  {  super(populationLimit  -  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  PopulationLimit.MAX_VALUE)  {  super(populationLimit  -  populationLimit);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  PopulationLimit.MAX_VALUE)  {  super(populationLimit  -  populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1455	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  >  elitismRate)  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  >  elitismRate)  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  >  elitismRate)  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1456	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  populationLimit)  {  this.elitismRate  =  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  populationLimit)  {  this.elitismRate  =  elitismRate;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  final  double  elitismRate  =  getPopulationLimit();  if(elitismRate  >  populationLimit)  {  this.elitismRate  =  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1457	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  count  =  populationLimit;  i  <  count;  ++i)  {  final  double  elitismRate  =  0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  count  =  populationLimit;  i  <  count;  ++i)  {  final  double  elitismRate  =  0;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  count  =  populationLimit;  i  <  count;  ++i)  {  final  double  elitismRate  =  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1458	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  for(int  i  =  0,  size  =  populationLimit;  i  <  size;  ++i)  {  final  double  elitismRate  =  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1459	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  this(populationLimit  -  populationLimit,  elitismRate);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  this(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    this(populationLimit  -  populationLimit,  elitismRate);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	36	None	add
1460	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  elitismRate)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1461	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  0)  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  0)  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  0)  {  return  new  ElitisticListPopulation(populationLimit,  populationLimit,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1462	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit);  if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit    -    populationLimit);    if(populationLimit  >  populationLimit)  {  if(populationLimit  <=  0)  {  return  new  ElitisticListPopulation(this,  populationLimit,  elitismRate);  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
1463	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit).doubleValue();  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit).doubleValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit).doubleValue();	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	13	None	replace
1464	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit.doubleValue());  [CE]  cannot  find  symbol  demographicLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  demographicLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  demographicLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  demographicLimit	13	None	replace
1465	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationsLimit.doubleValue());  [CE]  cannot  find  symbol  populationsLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationsLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationsLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	13	None	replace
1466	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  numberLimit.doubleValue());  [CE]  cannot  find  symbol  numberLimit  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  numberLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  numberLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  numberLimit	13	None	replace
1467	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  this.elitismLimit.doubleValue());  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  this.elitismLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  this.elitismLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	13	None	replace
1468	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  size.doubleValue());  [CE]  cannot  find  symbol  size  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  size.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  size.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  size	13	None	replace
1469	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  dataLimit.doubleValue());  [CE]  cannot  find  symbol  dataLimit  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  dataLimit.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  dataLimit.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  dataLimit	13	None	replace
1470	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populations.doubleValue());  [CE]  cannot  find  symbol  populations  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populations.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populations.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  populations	13	None	replace
1471	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRate.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRate.doubleValue());  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit,  elitismRate,  elitismRate.doubleValue());	  super(populationLimit,    elitismRate.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
1472	[BUG]  [BUGGY]  super(populationLimit,  populationLimit  -  elitismRate  +  1,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populationLimit  -  elitismRate  +  1,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populationLimit  -  elitismRate  +  1,  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,double)	38	None	replace
1473	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  denominator);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  denominator);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  denominator	38	None	replace
1474	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismLast);  [CE]  cannot  find  symbol  elitismLast  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismLast);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismLast	38	None	replace
1475	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  final  double  elitismLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  final  double  elitismLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  final  double  elitismLimit);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1476	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismMask);  [CE]  cannot  find  symbol  elitismMask  [FE]                          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismMask);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismMask	38	None	replace
1477	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismRoot);  [CE]  cannot  find  symbol  elitismRoot  [FE]                            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismRoot);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismRoot);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismRoot	38	None	replace
1478	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismStandard);  [CE]  cannot  find  symbol  elitismStandard  [FE]                              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismStandard);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  elitismStandard);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  elitismStandard	38	None	replace
1479	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  1);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  1);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	38	None	replace
1480	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  final  double  elitismRate);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit  -  populationLimit  +  1,  elitismRate,  final  double  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit  +  1,  elitismRate,  final  double  elitismRate);	  super(populationLimit    -    populationLimit    +    1,    elitismRate);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1481	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationsLimit);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  populationsLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationsLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationsLimit);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	11	None	replace
1482	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  numberLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  numberLimit,  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  numberLimit	11	None	replace
1483	[BUG]  [BUGGY]  super(populationLimit,  populateLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  populateLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  populateLimit,  elitismRate);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	11	None	replace
1484	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.EMPTY_LIST;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.EMPTY_LIST;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.EMPTY_LIST;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
1485	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  BevölkerungLimit);  this.populationLimit  =  populationLimit;  [CE]  cannot  find  symbol  Bev  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  BevölkerungLimit);  this.populationLimit  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  BevölkerungLimit);  this.populationLimit  =  populationLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  Bev	11	None	replace
1486	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.UNDEFINED;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.UNDEFINED;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.UNDEFINED;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
1487	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.ZERO;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.ZERO;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  PopulationLimit.ZERO;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
1488	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  BevölkerungLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  BevölkerungLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRate,  populationLimit);  this.populationLimit  =  BevölkerungLimit;	      super(populationLimit,    elitismRate);    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double,int)	11	None	replace
1489	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  populationsLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  populationsLimit);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	6	None	replace
1490	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  numberLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  numberLimit);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	6	None	replace
1491	[BUG]  [BUGGY]  this(publicationLimit,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  publicationLimit  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(publicationLimit,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(publicationLimit,  populationLimit,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  publicationLimit	6	None	replace
1492	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,int,double)  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  0,  elitismRate);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,int,double,int,double)	6	None	replace
1493	[BUG]  [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  populationLimit,  elitismRate,  DEFAULT_LOAD_FACTOR);	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR	6	None	replace
1494	[BUG]  [BUGGY]  this(populationLimit,  elitismRate,  new  int[]  {  0  }  );  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,int[])  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this(populationLimit,  elitismRate,  new  int[]  {  0  }  );  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate,  new  int[]  {  0  }  );	  this(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,int[])	6	None	replace
1495	[BUG]  [BUGGY]  super(populationLimit,  elitismRelativeToLast);  [CE]  cannot  find  symbol  elitismRelativeToLast  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  elitismRelativeToLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  elitismRelativeToLast);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitismRelativeToLast	45	None	replace
1496	[BUG]  [BUGGY]  super(populationLimit,  new  double[elitismLast]);  [CE]  cannot  find  symbol  elitismLast  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  super(populationLimit,  new  double[elitismLast]);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit,  new  double[elitismLast]);	  super(populationLimit,    elitismLast);    	non-compiled	[CE]  cannot  find  symbol  elitismLast	45	None	replace
1497	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  this.elitismRate  =  populationLimit;  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this.elitismRate  =  populationLimit;	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
1498	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
1499	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
1500	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	3	None	replace
1501	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  >  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  final  double  elitismRate  =  populationLimit;  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
1502	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit,  e	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  ')'  expected	3	None	replace
1503	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  null;  }  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]                        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {    [BUGGY]  if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  null;  }  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	if(populationLimit  <  populationLimit)  {  super(populationLimit);  this.elitismRate  =  elitismRate;  }  else  {  return  null;  }	      super(populationLimit);    this.elitismRate    =    elitismRate;    	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	3	None	replace
