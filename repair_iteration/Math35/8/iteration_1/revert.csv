projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66}
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit+elitismRate;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66setPopulation(populationLimit,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=PopulationLimit.get(populationLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit-populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66super(populationLimit,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=PopulationLimit.doubleValue();
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit+Math.max(populationLimit,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit+elitismRate+1;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit/elitismRate;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit+elitismRate*elitismRate;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit-elitismRate;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit/populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit*populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit-1;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit+Math.min(populationLimit,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit+Math.min(elitismRate,populationLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit+Math.max(elitismRate,populationLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=PopulationLimit.doubleValue()+populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=PopulationLimit.doubleValue()-populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=PopulationLimit.doubleValue()/populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=PopulationLimit.get(populationLimit,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=PopulationLimit.get(populationLimit+1);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=PopulationLimit.get(populationLimit-populationLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66setPopulation(populationLimit,elitismRate,populationLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66setPopulation(populationLimit,populationLimit,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=elitismRate;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit+1;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66super(populationLimit,elitismRate,populationLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66super(populationLimit,populationLimit,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66super(populationLimit,elitismRate,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66super(populationLimit,elitismRate,populateLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit.doubleValue();
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66this.populationLimit=populationLimit-populationLimit+1;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66setPopulation(populationLimit,populationLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66setPopulation(populationLimit,elitismRate+1);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66setPopulation(populationLimit,elitismRate+populationLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java66super(populationLimit,populationRimit,elitismRate);
