bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.9;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	double  elitismRate  =  0.9;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
2	[BUG]  [BUGGY]  double  elitismRate  =  0.9;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  0.9;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  0.9;	      double    elitismRate    =    0.5;    	compilable	  [FE]  AssertionError  	5	4	replace
3	[BUG]  [BUGGY]  Validate.notEmpty(elitismRate);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(elitismRate);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(elitismRate);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
4	[BUG]  [BUGGY]  Validate.notNull(elitismRate,  false);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitismRate,  false);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitismRate,  false);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
5	[BUG]  [BUGGY]  Validate.notNull(registry);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(registry);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(registry);	      Validate.notNull(elitismRate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
6	[BUG]  [BUGGY]  Validate.notEmpty(population);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(population);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(population);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
7	[BUG]  [BUGGY]  Validate.notEmpty(elitism);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(elitism);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notEmpty(elitism);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	14	None	add
9	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  0.5;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  0.5;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    double  elitismRate  =  0.5;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	14	None	add
10	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	14	None	add
11	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	14	None	add
12	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	14	None	add
13	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
14	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  *  DateTimeConstants.MILLIS_PER_SECOND));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  0.01;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
16	[BUG]  [BUGGY]  private  double  elitismRate  =  0.01;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.01;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.01;	      double    elitismRate    =    0.01;    	compilable	  [FE]  AssertionError  	4	4	replace
17	[BUG]  [BUGGY]  double  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
18	[BUG]  [BUGGY]  long  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  long  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	long  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
19	[BUG]  [BUGGY]  Double  elitismRate  =  getPopulationCount();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]      [BUGGY]  Double  elitismRate  =  getPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Double  elitismRate  =  getPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
20	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyRange();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyRange();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyRange();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
21	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1));  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  +  1));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
22	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0));  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(1.0));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(1.0));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0L;	  private    double    elitismRate    =    1.0;    	non-compiled	[CE]  ';'  expected	7	None	replace
24	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	10	None	add
25	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	10	None	add
26	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	10	None	add
27	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    elitismRate  =  Math.max(0.0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
28	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	10	None	add
29	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0L;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0L;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  0.0L;	  private    double    elitismRate    =    0.0;    	non-compiled	[CE]  ';'  expected	11	None	replace
30	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
31	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
32	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  elitismRate  =  10.0;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    elitismRate  =  10.0;	  	non-compiled	[CE]  <identifier>  expected	12	None	add
33	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName());  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName());	  	non-compiled	[CE]  <identifier>  expected	12	None	add
34	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  SimpleAssertionError.class.getSimpleName();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    SimpleAssertionError.class.getSimpleName();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
35	[BUG]  [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]          AssertionError    [CONTEXT]      [BUGGY]  double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	double  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
36	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [CE]  self-reference  in  initializer  [FE]            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  1));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
37	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE));  [CE]  cannot  find  symbol  EXTENDS_PER_SIZE  [FE]              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(1.0,  Math.abs(EXTENDS_PER_SIZE));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  cannot  find  symbol  EXTENDS_PER_SIZE	20	None	replace
38	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
39	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  2.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  double  elitismRate  =  2.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
40	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
41	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  2.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  2.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    double  elitismRate  =  2.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
42	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
43	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	6	None	add
44	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  double  elitismRate  =  1.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  double  elitismRate  =  1.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    double  elitismRate  =  1.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	6	None	add
45	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	6	None	add
46	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  double  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  double  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    double  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	6	None	add
47	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  double  elitismRate  =  1.0d;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  double  elitismRate  =  1.0d;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	6	None	add
48	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  10.0));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  10.0));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  +  10.0));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
49	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
50	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
51	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	12	None	add
52	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    private  static  final  AssertionError  {  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
53	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
54	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyPopulationCount();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyPopulationCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyPopulationCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
55	[BUG]  [BUGGY]  int  elitismRate  =  getEmptyColumnCount();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getEmptyColumnCount();  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getEmptyColumnCount();	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
56	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
57	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	10	None	add
58	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  iter  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
59	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	10	None	add
60	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	10	None	add
61	[BUG]  [BUGGY]  Validate.notNull(elitism);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Validate.notNull(elitism);  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	Validate.notNull(elitism);	      Validate.notNull(population);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
62	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
63	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
64	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  this  =  new  AssertionError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
65	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	6	None	add
66	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
67	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
68	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
69	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
70	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
71	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    private  static  final  AssertionError  <  AssertionError>  error  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	14	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	add	private  double  elitismRate  =  1.0d;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
73	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0d;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0d;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  double  elitismRate  =  1.0d;	  private    double    elitismRate    =    1.0;    	compilable	  [FE]  AssertionError  	7	4	replace
74	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError  <  AssertionError>();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
75	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
76	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  AssertionError  <  AssertionError>  elitismRate  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
77	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  Validate.notNull(elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    Validate.notNull(elitismRate);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
78	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [CE]  type  AssertionError  does  not  take  parameters  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    private  static  final  AssertionError  <  AssertionError>  thisError  =  new  AssertionError();	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	8	None	add
79	[BUG]  [BUGGY]  int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]          AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
80	[BUG]  [BUGGY]  int  elitismRate  =  getPopulationCount()  -  1;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  int  elitismRate  =  getPopulationCount()  -  1;  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	int  elitismRate  =  getPopulationCount()  -  1;	      int    elitismRate    =    getPopulationCount();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
81	[BUG]  [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(1.0,  Math.abs(elitismRate  -  1));	      elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
82	[BUG]  [BUGGY]  long  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [CE]  self-reference  in  initializer  [FE]          AssertionError    [CONTEXT]      [BUGGY]  long  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	long  elitismRate  =  Math.max(1.0,  Math.abs(elitismRate));	      int    elitismRate    =    Math.max(1.0,    Math.abs(elitismRate));    	non-compiled	[CE]  self-reference  in  initializer	20	None	replace
83	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	12	None	add
84	[BUG]  [BUGGY]  private  double  elitismRate  =  10.0;  int  elitismRate  =  10.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  10.0;  int  elitismRate  =  10.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    10.0;    int  elitismRate  =  10.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	12	None	add
85	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    elitismRate  =  Math.max(0.0,  Math.abs(elitismRate));	  	non-compiled	[CE]  <identifier>  expected	10	None	add
86	[BUG]  [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.0;  elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.0;    elitismRate  =  Math.max(0.0,  Math.pow(10,  elitismRate));	  	non-compiled	[CE]  <identifier>  expected	10	None	add
87	[BUG]  [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  2.0;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    2.0;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	8	None	add
88	[BUG]  [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  -  1));  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  -  1));  [BUGGY]    private  double  elitismRate  =  0.9;  [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	elitismRate  =  Math.max(0.0,  Math.abs(elitismRate  -  1));	      elitismRate    =    Math.max(0.0,    Math.abs(elitismRate));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
89	[BUG]  [BUGGY]  private  double  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  0.5;  elitismRate  =  Math.max(0.5,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    0.5;    elitismRate  =  Math.max(0.5,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
90	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  elitismRate  =  Math.max(1.0,  elitismRate);  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    elitismRate  =  Math.max(1.0,  elitismRate);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
91	[BUG]  [BUGGY]  private  double  elitismRate  =  1.0;  double  elitismRate  =  0.0;  [CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation  [FE]      AssertionError    [CONTEXT]      [BUGGY]  private  double  elitismRate  =  1.0;  double  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private    double    elitismRate    =    1.0;    double  elitismRate  =  0.0;	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  class  ElitisticListPopulation	6	None	add
92	[BUG]  [BUGGY]  private  long  elitismRate  =  0.0;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  private  long  elitismRate  =  0.0;  [BUGGY]      [CLASS]  ElitisticListPopulation  [VARIABLES]  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	36	36	4	replace	private  long  elitismRate  =  0.0;	  private    double    elitismRate    =    0.0;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
