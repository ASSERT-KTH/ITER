bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    super(populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    super(populationLimit,  elitismRate);  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    super(populationLimit,  elitismRate);		non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	10	None	add
2	[BUG]  [BUGGY]    this(populationLimit,  elitismRate,  false);  [CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean)  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    this(populationLimit,  elitismRate,  false);  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    this(populationLimit,  elitismRate,  false);		non-compiled	[CE]  no  suitable  constructor  found  for  ElitisticListPopulation(int,double,boolean)	10	None	add
3	[BUG]  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    super(populationLimit);  this.elitismRate  =  elitismRate;  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    super(populationLimit);  this.elitismRate  =  elitismRate;		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	10	None	add
4	[BUG]  [BUGGY]    this.populationLimit  =  populationLimit  +  elitismRate;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]          AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    this.populationLimit  =  populationLimit  +  elitismRate;  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    this.populationLimit  =  populationLimit  +  elitismRate;		non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	10	None	add
5	[BUG]  [BUGGY]    this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation()  [FE]            AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    this.populationLimit  =  populationLimit;  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    this.populationLimit  =  populationLimit;		non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation()	10	None	add
6	[BUG]  [BUGGY]  this(populationLimit,  elitismRate);  [CE]  recursive  constructor  invocation  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  this(populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	this(populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  recursive  constructor  invocation	9	None	replace
7	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(double)  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  +  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(double)	9	None	replace
8	[BUG]  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  -  populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	9	None	replace
9	[BUG]  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]      AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  /  populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  /  populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	9	None	replace
10	[BUG]  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]        AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]  super(populationLimit  +  populationLimit,  elitismRate);  [BUGGY]  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	super(populationLimit  +  populationLimit,  elitismRate);	super(populationLimit);  	non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	9	None	replace
11	[BUG]  [BUGGY]    super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [CE]  no  suitable  constructor  found  for  ListPopulation(int,double)  [FE]    AssertionError  [CONTEXT]  public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  [BUGGY]    super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;  [BUGGY]  super(populationLimit);  this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	64	64	4	replace	    super(populationLimit,  elitismRate);  this.populationLimit  =  populationLimit;		non-compiled	[CE]  no  suitable  constructor  found  for  ListPopulation(int,double)	10	None	add
