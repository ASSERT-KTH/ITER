bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  -=  populationLimit  +  elitismRate;	  this.elitismRate    -=    populationLimit;    	compilable	  [FE]  AssertionError  	2	4	replace
2	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit  +  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  -=  populationLimit  +  elitismRate;	  this.elitismRate    -=    populationLimit;    	compilable	  [FE]  AssertionError  	2	4	replace
3	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit,  elitismRate;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit,  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  -=  populationLimit,  elitismRate;	  this.elitismRate    -=    populationLimit;    	non-compiled	[CE]  ';'  expected	2	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  -=  populationLimit  +  1;	  this.elitismRate    -=    populationLimit;    	compilable	  [FE]  AssertionError  	2	4	replace
5	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  -=  populationLimit  +  1;	  this.elitismRate    -=    populationLimit;    	compilable	  [FE]  AssertionError  	2	4	replace
6	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  elitismRate  =  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  elitismRate  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit;  elitismRate  =  elitismRate;	  this.elitismRate    =    populationLimit;    elitismRate    =    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	36	None	replace
7	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  populationLimit;	  this.elitismRate    =    populationLimit;    elitismRate    =    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	36	None	replace
8	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  /  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  PopulationLimit.doubleValue()  /  elitismRate;	  this.elitismRate    =    PopulationLimit.doubleValue()    *    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	79	None	replace
9	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  *  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  PopulationLimit.doubleValue()  *  populationLimit;	  this.elitismRate    =    PopulationLimit.doubleValue()    *    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	79	None	replace
10	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  *  elitismRate;  [CE]  int  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit.doubleValue()  *  elitismRate;	  this.elitismRate    =    PopulationLimit.doubleValue()    *    elitismRate;    	non-compiled	[CE]  int  cannot  be  dereferenced	79	None	replace
11	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate;  super(populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate;  super(populationLimit,  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate;  super(populationLimit,  elitismRate);	  this.elitismRate    =    populationLimit;    super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	66	None	replace
12	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate;  super(populationLimit,  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate;  super(populationLimit,  populationLimit);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate;  super(populationLimit,  populationLimit);	  this.elitismRate    =    populationLimit;    super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	66	None	replace
13	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  super(populationLimit,  elitismRate,  chromosomes);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  super(populationLimit,  elitismRate,  chromosomes);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit;  super(populationLimit,  elitismRate,  chromosomes);	  this.elitismRate    =    populationLimit;    super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	66	None	replace
14	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  /  elitismRate.doubleValue();	  this.elitismRate    =    populationLimit    +    elitismRate.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	25	None	replace
15	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  *  elitismRate.doubleValue();	  this.elitismRate    =    populationLimit    +    elitismRate.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	25	None	replace
16	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate;  this.populationLimit  =  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate;  this.populationLimit  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate;  this.populationLimit  =  populationLimit;	  this.elitismRate    =    populationLimit;    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	65	None	replace
17	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  this.populationLimit  =  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  this.populationLimit  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit;  this.populationLimit  =  elitismRate;	  this.elitismRate    =    populationLimit;    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	65	None	replace
18	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismLast,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismLast,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismLast,  elitismRate);	  super(chromosomes,    populationLimit,    elitismRate,    elitismLast);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	46	None	replace
19	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitismLast);  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitismLast);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  double  elitismRate,  elitismLast);	  super(chromosomes,    populationLimit,    elitismRate,    elitismLast);    	non-compiled	[CE]  '.class'  expected	46	None	replace
20	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismLast,  elitismLast);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismLast,  elitismLast);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitismLast,  elitismLast);	  super(chromosomes,    populationLimit,    elitismRate,    elitismLast);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	46	None	replace
21	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismMask,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismMask,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismMask,  elitismRate);	  super(chromosomes,    populationLimit,    elitismRate,    elitismMask);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	47	None	replace
22	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitismMask);  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitismMask);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  double  elitismRate,  elitismMask);	  super(chromosomes,    populationLimit,    elitismRate,    elitismMask);    	non-compiled	[CE]  '.class'  expected	47	None	replace
23	[BUG]  [BUGGY]  super(chromosomes,  elitismRate,  populationLimit,  elitismMask);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                      AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  elitismRate,  populationLimit,  elitismMask);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  elitismRate,  populationLimit,  elitismMask);	  super(chromosomes,    populationLimit,    elitismRate,    elitismMask);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	47	None	replace
24	[BUG]  [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  elitismRate);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  elitismRate);	          chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
25	[BUG]  [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  populationLimit,  elitismRate);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  populationLimit,  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  populationLimit,  elitismRate);	          chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
26	[BUG]  [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(elitismRate,  populationLimit);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(elitismRate,  populationLimit);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  new  ArrayList  <  Chromosome>(elitismRate,  populationLimit);	          chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
27	[BUG]  [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(elitismRate,  populationLimit);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(elitismRate,  populationLimit);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  new  LinkedList  <  Chromosome>(elitismRate,  populationLimit);	          chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  2);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  new  Double(populationLimit  +  2);	  this.elitismRate    =    new    Double(populationLimit    +    1);    	compilable	  [FE]  AssertionError  	50	4	replace
29	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  2);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit  +  2);	  this.elitismRate    =    new    Double(populationLimit    +    1);    	compilable	  [FE]  AssertionError  	50	4	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  /  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  new  Double(populationLimit  /  1);	  this.elitismRate    =    new    Double(populationLimit    +    1);    	compilable	  [FE]  AssertionError  	50	4	replace
31	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  /  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  /  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit  /  1);	  this.elitismRate    =    new    Double(populationLimit    +    1);    	compilable	  [FE]  AssertionError  	50	4	replace
32	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  Double(int,int,double)  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit,  populationLimit,  elitismRate);	  this.elitismRate    =    new    Double(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,int,double)	48	None	replace
33	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  elitismRate,  populationLimit);  [CE]  no  suitable  constructor  found  for  Double(int,double,int)  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  elitismRate,  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit,  elitismRate,  populationLimit);	  this.elitismRate    =    new    Double(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double,int)	48	None	replace
34	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  elitismRate,  chromosomes);  [CE]  no  suitable  constructor  found  for  Double(int,double,List<Chromosome>)  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  elitismRate,  chromosomes);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit,  elitismRate,  chromosomes);	  this.elitismRate    =    new    Double(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double,List<Chromosome>)	48	None	replace
35	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  numberLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit,  numberLimit,  elitismRate);	  this.elitismRate    =    new    Double(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	48	None	replace
36	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRoot,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRoot,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRoot,  elitismRate);	  super(chromosomes,    populationLimit,    elitismRate,    elitismRoot);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	87	None	replace
37	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitismRoot);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitismRoot);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  double  elitismRate,  elitismRoot);	  super(chromosomes,    populationLimit,    elitismRate,    elitismRoot);    	non-compiled	[CE]  '.class'  expected	87	None	replace
38	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismRoot.doubleValue());  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismRoot.doubleValue());  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitismRoot.doubleValue());	  super(chromosomes,    populationLimit,    elitismRate,    elitismRoot);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	87	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  populationLimit  *  elitismRate  +  1;	  this.elitismRate    =    elitismRate    *    populationLimit    +    1;    	compilable	  [FE]  AssertionError  	31	4	replace
40	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  *  elitismRate  +  1;	  this.elitismRate    =    elitismRate    *    populationLimit    +    1;    	compilable	  [FE]  AssertionError  	31	4	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  elitismRate  *  populationLimit  +  2;	  this.elitismRate    =    elitismRate    *    populationLimit    +    1;    	compilable	  [FE]  AssertionError  	31	4	replace
42	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  populationLimit  +  2;	  this.elitismRate    =    elitismRate    *    populationLimit    +    1;    	compilable	  [FE]  AssertionError  	31	4	replace
43	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  elitismRate);  [CE]  cannot  find  symbol  Lists  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  elitismRate);	  chromosomes    =    Lists.newArrayListWithCapacity(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	89	None	replace
44	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  populationLimit);	  chromosomes    =    Lists.newArrayListWithCapacity(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	89	None	replace
45	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                      AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  populationLimit);	  chromosomes    =    Lists.newArrayListWithCapacity(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	89	None	replace
46	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  /  1;	  this.populationLimit    =    populationLimit    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	72	None	replace
47	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  2;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  -  2;	  this.populationLimit    =    populationLimit    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	72	None	replace
48	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  +  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  +  PopulationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate    =    elitismRate    +    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	62	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	                this.elitismRate        =        new        Double(populationLimit);        this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);	  	compilable	  [FE]  AssertionError  	6	4	add
50	[BUG]  [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	                this.elitismRate        =        new        Double(populationLimit);        this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);	  	compilable	  [FE]  AssertionError  	6	4	add
51	[BUG]  [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	                this.elitismRate        =        new        Double(populationLimit);        this.elitismRate    =    new    Double(populationLimit);    elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	6	None	add
52	[BUG]  [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitemRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [CE]  cannot  find  symbol  elitemRate  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitemRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	                this.elitismRate        =        new        Double(populationLimit);        this.elitismRate    =    new    Double(populationLimit);    this.elitemRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);	  	non-compiled	[CE]  cannot  find  symbol  elitemRate	6	None	add
53	[BUG]  [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	                this.elitismRate        =        new        Double(populationLimit);        this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit;	  	non-compiled	[CE]  ')'  expected	6	None	add
54	[BUG]  [BUGGY]  super(elitismRate,  populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(elitismRate,  populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(elitismRate,  populationLimit,  elitismRate);	  super(populationLimit,    populationLimit,    elitismRate,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	85	None	replace
55	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  double  elitismRate,  elitismRate);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(populationLimit,  populationLimit,  double  elitismRate,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  populationLimit,  double  elitismRate,  elitismRate);	  super(populationLimit,    populationLimit,    elitismRate,    elitismRate);    	non-compiled	[CE]  '.class'  expected	85	None	replace
56	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  *  elitismRate;	  this.populationLimit    =    populationLimit    /    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	54	None	replace
57	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  /  elitismRate  +  1;	  this.populationLimit    =    populationLimit    /    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	54	None	replace
58	[BUG]  [BUGGY]  this.populationLimit  =  elitismRate  /  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  elitismRate  /  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  elitismRate  /  populationLimit;	  this.populationLimit    =    populationLimit    /    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	54	None	replace
59	[BUG]  [BUGGY]  super(elitismRate,  populationLimit,  elitismLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(elitismRate,  populationLimit,  elitismLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(elitismRate,  populationLimit,  elitismLimit);	  super(populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	68	None	replace
60	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  numberLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit,  numberLimit);	  this.elitismRate    =    chromosomes.get(populationLimit,    elitism);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	42	None	replace
61	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populateLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit,  populateLimit);	  this.elitismRate    =    chromosomes.get(populationLimit,    elitism);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	42	None	replace
62	[BUG]  [BUGGY]  This.elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  This.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	This.elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    This.elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  This	91	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  populationLimit  +  elitismRate  +  1;	  this.elitismRate    =    populationLimit    +    elitismRate;    	compilable	  [FE]  AssertionError  	12	4	replace
64	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  +  elitismRate  +  1;	  this.elitismRate    =    populationLimit    +    elitismRate;    	compilable	  [FE]  AssertionError  	12	4	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  populationLimit  /  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    	compilable	  [FE]  AssertionError  	12	4	replace
66	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  /  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    	compilable	  [FE]  AssertionError  	12	4	replace
67	[BUG]  [BUGGY]  elitismRate  =  elitismRate  +  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	60	None	replace
68	[BUG]  [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	          chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
69	[BUG]  [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(elitismRate);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  new  LinkedList  <  Chromosome>(elitismRate);	          chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
70	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  PopulationLimit.doubleValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  PopulationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  /  PopulationLimit.doubleValue();	  this.elitismRate    =    populationLimit    +    PopulationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	71	None	replace
71	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  PopulationLimit.doubleValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  PopulationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  *  PopulationLimit.doubleValue();	  this.elitismRate    =    populationLimit    +    PopulationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	71	None	replace
72	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  2;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  2;	  this.populationLimit    =    populationLimit    +    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	20	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	compilable	  [FE]  AssertionError  	59	4	add
74	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	compilable	  [FE]  AssertionError  	59	4	add
75	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  PopulationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	59	None	add
76	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	59	None	add
77	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	59	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    this.elitismRate  =  elitismRate  *  populationLimit  +  1;	  	compilable	  [FE]  AssertionError  	30	4	add
79	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    this.elitismRate  =  elitismRate  *  populationLimit  +  1;	  	compilable	  [FE]  AssertionError  	30	4	add
80	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  elitismRate  =  elitismRate  *  populationLimit  +  1;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  elitismRate  =  elitismRate  *  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    elitismRate  =  elitismRate  *  populationLimit  +  1;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	30	None	add
81	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  elitismRate  *  PopulationLimit  +  1;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  elitismRate  *  PopulationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    this.elitismRate  =  elitismRate  *  PopulationLimit  +  1;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	30	None	add
82	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  This.elitismRate  =  elitismRate  *  populationLimit  +  1;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  This.elitismRate  =  elitismRate  *  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    This.elitismRate  =  elitismRate  *  populationLimit  +  1;	  	non-compiled	[CE]  cannot  find  symbol  This	30	None	add
83	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  /  populationLimit;	  this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	81	None	replace
84	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  -  elitismRate;	  this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	81	None	replace
85	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate,  populationLimit;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate,  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate,  populationLimit;	  this.elitismRate    =    populationLimit;    this.elitismRate    =    populate;    	non-compiled	[CE]  ';'  expected	39	None	replace
86	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  numberLimit;  [CE]  cannot  find  symbol  numberLimit  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  +  numberLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  +  numberLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate    =    elitismRate    +    numberLimit;    	non-compiled	[CE]  cannot  find  symbol  numberLimit	63	None	replace
87	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  PopulationLimit;	  this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	37	None	replace
88	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;	  this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	37	None	replace
89	[BUG]  [BUGGY]  This.elitismRate  =  new  Double(populationLimit);  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  This.elitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	This.elitismRate  =  new  Double(populationLimit);	          this.elitismRate    =    new    Double(populationLimit);    This.elitismRate    =    new    Double(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  This	9	None	replace
90	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  This.elitismRate  =  elitismRate;  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  populationLimit;  This.elitismRate  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  populationLimit;  This.elitismRate  =  elitismRate;	  this.elitismRate    =    populationLimit;    This.elitismRate    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  This	38	None	replace
91	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	  this.elitismRate    =    populationLimit;    This.elitismRate    =    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	38	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	28	4	add
93	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	28	4	add
94	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  populationLimit  *  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    elitismRate  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	28	None	add
95	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  PopulationLimit  *  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  PopulationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  PopulationLimit  *  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	add
96	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  This.elitismRate  =  populationLimit  *  elitismRate;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  This.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    This.elitismRate  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  This	28	None	add
97	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit.doubleValue()  +  1;	  this.populationLimit    =    populationLimit.doubleValue();    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	74	None	replace
98	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit.doubleValue()  *  elitismRate;	  this.populationLimit    =    populationLimit.doubleValue();    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	74	None	replace
99	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  -  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  -  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit.doubleValue()  -  1;	  this.populationLimit    =    populationLimit.doubleValue();    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	74	None	replace
100	[BUG]  [BUGGY]  chromosomes  =  Collections.EMPTY_LIST;  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Collections.EMPTY_LIST;	          chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	92	None	replace
101	[BUG]  [BUGGY]  chromosomes  =  Collections.synchronizedList(new  LinkedList  <  Chromosome>());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Collections.synchronizedList(new  LinkedList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Collections.synchronizedList(new  LinkedList  <  Chromosome>());	          chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
102	[BUG]  [BUGGY]  elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);	          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate    =    new    Double(populationLimit);    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	7	None	replace
103	[BUG]  [BUGGY]  elitismRate  =  new  Double(populationLimit);  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  new  Double(populationLimit);	          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate    =    new    Double(populationLimit);    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	7	None	replace
104	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  PopulationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismRate    *    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	18	None	replace
105	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  PopulationLimit.doubleValue();	  this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	67	None	replace
106	[BUG]  [BUGGY]  elitismRate  =  PopulationLimit.doubleValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  PopulationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  PopulationLimit.doubleValue();	  this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	67	None	replace
107	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  populationLimit.doubleValue();	  this.elitismRate    =    elitismRate    +    populationLimit.doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	26	None	replace
108	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  +  elitismRate.doubleValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  +  elitismRate.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  PopulationLimit.doubleValue()  +  elitismRate.doubleValue();	  this.elitismRate    =    elitismRate    +    populationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	26	None	replace
109	[BUG]  [BUGGY]  elitismRate  =  elitismRate  *  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	17	None	replace
110	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  elitismRate  *  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	17	None	replace
111	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit  +  1,  elitismRate);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit  +  1,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit  +  1,  elitismRate);	  this.elitismRate    =    chromosomes.get(populationLimit    +    1);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	78	None	replace
112	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populationLimit  +  1);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populationLimit  +  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit,  populationLimit  +  1);	  this.elitismRate    =    chromosomes.get(populationLimit    +    1);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	78	None	replace
113	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit  +  2);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit  +  2);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit  +  2);	  this.elitismRate    =    chromosomes.get(populationLimit    +    1);    	non-compiled	[CE]  incompatible  types	78	None	replace
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  /  populationLimit;	  	compilable	  [FE]  AssertionError  	32	4	add
115	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  /  populationLimit;	  	compilable	  [FE]  AssertionError  	32	4	add
116	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  elitismRate  =  elitismRate  /  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    elitismRate  =  elitismRate  /  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	32	None	add
117	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  /  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	32	None	add
118	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  This.elitismRate  =  elitismRate  /  populationLimit;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  This.elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    This.elitismRate  =  elitismRate  /  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  This	32	None	add
119	[BUG]  [BUGGY]  super(elitismRate,  numberLimit,  elitismLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(elitismRate,  numberLimit,  elitismLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(elitismRate,  numberLimit,  elitismLimit);	  super(populationLimit,    numberLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	69	None	replace
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  -=  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    -=    populationLimit;    this.elitismRate  -=  populationLimit;	  	compilable	  [FE]  AssertionError  	1	4	add
121	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  -=  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  -=  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    -=    populationLimit;    this.elitismRate  -=  populationLimit;	  	compilable	  [FE]  AssertionError  	1	4	add
122	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit;  super(chromosomes,  populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  super(chromosomes,  populationLimit,  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    -=    populationLimit;    super(chromosomes,  populationLimit,  elitismRate);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	1	None	add
123	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit;  elitismRate  -=  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  elitismRate  -=  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    -=    populationLimit;    elitismRate  -=  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	1	None	add
124	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  -=  numberLimit;  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  -=  numberLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    -=    populationLimit;    this.elitismRate  -=  numberLimit;	  	non-compiled	[CE]  cannot  find  symbol  numberLimit	1	None	add
125	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  -=  PopulationLimit.doubleValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  -=  PopulationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    -=    populationLimit;    this.elitismRate  -=  PopulationLimit.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	1	None	add
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  this.elitismRate  =  new  Double(populationLimit  +  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    new    Double(populationLimit    +    1);    this.elitismRate  =  new  Double(populationLimit  +  1);	  	compilable	  [FE]  AssertionError  	49	4	add
127	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  this.elitismRate  =  new  Double(populationLimit  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  this.elitismRate  =  new  Double(populationLimit  +  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    +    1);    this.elitismRate  =  new  Double(populationLimit  +  1);	  	compilable	  [FE]  AssertionError  	49	4	add
128	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  elitismRate  =  new  Double(populationLimit  +  1);  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  elitismRate  =  new  Double(populationLimit  +  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    +    1);    elitismRate  =  new  Double(populationLimit  +  1);	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	49	None	add
129	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  This.elitismRate  =  new  Double(populationLimit  +  1);  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  This.elitismRate  =  new  Double(populationLimit  +  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    +    1);    This.elitismRate  =  new  Double(populationLimit  +  1);	  	non-compiled	[CE]  cannot  find  symbol  This	49	None	add
130	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  this.elitismRate  =  new  Double(populationLimit  +  1));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  this.elitismRate  =  new  Double(populationLimit  +  1));  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    +    1);    this.elitismRate  =  new  Double(populationLimit  +  1));	  	non-compiled	[CE]  ';'  expected	49	None	add
131	[BUG]  [BUGGY]  this.elitismRate  =  elitismLimit  *  populationLimit;  [CE]  cannot  find  symbol  elitismLimit  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismLimit  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismLimit  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismLimit    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	90	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	11	4	add
133	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	11	4	add
134	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  populationLimit  +  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    +    elitismRate;    elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	11	None	add
135	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  PopulationLimit  +  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  PopulationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  PopulationLimit  +  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	11	None	add
136	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  This.elitismRate  =  populationLimit  +  elitismRate;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  This.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    +    elitismRate;    This.elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  This	11	None	add
137	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populationLimit,  elitismRate);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit,  populationLimit,  elitismRate);	  this.elitismRate    =    chromosomes.get(populationLimit,    populationLimit);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	41	None	replace
138	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  numberLimit,  elitismRate);  [CE]  cannot  find  symbol  numberLimit  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  numberLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit,  numberLimit,  elitismRate);	  this.elitismRate    =    chromosomes.get(populationLimit,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	41	None	replace
139	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populateLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit,  populateLimit,  elitismRate);	  this.elitismRate    =    chromosomes.get(populationLimit,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	41	None	replace
140	[BUG]  [BUGGY]  chromosomes  =  Lists.newLinkedList(populationLimit,  elitismRate);  [CE]  cannot  find  symbol  Lists  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Lists.newLinkedList(populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newLinkedList(populationLimit,  elitismRate);	  chromosomes    =    Lists.newLinkedList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	70	None	replace
141	[BUG]  [BUGGY]  chromosomes  =  Lists.newLinkedList(populationLimit,  populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Lists.newLinkedList(populationLimit,  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newLinkedList(populationLimit,  populationLimit);	  chromosomes    =    Lists.newLinkedList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	70	None	replace
142	[BUG]  [BUGGY]  chromosomes  =  Lists.newLinkedList(populationLimit  +  populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Lists.newLinkedList(populationLimit  +  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newLinkedList(populationLimit  +  populationLimit);	  chromosomes    =    Lists.newLinkedList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	70	None	replace
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;	  	compilable	  [FE]  AssertionError  	34	4	add
144	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;	  	compilable	  [FE]  AssertionError  	34	4	add
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	  	compilable	  [FE]  AssertionError  	34	4	add
146	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	  	compilable	  [FE]  AssertionError  	34	4	add
147	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  this.elitismRate  =  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  PopulationLimit;  this.elitismRate  =  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	34	None	add
148	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	34	None	add
149	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	34	None	add
150	[BUG]  [BUGGY]  elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	16	None	replace
151	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  double  elitismRate  +  1;  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  double  elitismRate  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  double  elitismRate  +  1;	  this.populationLimit    =    populationLimit    +    double    elitismRate;    	non-compiled	[CE]  '.class'  expected	55	None	replace
152	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  double  elitismRate;  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  double  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  /  double  elitismRate;	  this.populationLimit    =    populationLimit    +    double    elitismRate;    	non-compiled	[CE]  '.class'  expected	55	None	replace
153	[BUG]  [BUGGY]  this.elitismRate  =  populateLimit  /  elitismRate;  [CE]  cannot  find  symbol  populateLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populateLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populateLimit  /  elitismRate;	  this.elitismRate    =    elitismRate    /    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	33	None	replace
154	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  this.populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  this.populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  this.populationLimit);	  super(chromosomes,    populationLimit,    elitismRate,    populateLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	86	None	replace
155	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  populationLimit);	  super(chromosomes,    populationLimit,    elitismRate,    populateLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	86	None	replace
156	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  *  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  *  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  *  populationLimit;	  this.populationLimit    =    PopulationLimit.doubleValue()    -    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	4	None	replace
157	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.doubleValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  PopulationLimit.doubleValue();  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  -  PopulationLimit.doubleValue();	  this.populationLimit    =    PopulationLimit.doubleValue()    -    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	4	None	replace
158	[BUG]  [BUGGY]  This.elitismRate  =  elitismRate  +  populationLimit;  [CE]  cannot  find  symbol  This  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  This.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	This.elitismRate  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    This.elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  This	80	None	replace
159	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	15	4	add
160	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	15	4	add
161	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	15	None	add
162	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  PopulationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	15	None	add
163	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	15	None	add
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    this.elitismRate  =  new  Double(populationLimit  -  populationLimit);	  	compilable	  [FE]  AssertionError  	51	4	add
165	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    this.elitismRate  =  new  Double(populationLimit  -  populationLimit);	  	compilable	  [FE]  AssertionError  	51	4	add
166	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  this.elitismRate  =  new  Double(populationLimit  -  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  this.elitismRate  =  new  Double(populationLimit  -  numberLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    this.elitismRate  =  new  Double(populationLimit  -  numberLimit);	  	non-compiled	[CE]  cannot  find  symbol  numberLimit	51	None	add
167	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  this.elitismRate  =  new  Double(populationLimit  -  PopulationLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  this.elitismRate  =  new  Double(populationLimit  -  PopulationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    this.elitismRate  =  new  Double(populationLimit  -  PopulationLimit);	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	51	None	add
168	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  elitismRate  =  new  Double(populationLimit  -  populationLimit);  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  elitismRate  =  new  Double(populationLimit  -  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    elitismRate  =  new  Double(populationLimit  -  populationLimit);	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	51	None	add
169	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  /  PopulationLimit.MAX_VALUE;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  /  PopulationLimit.MAX_VALUE;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit.doubleValue()  /  PopulationLimit.MAX_VALUE;	  this.populationLimit    =    PopulationLimit.doubleValue()    /    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	5	None	replace
170	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit  +  1;	  this.populationLimit    =    PopulationLimit.doubleValue()    /    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	5	None	replace
171	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  null,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  null,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  null,  elitismRate);	  super(chromosomes,    populationLimit,    elitismRate,    null);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	76	None	replace
172	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  false);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  false);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  false);	  super(chromosomes,    populationLimit,    elitismRate,    null);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	76	None	replace
173	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  this);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  this);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  this);	  super(chromosomes,    populationLimit,    elitismRate,    null);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	76	None	replace
174	[BUG]  [BUGGY]  chromosomes  =  Collections.newHashSet();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Collections.newHashSet();  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Collections.newHashSet();	  chromosomes    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
175	[BUG]  [BUGGY]  chromosomes  =  Collections.newArrayList(populationLimit);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Collections.newArrayList(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Collections.newArrayList(populationLimit);	  chromosomes    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
176	[BUG]  [BUGGY]  elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(PopulationLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(PopulationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(PopulationLimit);	          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate    =    new    Double(PopulationLimit);    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	83	None	replace
177	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitismRate);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  double  elitismRate,  elitismRate);	  super(chromosomes,    populationLimit,    double    elitismRate);    	non-compiled	[CE]  '.class'  expected	77	None	replace
178	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(elitismRate,  populationLimit);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(elitismRate,  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(elitismRate,  populationLimit);	  this.elitismRate    =    chromosomes.get(populationLimit,    elitismRate);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	40	None	replace
179	[BUG]  [BUGGY]  this.selitismRate  =  new  Double(populationLimit);  [CE]  cannot  find  symbol  selitismRate  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.selitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.selitismRate  =  new  Double(populationLimit);	          this.elitismRate    =    new    Double(populationLimit);    this.selitismRate    =    new    Double(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  selitismRate	64	None	replace
180	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  Double(int,double)  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit  -  populationLimit,  elitismRate);	  this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double)	52	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  /  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  new  Double(populationLimit  /  populationLimit);	  this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	52	4	replace
182	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  /  populationLimit);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  /  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit  /  populationLimit);	  this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	52	4	replace
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit  +  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  new  Double(populationLimit  -  populationLimit  +  1);	  this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	52	4	replace
184	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit  +  1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit  +  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit  -  populationLimit  +  1);	  this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    	compilable	  [FE]  AssertionError  	52	4	replace
185	[BUG]  [BUGGY]  this.populationLimit  =  elitismRate  *  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.populationLimit    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	73	None	replace
186	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitismLimit);	  super(populationLimit,    populationLimit,    elitismRate,    chromosomes);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	58	None	replace
187	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	61	None	replace
188	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitism);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate,  elitism);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  double  elitismRate,  elitism);	  super(chromosomes,    populationLimit,    elitismRate,    elitism);    	non-compiled	[CE]  '.class'  expected	45	None	replace
189	[BUG]  [BUGGY]  chromosomes  =(List  <  Chromosome>)this.populations.get(populationLimit,  elitismRate);  [CE]  cannot  find  symbol  populations  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =(List  <  Chromosome>)this.populations.get(populationLimit,  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =(List  <  Chromosome>)this.populations.get(populationLimit,  elitismRate);	          chromosomes    =(List    <    Chromosome>)this.populations.get(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populations	23	None	replace
190	[BUG]  [BUGGY]  chromosomes  =(List  <  Chromosome>)this.populations.get(elitismRate);  [CE]  cannot  find  symbol  populations  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =(List  <  Chromosome>)this.populations.get(elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =(List  <  Chromosome>)this.populations.get(elitismRate);	          chromosomes    =(List    <    Chromosome>)this.populations.get(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populations	23	None	replace
191	[BUG]  [BUGGY]  chromosomes  =(List  <  Chromosome>)this.populations.get(populationLimit  +  1);  [CE]  cannot  find  symbol  populations  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =(List  <  Chromosome>)this.populations.get(populationLimit  +  1);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =(List  <  Chromosome>)this.populations.get(populationLimit  +  1);	          chromosomes    =(List    <    Chromosome>)this.populations.get(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populations	23	None	replace
192	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit,  elitismRate);  [CE]  cannot  find  symbol  Lists  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newArrayList(populationLimit,  elitismRate);	  chromosomes    =    Lists.newArrayList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	43	None	replace
193	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit,  populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit,  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newArrayList(populationLimit,  populationLimit);	  chromosomes    =    Lists.newArrayList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	43	None	replace
194	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit  +  populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                      AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit  +  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newArrayList(populationLimit  +  populationLimit);	  chromosomes    =    Lists.newArrayList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	43	None	replace
195	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  2;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  2;	  this.populationLimit    =    populationLimit    +    elitismRate    +    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	53	None	replace
196	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  1;	  this.populationLimit    =    populationLimit    +    elitismRate    +    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	53	None	replace
197	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  numberLimit;  [CE]  cannot  find  symbol  numberLimit  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  numberLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  numberLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismRate    *    numberLimit;    	non-compiled	[CE]  cannot  find  symbol  numberLimit	19	None	replace
198	[BUG]  [BUGGY]  this.populationLimit  =  elitismRate  +  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  elitismRate  +  populationLimit  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  elitismRate  +  populationLimit  *  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	88	None	replace
199	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  numberLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  numberLimit  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  numberLimit  *  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	88	None	replace
200	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	88	None	replace
201	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  this.elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  this.elitismRate,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  this.elitismRate,  elitismRate);	  super(chromosomes,    populationLimit,    elitismRate,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	44	None	replace
202	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  +  PopulationLimit.doubleValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit.doubleValue()  +  PopulationLimit.doubleValue();  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit.doubleValue()  +  PopulationLimit.doubleValue();	  this.populationLimit    =    PopulationLimit.doubleValue()    +    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	3	None	replace
203	[BUG]  [BUGGY]  this.elitismRate  =  numberLimit  *  elitismRate;  [CE]  cannot  find  symbol  numberLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  numberLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  numberLimit  *  elitismRate;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  numberLimit	16	None	replace
204	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  -  populationLimit  +  1;	  this.populationLimit    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	81	None	replace
205	[BUG]  [BUGGY]  chromosomes  =  Collections.EMPTY_LIST.newArrayList();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Collections.EMPTY_LIST.newArrayList();  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Collections.EMPTY_LIST.newArrayList();	  chromosomes    =    Collections.newLinkedList();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
206	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  populationLimit,  elitismRate,  elitismLimit);	  super(populationLimit,    populationLimit,    elitismRate,    chromosomes);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	58	None	replace
207	[BUG]  [BUGGY]  this.elitismRate  =  populateLimit;  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populateLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populateLimit;	  this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	37	None	replace
208	[BUG]  [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.populationLimit  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.populationLimit  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	                this.elitismRate        =        new        Double(populationLimit);        this.elitismRate    =    new    Double(populationLimit);    this.populationLimit  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	6	None	add
209	[BUG]  [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.eras  =  new  Double(populationLimit);  this.eras  =  new  Double(populationLimit);  [CE]  cannot  find  symbol  eras  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.eras  =  new  Double(populationLimit);  this.eras  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	                this.elitismRate        =        new        Double(populationLimit);        this.elitismRate    =    new    Double(populationLimit);    this.eras  =  new  Double(populationLimit);  this.eras  =  new  Double(populationLimit);	  	non-compiled	[CE]  cannot  find  symbol  eras	6	None	add
210	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	  this.elitismRate    =    populationLimit;    this.elitismRate    =    populate;    	compilable	  [FE]  AssertionError  	39	4	replace
211	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	  this.elitismRate    =    populationLimit;    this.elitismRate    =    populate;    	compilable	  [FE]  AssertionError  	39	4	replace
212	[BUG]  [BUGGY]  this.populationLimit  -=  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  -=  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  -=  elitismRate;	  this.populationLimit    =    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	21	None	replace
213	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  null,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  null,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  null,  elitismRate);	  super(chromosomes,    populationLimit,    elitismRate,    null);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	76	None	replace
214	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  this.elitismRate,  null);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  this.elitismRate,  null);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  this.elitismRate,  null);	  super(chromosomes,    populationLimit,    elitismRate,    null);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	76	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	32	4	add
216	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	32	4	add
217	[BUG]  [BUGGY]  super(elitismLimit,  populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(elitismLimit,  populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(elitismLimit,  populationLimit,  elitismRate);	  super(populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	68	None	replace
218	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.populationLimit  =  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.populationLimit  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    this.populationLimit  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	28	None	add
219	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  super(populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  super(populationLimit,  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    super(populationLimit,  elitismRate);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	28	None	add
220	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit;  this.populationLimit  -=  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  this.populationLimit  -=  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    -=    populationLimit;    this.populationLimit  -=  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	1	None	add
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    -=    populationLimit;    this.elitismRate  =  populationLimit;	  	compilable	  [FE]  AssertionError  	1	4	add
222	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  =  populationLimit;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    -=    populationLimit;    this.elitismRate  =  populationLimit;	  	compilable	  [FE]  AssertionError  	1	4	add
223	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  -=  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  -=  populationLimit;  this.elitismRate  -=  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    -=    populationLimit;    this.elitismRate  -=  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	1	None	add
224	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismCount);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismCount);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitismCount);	  super(chromosomes,    populationLimit,    elitismRate,    populateLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	86	None	replace
225	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  this.populationLimit  =  new  Double(populationLimit  +  1);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  this.populationLimit  =  new  Double(populationLimit  +  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    +    1);    this.populationLimit  =  new  Double(populationLimit  +  1);	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	49	None	add
226	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(  populationLimit,  elitismRate,  elitismRate);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  chromosomes.get(  populationLimit,  elitismRate,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(  populationLimit,  elitismRate,  elitismRate);	  this.elitismRate    =    chromosomes.get(populationLimit,    elitismRate);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	40	None	replace
227	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(populationLimit,  elitismRate,  populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  elitismRate,  populationLimit,  elitismRate);	  super(populationLimit,    populationLimit,    elitismRate,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	85	None	replace
228	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(populationLimit,  numberLimit,  elitismRate,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  numberLimit,  elitismRate,  elitismRate);	  super(populationLimit,    populationLimit,    elitismRate,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	85	None	replace
229	[BUG]  [BUGGY]  this.elitismRate  =  numberLimit  *  populationLimit;  [CE]  cannot  find  symbol  numberLimit  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  numberLimit  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  numberLimit  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismLimit    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  numberLimit	90	None	replace
230	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  super(elitismRate,  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  super(elitismRate,  populationLimit);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit;  super(elitismRate,  populationLimit);	  this.elitismRate    =    populationLimit;    super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	66	None	replace
231	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.populationLimit  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.populationLimit  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.populationLimit  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	59	None	add
232	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.populationRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  cannot  find  symbol  populationRate  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.populationRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.populationRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  populationRate	59	None	add
233	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  1  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  1  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  -  1  +  1;	  this.populationLimit    =    populationLimit    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	72	None	replace
234	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  This.elitismRate  =  elitismRate;  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  This.elitismRate  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit;  This.elitismRate  =  elitismRate;	  this.elitismRate    =    populationLimit;    This.elitismRate    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  This	38	None	replace
235	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  This.elitismRate  =  new  Double(populationLimit  -  populationLimit);  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  This.elitismRate  =  new  Double(populationLimit  -  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    new    Double(populationLimit    -    populationLimit);    This.elitismRate  =  new  Double(populationLimit  -  populationLimit);	  	non-compiled	[CE]  cannot  find  symbol  This	51	None	add
236	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  this.populationLimit  =  populationLimit  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  this.populationLimit  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    +    elitismRate;    this.populationLimit  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	11	None	add
237	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  super(populationLimit  +  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  super(populationLimit  +  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    +    elitismRate;    super(populationLimit  +  elitismRate);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	11	None	add
238	[BUG]  [BUGGY]  this.elitismRate  =  elitismLimit  +  populationLimit.doubleValue();  [CE]  cannot  find  symbol  elitismLimit  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismLimit  +  populationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismLimit  +  populationLimit.doubleValue();	  this.elitismRate    =    populationLimit    +    elitismRate.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	25	None	replace
239	[BUG]  [BUGGY]  this.elitismRate  =  PopulationUtil.doubleValue();  [CE]  cannot  find  symbol  PopulationUtil  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  PopulationUtil.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  PopulationUtil.doubleValue();	  this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  PopulationUtil	67	None	replace
240	[BUG]  [BUGGY]  super(publicationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(publicationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(publicationLimit,  elitismRate);	  super(elitismRate,    populationLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	57	None	replace
241	[BUG]  [BUGGY]  super(elitismLimit,  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(elitismLimit,  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(elitismLimit,  populationLimit);	  super(elitismRate,    populationLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	57	None	replace
242	[BUG]  [BUGGY]  super(numberLimit,  populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(numberLimit,  populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(numberLimit,  populationLimit,  elitismRate);	  super(populationLimit,    numberLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	69	None	replace
243	[BUG]  [BUGGY]  this.populationRate  =  new  Double(populationLimit);  [CE]  cannot  find  symbol  populationRate  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationRate  =  new  Double(populationLimit);	          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate    =    new    Double(PopulationLimit);    	non-compiled	[CE]  cannot  find  symbol  populationRate	83	None	replace
244	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.populationRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  populationRate  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.populationRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.populationRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  populationRate	15	None	add
245	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.populationLimit  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.populationLimit  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.populationLimit  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	15	None	add
246	[BUG]  [BUGGY]  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit);	          chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
247	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  +  2;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  /  elitismRate  +  2;	  this.populationLimit    =    populationLimit    /    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	54	None	replace
248	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  this.elitismRate,  elitismLast);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  this.elitismRate,  elitismLast);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  this.elitismRate,  elitismLast);	  super(chromosomes,    populationLimit,    elitismRate,    elitismLast);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	46	None	replace
249	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  BevölkerungLimit;  [CE]  cannot  find  symbol  Bev  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  BevölkerungLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  BevölkerungLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismRate    *    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  Bev	18	None	replace
250	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  populationLimit;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	88	None	replace
251	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  /  elitismRate  *  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	88	None	replace
252	[BUG]  [BUGGY]  this.elitismRate  =  numberLimit  *  elitismRate  +  1;  [CE]  cannot  find  symbol  numberLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  numberLimit  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  numberLimit  *  elitismRate  +  1;	  this.elitismRate    =    elitismRate    *    populationLimit    +    1;    	non-compiled	[CE]  cannot  find  symbol  numberLimit	31	None	replace
253	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  this.populationLimit  =  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  elitismRate  =  populationLimit;  this.populationLimit  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	elitismRate  =  populationLimit;  this.populationLimit  =  elitismRate;	  this.elitismRate    =    populationLimit;    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	65	None	replace
254	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate  +  1);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate  +  1);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate  +  1);	  super(chromosomes,    populationLimit,    double    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	77	None	replace
255	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  1  -  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  1  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  1  -  populationLimit;	  this.populationLimit    =    populationLimit    +    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	20	None	replace
256	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  populationLimit);  [CE]  no  suitable  constructor  found  for  Double(int,int)  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit,  populationLimit);	  this.elitismRate    =    new    Double(populationLimit,    elitismRate);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,int)	48	None	replace
257	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  this.populationLimit  =  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  this.populationLimit  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.populationLimit  =  populationLimit;  this.populationLimit  =  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	34	None	add
258	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  this.elitismRate  =  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.populationLimit  =  populationLimit;  this.elitismRate  =  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	34	None	add
259	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  this.populationRate  =  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  this.populationRate  =  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.populationLimit  =  populationLimit;  this.populationRate  =  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	34	None	add
260	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.populationLimit  =  elitismRate  *  populationLimit  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.populationLimit  =  elitismRate  *  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    this.populationLimit  =  elitismRate  *  populationLimit  +  1;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	30	None	add
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  populationLimit  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    this.elitismRate  =  populationLimit  *  elitismRate  +  1;	  	compilable	  [FE]  AssertionError  	30	4	add
262	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  populationLimit  *  elitismRate  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  populationLimit  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    this.elitismRate  =  populationLimit  *  elitismRate  +  1;	  	compilable	  [FE]  AssertionError  	30	4	add
263	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.populationLimit  =  populationLimit  *  elitismRate  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.populationLimit  =  populationLimit  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    this.populationLimit  =  populationLimit  *  elitismRate  +  1;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	30	None	add
264	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.populationLimit  =  elitismRate  *  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.populationLimit  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  *  elitismRate;  this.populationLimit  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.populationLimit    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	73	None	replace
265	[BUG]  [BUGGY]  super(elitismRate,  elitismLimit,  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(elitismRate,  elitismLimit,  populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(elitismRate,  elitismLimit,  populationLimit);	  super(populationLimit,    elitismRate,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	84	None	replace
266	[BUG]  [BUGGY]  this.elitismRate  =  numberLimit  *  elitismRate;  elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  numberLimit  *  elitismRate;  elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  numberLimit  *  elitismRate;  elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  numberLimit	17	None	replace
267	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  elitismRate  /  populationLimit  +  1;	  this.elitismRate    =    elitismRate    /    populationLimit;    	compilable	  [FE]  AssertionError  	33	4	replace
268	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  /  populationLimit  +  1;	  this.elitismRate    =    elitismRate    /    populationLimit;    	compilable	  [FE]  AssertionError  	33	4	replace
269	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate,  populationLimit.doubleValue();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate,  populationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  +  elitismRate,  populationLimit.doubleValue();	  this.elitismRate    =    populationLimit    +    elitismRate.doubleValue();    	non-compiled	[CE]  ';'  expected	25	None	replace
270	[BUG]  [BUGGY]  super(chromosomes,  populateLimit,  elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populateLimit,  elitismRate,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populateLimit,  elitismRate,  elitismRate);	  super(chromosomes,    populationLimit,    elitismRate,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	44	None	replace
271	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRoot);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRoot);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  populationLimit,  elitismRate,  elitismRoot);	  super(populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	56	None	replace
272	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  PopulationLimit.doubleValue();	  this.populationLimit    =    PopulationLimit.doubleValue()    +    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	3	None	replace
273	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit,  elitismRate.doubleValue();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit,  elitismRate.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  +  populationLimit,  elitismRate.doubleValue();	  this.elitismRate    =    elitismRate    +    populationLimit.doubleValue();    	non-compiled	[CE]  ';'  expected	26	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  if(populationLimit  <  populationLimit)  {  this.elitismRate  =  new  Double(populationLimit);  }  else  {  this.elitismRate  =  new  Double(populationLimit);  }  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	if(populationLimit  <  populationLimit)  {  this.elitismRate  =  new  Double(populationLimit);  }  else  {  this.elitismRate  =  new  Double(populationLimit);  }	          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate    =    new    Double(populationLimit);    	compilable	  [FE]  AssertionError  	7	4	replace
275	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  this.elitismRate  =  new  Double(populationLimit);  }  else  {  this.elitismRate  =  new  Double(populationLimit);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  if(populationLimit  <  populationLimit)  {  this.elitismRate  =  new  Double(populationLimit);  }  else  {  this.elitismRate  =  new  Double(populationLimit);  }  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	if(populationLimit  <  populationLimit)  {  this.elitismRate  =  new  Double(populationLimit);  }  else  {  this.elitismRate  =  new  Double(populationLimit);  }	          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate    =    new    Double(populationLimit);    	compilable	  [FE]  AssertionError  	7	4	replace
276	[BUG]  [BUGGY]  if(populationLimit  <  populationLimit)  {  this.elitismRate  =  new  Double(populationLimit);  }  else  {  final  double  elitismRate  =  new  Double(populationLimit);  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(List<Chromosome>,int,double)  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  if(populationLimit  <  populationLimit)  {  this.elitismRate  =  new  Double(populationLimit);  }  else  {  final  double  elitismRate  =  new  Double(populationLimit);  }  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	if(populationLimit  <  populationLimit)  {  this.elitismRate  =  new  Double(populationLimit);  }  else  {  final  double  elitismRate  =  new  Double(populationLimit);  }	          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate    =    new    Double(populationLimit);    	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(List<Chromosome>,int,double)	7	None	replace
277	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismLast,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismLast,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitismLast,  elitismRate);	  super(chromosomes,    populationLimit,    elitismRate,    elitismLast);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	46	None	replace
278	[BUG]  [BUGGY]  chromosomes  =  Collections.newLinkedList(populationLimit);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Collections.newLinkedList(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Collections.newLinkedList(populationLimit);	  chromosomes    =    Collections.newLinkedList();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
279	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  populationsLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  populationsLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  populationsLimit);	  super(chromosomes,    populationLimit,    elitismRate,    populateLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	86	None	replace
280	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitemRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  cannot  find  symbol  elitemRate  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitemRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitemRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  elitemRate	59	None	add
281	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  elitismLimit  *  populationLimit  +  1;  [CE]  cannot  find  symbol  elitismLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  this.elitismRate  =  elitismLimit  *  populationLimit  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit    +    1;    this.elitismRate  =  elitismLimit  *  populationLimit  +  1;	  	non-compiled	[CE]  cannot  find  symbol  elitismLimit	30	None	add
282	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitemRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  elitemRate  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitemRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitemRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  elitemRate	15	None	add
283	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  PopulationLimit.floatValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  PopulationLimit.floatValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  PopulationLimit.floatValue();	  this.elitismRate    =    elitismRate    *    PopulationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	27	None	replace
284	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  1  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  1  +  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  -  1  +  elitismRate;	  this.populationLimit    =    populationLimit    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	72	None	replace
285	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  elitismRate);	  	non-compiled	[CE]  ';'  expected	28	None	add
286	[BUG]  [BUGGY]  super(chromosomes,  populateLimit,  elitismRate,  elitismMask);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populateLimit,  elitismRate,  elitismMask);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populateLimit,  elitismRate,  elitismMask);	  super(chromosomes,    populationLimit,    elitismRate,    elitismMask);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	47	None	replace
287	[BUG]  [BUGGY]  super(chromosomes,  numberLimit,  elitismRate,  elitismMask);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  numberLimit,  elitismRate,  elitismMask);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  numberLimit,  elitismRate,  elitismMask);	  super(chromosomes,    populationLimit,    elitismRate,    elitismMask);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	47	None	replace
288	[BUG]  [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismLimit  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [CE]  cannot  find  symbol  elitismLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]          this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);  this.elitismLimit  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	                this.elitismRate        =        new        Double(populationLimit);        this.elitismRate    =    new    Double(populationLimit);    this.elitismLimit  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);	  	non-compiled	[CE]  cannot  find  symbol  elitismLimit	6	None	add
289	[BUG]  [BUGGY]  super(numberLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(numberLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(numberLimit,  elitismRate);	  super(elitismRate,    populationLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	57	None	replace
290	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  elitismRate  +  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	61	None	replace
291	[BUG]  [BUGGY]  this.elitismRate  =  populateLimit;  this.elitismRate  =  PopulationLimit.doubleValue();  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populateLimit;  this.elitismRate  =  PopulationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populateLimit;  this.elitismRate  =  PopulationLimit.doubleValue();	  this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  populateLimit	67	None	replace
292	[BUG]  [BUGGY]  this.elitismRate  =  populateLimit;  elitismRate  =  elitismRate;  [CE]  cannot  find  symbol  populateLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  populateLimit;  elitismRate  =  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populateLimit;  elitismRate  =  elitismRate;	  this.elitismRate    =    populationLimit;    elitismRate    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	36	None	replace
293	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  double  elitismRate);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  double  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  double  elitismRate);	  super(chromosomes,    populationLimit,    double    elitismRate);    	non-compiled	[CE]  '.class'  expected	77	None	replace
294	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.populationLimit  =  elitismRate  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.populationLimit  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  populationLimit;  this.populationLimit  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    this.populationLimit    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	75	None	replace
295	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  populateLimit,  elitismRate);  [CE]  cannot  find  symbol  populateLimit  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  populateLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit,  populateLimit,  elitismRate);	  this.elitismRate    =    new    Double(populationLimit,    elitismRate);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	48	None	replace
296	[BUG]  [BUGGY]  super(numberLimit,  populationLimit,  elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  super(numberLimit,  populationLimit,  elitismRate,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(numberLimit,  populationLimit,  elitismRate,  elitismRate);	  super(populationLimit,    numberLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	69	None	replace
297	[BUG]  [BUGGY]  chromosomes  =  Collections.unmodifiableList(chromosomes);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);      [BUGGY]  chromosomes  =  Collections.unmodifiableList(chromosomes);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Collections.unmodifiableList(chromosomes);	          chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	92	None	replace
