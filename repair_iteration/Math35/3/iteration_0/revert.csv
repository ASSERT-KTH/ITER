projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.elitismRate=elitismRate;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.elitismRate=elitismRate+populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.elitismRate=elitismRate+PopulationLimit.doubleValue();
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.elitismRate=elitismRate*populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51super(chromosomes,populationLimit,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.elitismRate=chromosomes.get(populationLimit);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51chromosomes=Lists.newLinkedList();
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51chromosomes=Lists.newArrayList();
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51super(populationLimit,elitismRate);
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.populationLimit=populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.elitismRate=populationLimit;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.populationLimit=populationLimit+elitismRate;
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.populationLimit=PopulationLimit.doubleValue();
projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java51this.elitismRate=newDouble(populationLimit);
