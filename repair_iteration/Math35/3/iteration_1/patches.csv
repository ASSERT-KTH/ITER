bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  -=  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  -=  populationLimit;	  this.elitismRate    =    populationLimit;    	compilable	  [FE]  AssertionError  	15	4	replace
2	[BUG]  [BUGGY]  this.elitismRate  -=  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  -=  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  -=  populationLimit;	  this.elitismRate    =    populationLimit;    	compilable	  [FE]  AssertionError  	15	4	replace
3	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  +  populationLimit;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	17	None	replace
4	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  -  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  -  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  -  populationLimit;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	17	None	replace
5	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit;	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	17	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	        this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);	  	compilable	  [FE]  AssertionError  	18	4	add
7	[BUG]  [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(populationLimit);	  	compilable	  [FE]  AssertionError  	18	4	add
8	[BUG]  [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  elitismRate  =  new  Double(populationLimit);  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  elitismRate  =  new  Double(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        this.elitismRate    =    new    Double(populationLimit);    elitismRate  =  new  Double(populationLimit);	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	18	None	add
9	[BUG]  [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  This.elitismRate  =  new  Double(populationLimit);  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  This.elitismRate  =  new  Double(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        this.elitismRate    =    new    Double(populationLimit);    This.elitismRate  =  new  Double(populationLimit);	  	non-compiled	[CE]  cannot  find  symbol  This	18	None	add
10	[BUG]  [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(peerLimit);  [CE]  cannot  find  symbol  peerLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(peerLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(peerLimit);	  	non-compiled	[CE]  cannot  find  symbol  peerLimit	18	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  populationLimit  +  elitismRate;	  this.elitismRate    =    elitismRate    +    populationLimit;    	compilable	  [FE]  AssertionError  	2	4	replace
12	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  +  elitismRate;	  this.elitismRate    =    elitismRate    +    populationLimit;    	compilable	  [FE]  AssertionError  	2	4	replace
13	[BUG]  [BUGGY]  chromosomes  =  Collections.newLinkedList();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  chromosomes  =  Collections.newLinkedList();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Collections.newLinkedList();	      chromosomes    =    Lists.newLinkedList();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
14	[BUG]  [BUGGY]  chromosomes  =  Collections.newArrayList();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  chromosomes  =  Collections.newArrayList();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Collections.newArrayList();	      chromosomes    =    Lists.newLinkedList();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	4	4	add
16	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	4	4	add
17	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  *  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	4	None	add
18	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	4	None	add
19	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  numberLimit;  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  numberLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  numberLimit;	  	non-compiled	[CE]  cannot  find  symbol  numberLimit	4	None	add
20	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  populationLimit  +  1;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  1;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	13	None	replace
21	[BUG]  [BUGGY]  this.populationLimit  =  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  elitismRate;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	13	None	replace
22	[BUG]  [BUGGY]      chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  elitismRate);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  elitismRate);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
23	[BUG]  [BUGGY]      chromosomes  =(List  <  Chromosome>)this.populations.get(populationLimit);  [CE]  cannot  find  symbol  populations  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      chromosomes  =(List  <  Chromosome>)this.populations.get(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        chromosomes  =(List  <  Chromosome>)this.populations.get(populationLimit);	  	non-compiled	[CE]  cannot  find  symbol  populations	6	None	add
24	[BUG]  [BUGGY]      chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
25	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  +  elitismRate.doubleValue();	  this.elitismRate    =    elitismRate    +    PopulationLimit.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	replace
26	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  +  populationLimit.doubleValue();	  this.elitismRate    =    elitismRate    +    PopulationLimit.doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
27	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  PopulationLimit.doubleValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  PopulationLimit.doubleValue();	  this.elitismRate    =    elitismRate    +    PopulationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	3	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  populationLimit  *  elitismRate;	  this.elitismRate    =    elitismRate    *    populationLimit;    	compilable	  [FE]  AssertionError  	5	4	replace
29	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  *  elitismRate;	  this.elitismRate    =    elitismRate    *    populationLimit;    	compilable	  [FE]  AssertionError  	5	4	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  elitismRate  *  populationLimit  +  1;	  this.elitismRate    =    elitismRate    *    populationLimit;    	compilable	  [FE]  AssertionError  	5	4	replace
31	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit  +  1;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  *  populationLimit  +  1;	  this.elitismRate    =    elitismRate    *    populationLimit;    	compilable	  [FE]  AssertionError  	5	4	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  elitismRate  /  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    	compilable	  [FE]  AssertionError  	5	4	replace
33	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  elitismRate  /  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    	compilable	  [FE]  AssertionError  	5	4	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;	  	compilable	  [FE]  AssertionError  	14	4	add
35	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;	  	compilable	  [FE]  AssertionError  	14	4	add
36	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  elitismRate  =  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit;  elitismRate  =  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit;    elitismRate  =  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	14	None	add
37	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit;    this.elitismRate  =  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	14	None	add
38	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  This.elitismRate  =  populationLimit;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit;  This.elitismRate  =  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit;    This.elitismRate  =  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  This	14	None	add
39	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  populate;  [CE]  cannot  find  symbol  populate  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  populate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit;    this.elitismRate  =  populate;	  	non-compiled	[CE]  cannot  find  symbol  populate	14	None	add
40	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  elitismRate);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit,  elitismRate);	      this.elitismRate    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	9	None	replace
41	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populationLimit);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit,  populationLimit);	      this.elitismRate    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	9	None	replace
42	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  elitism);  [CE]  cannot  find  symbol  elitism  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit,  elitism);	      this.elitismRate    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  elitism	9	None	replace
43	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newArrayList(populationLimit);	      chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	11	None	replace
44	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitismRate);	      super(chromosomes,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None	replace
45	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitism);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitism);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitism);	      super(chromosomes,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None	replace
46	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismLast);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismLast);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitismLast);	      super(chromosomes,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None	replace
47	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismMask);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismMask);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitismMask);	      super(chromosomes,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None	replace
48	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  elitismRate);  [CE]  no  suitable  constructor  found  for  Double(int,double)  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  new  Double(populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit,  elitismRate);	      this.elitismRate    =    new    Double(populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(int,double)	19	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  new  Double(populationLimit  +  1);	      this.elitismRate    =    new    Double(populationLimit);    	compilable	  [FE]  AssertionError  	19	4	replace
50	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  new  Double(populationLimit  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit  +  1);	      this.elitismRate    =    new    Double(populationLimit);    	compilable	  [FE]  AssertionError  	19	4	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate  =  new  Double(populationLimit  -  populationLimit);	      this.elitismRate    =    new    Double(populationLimit);    	compilable	  [FE]  AssertionError  	19	4	replace
52	[BUG]  [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  new  Double(populationLimit  -  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  new  Double(populationLimit  -  populationLimit);	      this.elitismRate    =    new    Double(populationLimit);    	compilable	  [FE]  AssertionError  	19	4	replace
53	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  +  1;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  +  1;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	16	None	replace
54	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  /  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	16	None	replace
55	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  double  elitismRate;  [CE]  '.class'  expected  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  populationLimit  +  double  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  double  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  '.class'  expected	16	None	replace
56	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  populationLimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	12	None	replace
57	[BUG]  [BUGGY]  super(elitismRate,  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(elitismRate,  populationLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	12	None	replace
58	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  chromosomes);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  chromosomes);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  populationLimit,  elitismRate,  chromosomes);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	12	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	add	this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;	  	compilable	  [FE]  AssertionError  	1	4	add
60	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;	  	compilable	  [FE]  AssertionError  	1	4	add
61	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	1	None	add
62	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	1	None	add
63	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  numberLimit;  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  numberLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  numberLimit;	  	non-compiled	[CE]  cannot  find  symbol  numberLimit	1	None	add
64	[BUG]  [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  this.selitismRate  =  new  Double(populationLimit);  [CE]  cannot  find  symbol  selitismRate  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  this.selitismRate  =  new  Double(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        this.elitismRate    =    new    Double(populationLimit);    this.selitismRate  =  new  Double(populationLimit);	  	non-compiled	[CE]  cannot  find  symbol  selitismRate	18	None	add
65	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit;    this.populationLimit  =  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	14	None	add
66	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  super(populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit;  super(populationLimit,  elitismRate);  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit;    super(populationLimit,  elitismRate);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	14	None	add
67	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit.doubleValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    populationLimit;    this.elitismRate  =  PopulationLimit.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	14	None	add
68	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(populationLimit,  elitismRate,  populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  elitismRate,  populationLimit);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	12	None	replace
69	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(populationLimit,  numberLimit,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  numberLimit,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	12	None	replace
70	[BUG]  [BUGGY]  chromosomes  =  Lists.newLinkedList(populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]            AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  chromosomes  =  Lists.newLinkedList(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newLinkedList(populationLimit);	      chromosomes    =    Lists.newLinkedList();    	non-compiled	[CE]  cannot  find  symbol  Lists	10	None	replace
71	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  PopulationLimit.doubleValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  populationLimit  +  PopulationLimit.doubleValue();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  populationLimit  +  PopulationLimit.doubleValue();	  this.elitismRate    =    elitismRate    +    PopulationLimit.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	3	None	replace
72	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  populationLimit  -  1;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  -  1;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	13	None	replace
73	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.populationLimit  =  elitismRate  *  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.populationLimit  =  elitismRate  *  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit;    this.populationLimit  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	4	None	add
74	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit.doubleValue();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  populationLimit.doubleValue();  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit.doubleValue();	      this.populationLimit    =    PopulationLimit.doubleValue();    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	17	None	replace
75	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  this.populationLimit  =  elitismRate  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  this.populationLimit  =  elitismRate  +  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    +    populationLimit;    this.populationLimit  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	1	None	add
76	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  null);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  null);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  null);	      super(chromosomes,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None	replace
77	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate);  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(chromosomes,  populationLimit,  double  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  double  elitismRate);	      super(chromosomes,    populationLimit,    elitismRate);    	non-compiled	[CE]  '.class'  expected	8	None	replace
78	[BUG]  [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit  +  1);  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  chromosomes.get(populationLimit  +  1);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  chromosomes.get(populationLimit  +  1);	      this.elitismRate    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  incompatible  types	9	None	replace
79	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  *  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  *  elitismRate;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate  =  PopulationLimit.doubleValue()  *  elitismRate;	  this.elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	5	None	replace
80	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  This.elitismRate  =  elitismRate  +  populationLimit;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  This.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    +    populationLimit;    This.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  This	1	None	add
81	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  -  populationLimit;	      this.populationLimit    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	13	None	replace
82	[BUG]  [BUGGY]  this.populationLimit  =  elitismRate  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  elitismRate  +  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  elitismRate  +  populationLimit;	      	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	7	None	replace
83	[BUG]  [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(PopulationLimit);  [CE]  cannot  find  symbol  PopulationLimit  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      this.elitismRate  =  new  Double(populationLimit);  this.elitismRate  =  new  Double(PopulationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        this.elitismRate    =    new    Double(populationLimit);    this.elitismRate  =  new  Double(PopulationLimit);	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	18	None	add
84	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(populationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  elitismRate,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	12	None	replace
85	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRate);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(populationLimit,  populationLimit,  elitismRate,  elitismRate);	      super(populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	12	None	replace
86	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  populateLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  populateLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  populateLimit);	      super(chromosomes,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None	replace
87	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismRoot);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  super(chromosomes,  populationLimit,  elitismRate,  elitismRoot);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	super(chromosomes,  populationLimit,  elitismRate,  elitismRoot);	      super(chromosomes,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	8	None	replace
88	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;	      this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	16	None	replace
89	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]              AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit);  [BUGGY]    this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	chromosomes  =  Lists.newArrayListWithCapacity(populationLimit);	      chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	11	None	replace
90	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismLimit  *  populationLimit;  [CE]  cannot  find  symbol  elitismLimit  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismLimit  *  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismLimit  *  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  elitismLimit	4	None	add
91	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  This.elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  This.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	this.elitismRate    =    elitismRate    *    populationLimit;    This.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  This	4	None	add
92	[BUG]  [BUGGY]      chromosomes  =  Collections.emptyList();  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]    public  ElitisticListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit,  final  double  elitismRate)  {  super(chromosomes,  populationLimit);    [BUGGY]      chromosomes  =  Collections.emptyList();  [BUGGY]    }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int,double)  Chromosome>  chromosomes  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  List  chromosomes  boolean  double  elitismRate  int  populationLimit  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.7071067811865475	51	51	4	replace	        chromosomes  =  Collections.emptyList();	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	6	None	add
