bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  populationLimit,  elitismRate,  elitismRate);	  super(populationLimit,    elitismRate,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	23	None	replace
2	[BUG]  [BUGGY]  super(populationLimit,  populationRimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  populationRimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  populationRimit,  elitismRate);	  super(populationLimit,    elitismRate,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	23	None	replace
3	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitism);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitism);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  populationLimit,  elitismRate,  elitism);	  super(populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	replace
4	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  false);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  false);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  populationLimit,  elitismRate,  false);	  super(populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	replace
5	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  *  elitismRate;	  this.populationLimit    =    populationLimit    /    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	2	None	replace
6	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  /  elitismRate  *  elitismRate;	  this.populationLimit    =    populationLimit    /    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	2	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	55	4	add
8	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	55	4	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	55	4	add
10	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	55	4	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	55	4	add
12	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	55	4	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	55	4	add
14	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	55	4	add
15	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  elitismRate  +  PopulationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  elitismRate  +  PopulationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  elitismRate  +  PopulationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	55	None	add
16	[BUG]  [BUGGY]  super(populationLimit,  populateLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  populateLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  populateLimit,  elitismRate);	  super(populationLimit,    elitismRate,    populateLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	25	None	replace
17	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  +  elitismRate;	  this.elitismRate    =    elitismRate    +    populationLimit;    this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	54	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  /  populationLimit;	  	compilable	  [FE]  AssertionError  	66	4	add
19	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  /  populationLimit;	  	compilable	  [FE]  AssertionError  	66	4	add
20	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  elitismRate  =  elitismRate  /  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    elitismRate  =  elitismRate  /  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	66	None	add
21	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  This.elitismRate  =  elitismRate  /  populationLimit;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  This.elitismRate  =  elitismRate  /  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    This.elitismRate  =  elitismRate  /  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  This	66	None	add
22	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  /  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	66	None	add
23	[BUG]  [BUGGY]  elitismRate  =  elitismRate  +  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	elitismRate  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	47	None	replace
24	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  elitismRate  +  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	47	None	replace
25	[BUG]  [BUGGY]  elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	27	None	replace
26	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  elitismRate  *  PopulationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	27	None	replace
27	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate,  elitismRate);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate,  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate,  elitismRate);	  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate    =    populationLimit    +    elitismRate);    	non-compiled	[CE]  ';'  expected	16	None	replace
28	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate);	  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate    =    populationLimit    +    elitismRate);    	non-compiled	[CE]  ';'  expected	16	None	replace
29	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  1;	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	34	None	replace
30	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getSummaryLimit()  -  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  getSummaryLimit()  -  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  getSummaryLimit()  -  1;	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	34	None	replace
31	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  -  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  -  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  -  1;	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	34	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.elitismRate  =  populationLimit  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    +    1;    this.elitismRate  =  populationLimit  +  1;	  	compilable	  [FE]  AssertionError  	57	4	add
33	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.elitismRate  =  populationLimit  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.elitismRate  =  populationLimit  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    1;    this.elitismRate  =  populationLimit  +  1;	  	compilable	  [FE]  AssertionError  	57	4	add
34	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  1;  elitismRate  =  populationLimit  +  1;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  1;  elitismRate  =  populationLimit  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    1;    elitismRate  =  populationLimit  +  1;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	57	None	add
35	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.elitismRate  =  PopulationLimit  +  1;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.elitismRate  =  PopulationLimit  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    1;    this.elitismRate  =  PopulationLimit  +  1;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	57	None	add
36	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  1;  This.elitismRate  =  populationLimit  +  1;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  1;  This.elitismRate  =  populationLimit  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    1;    This.elitismRate  =  populationLimit  +  1;	  	non-compiled	[CE]  cannot  find  symbol  This	57	None	add
37	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  /  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit.doubleValue()  /  elitismRate;	  this.elitismRate    =    PopulationLimit.doubleValue()    *    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	11	None	replace
38	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  *  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit.doubleValue()  *  populationLimit;	  this.elitismRate    =    PopulationLimit.doubleValue()    *    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	11	None	replace
39	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  *  elitismRate;  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit.doubleValue()  *  elitismRate;	  this.elitismRate    =    PopulationLimit.doubleValue()    *    elitismRate;    	non-compiled	[CE]  int  cannot  be  dereferenced	11	None	replace
40	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  +  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit.doubleValue()  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    super(populationLimit    +    elitismRate);    this.elitismRate    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	74	None	replace
41	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  }	  this.elitismRate    =    populationLimit    +    elitismRate;    if(populationLimit    <    =    0)    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    else    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
42	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  +  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  +  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  +  elitismRate;  }	  this.elitismRate    =    populationLimit    +    elitismRate;    if(populationLimit    <    =    0)    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    else    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
43	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  numberLimit  +  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  numberLimit  +  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  numberLimit  +  elitismRate;  }	  this.elitismRate    =    populationLimit    +    elitismRate;    if(populationLimit    <    =    0)    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    else    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
44	[BUG]  [BUGGY]  elitismRate  =  populationLimit  +  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	elitismRate  =  populationLimit  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    elitismRate    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	14	None	replace
45	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  populationLimit  +  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  populationLimit  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    elitismRate    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	14	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  this.elitismRate  =  populationLimit  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    -    populationLimit;    this.elitismRate  =  populationLimit  -  populationLimit;	  	compilable	  [FE]  AssertionError  	59	4	add
47	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  this.elitismRate  =  populationLimit  -  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  this.elitismRate  =  populationLimit  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    -    populationLimit;    this.elitismRate  =  populationLimit  -  populationLimit;	  	compilable	  [FE]  AssertionError  	59	4	add
48	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  elitismRate  =  populationLimit  -  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  elitismRate  =  populationLimit  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    -    populationLimit;    elitismRate  =  populationLimit  -  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	59	None	add
49	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  this.elitismRate  =  PopulationLimit  -  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  this.elitismRate  =  PopulationLimit  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    -    populationLimit;    this.elitismRate  =  PopulationLimit  -  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	59	None	add
50	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  this.elitismRate  =  populationLimit  -  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  this.elitismRate  =  populationLimit  -  PopulationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    -    populationLimit;    this.elitismRate  =  populationLimit  -  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	59	None	add
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    +    elitismRate    +    1;    this.elitismRate  =  populationLimit  +  elitismRate  +  1;	  	compilable	  [FE]  AssertionError  	3	4	add
52	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    +    1;    this.elitismRate  =  populationLimit  +  elitismRate  +  1;	  	compilable	  [FE]  AssertionError  	3	4	add
53	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  elitismRate  =  populationLimit  +  elitismRate  +  1;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  elitismRate  =  populationLimit  +  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    +    1;    elitismRate  =  populationLimit  +  elitismRate  +  1;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	3	None	add
54	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.elitismRate  =  PopulationLimit  +  elitismRate  +  1;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.elitismRate  =  PopulationLimit  +  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    +    1;    this.elitismRate  =  PopulationLimit  +  elitismRate  +  1;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	3	None	add
55	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  This.elitismRate  =  populationLimit  +  elitismRate  +  1;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  This.elitismRate  =  populationLimit  +  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    +    1;    This.elitismRate  =  populationLimit  +  elitismRate  +  1;	  	non-compiled	[CE]  cannot  find  symbol  This	3	None	add
56	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.populationLimit  =  populationLimit  +  elitismRate  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.populationLimit  =  populationLimit  +  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    +    1;    this.populationLimit  =  populationLimit  +  elitismRate  +  1;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	3	None	add
57	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  elitismRate  *  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	28	None	replace
58	[BUG]  [BUGGY]  elitismRate  =  elitismRate  *  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	28	None	replace
59	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                      AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  /  1;	  this.populationLimit    =    populationLimit    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	43	None	replace
60	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  2;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  -  2;	  this.populationLimit    =    populationLimit    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	43	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	compilable	  [FE]  AssertionError  	45	4	add
62	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	compilable	  [FE]  AssertionError  	45	4	add
63	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  PopulationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	45	None	add
64	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	45	None	add
65	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  elitismRate  +  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	45	None	add
66	[BUG]  [BUGGY]  This.elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  This.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	This.elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    This.elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  This	30	None	replace
67	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit;	          this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	19	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  this.elitismRate  =  populationLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    /    elitismRate;    this.elitismRate  =  populationLimit  /  elitismRate;	  	compilable	  [FE]  AssertionError  	5	4	add
69	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  this.elitismRate  =  populationLimit  /  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  this.elitismRate  =  populationLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    this.elitismRate  =  populationLimit  /  elitismRate;	  	compilable	  [FE]  AssertionError  	5	4	add
70	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  elitismRate  =  populationLimit  /  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  elitismRate  =  populationLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    elitismRate  =  populationLimit  /  elitismRate;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	5	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    /    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }	  	compilable	  [FE]  AssertionError  	5	4	add
72	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }	  	compilable	  [FE]  AssertionError  	5	4	add
73	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  this.elitismRate  =  PopulationLimit  /  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  this.elitismRate  =  PopulationLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    this.elitismRate  =  PopulationLimit  /  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	5	None	add
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  +  2;	  this.elitismRate    =    populationLimit    +    1;    	compilable	  [FE]  AssertionError  	58	5	replace
75	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  2;	  this.elitismRate    =    populationLimit    +    1;    	compilable	  [FE]  AssertionError  	58	5	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  /  1;	  this.elitismRate    =    populationLimit    +    1;    	compilable	  [FE]  AssertionError  	58	5	replace
77	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  /  1;	  this.elitismRate    =    populationLimit    +    1;    	compilable	  [FE]  AssertionError  	58	5	replace
78	[BUG]  [BUGGY]  This.elitismRate  =  elitismRate  +  populationLimit;  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  This.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	This.elitismRate  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    This.elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  This	49	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	                this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;	  	compilable	  [FE]  AssertionError  	17	4	add
80	[BUG]  [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	                this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;	  	compilable	  [FE]  AssertionError  	17	4	add
81	[BUG]  [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  this.elitismRate  =  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	                this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  PopulationLimit;  this.elitismRate  =  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	17	None	add
82	[BUG]  [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	                this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitismRate  =  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	17	None	add
83	[BUG]  [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	                this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    elitismRate  =  populationLimit;  this.elitismRate  =  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	17	None	add
84	[BUG]  [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  this.elitismRate  =  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationLimit  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	                this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.populationLimit  =  populationLimit;  this.elitismRate  =  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	17	None	add
85	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  /  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  /  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  getPopulationLimit()  /  elitismRate;	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	35	None	replace
86	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate  +  1;	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	35	None	replace
87	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate,  elitismRate;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate,  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate,  elitismRate;	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    *    elitismRate;    	non-compiled	[CE]  ';'  expected	35	None	replace
88	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	1	None	replace
89	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  numberLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  numberLimit  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  numberLimit  *  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	1	None	replace
90	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  getPopulationLimit();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  *  getPopulationLimit();  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  *  getPopulationLimit();	  this.populationLimit    =    populationLimit    /    getPopulationLimit();    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	65	None	replace
91	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  getPopulationLimit()  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  getPopulationLimit()  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  /  getPopulationLimit()  +  1;	  this.populationLimit    =    populationLimit    /    getPopulationLimit();    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	65	None	replace
92	[BUG]  [BUGGY]  this.elitismRate  =  elitismLimit  *  populationLimit;  [CE]  cannot  find  symbol  elitismLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismLimit  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  elitismLimit  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitism    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	69	None	replace
93	[BUG]  [BUGGY]  this.elitismRate  =  elitism  *  populationLimit;  [CE]  cannot  find  symbol  elitism  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitism  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  elitism  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitism    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  elitism	69	None	replace
94	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  2;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  2;	  this.populationLimit    =    populationLimit    +    elitismRate    +    2;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	38	None	replace
95	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  +  2;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                      AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  /  elitismRate  +  2;	  this.populationLimit    =    populationLimit    +    elitismRate    +    2;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	38	None	replace
96	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  elitismRate.doubleValue();	  this.elitismRate    =    populationLimit.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	31	None	replace
97	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  /  PopulationLimit.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  /  PopulationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit.doubleValue()  /  PopulationLimit.doubleValue();	  this.elitismRate    =    PopulationLimit.doubleValue()    /    populationLimit;    	non-compiled	[CE]  int  cannot  be  dereferenced	33	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;	  	compilable	  [FE]  AssertionError  	7	4	add
99	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;	  	compilable	  [FE]  AssertionError  	7	4	add
100	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	7	None	add
101	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  this.elitismRate  =  PopulationLimit  +  elitismRate  *  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  this.elitismRate  =  PopulationLimit  +  elitismRate  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    this.elitismRate  =  PopulationLimit  +  elitismRate  *  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	7	None	add
102	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  This.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  This.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    This.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  This	7	None	add
103	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  2;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  2;	  this.populationLimit    =    populationLimit    +    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	44	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  /  elitismRate  +  1;	  this.elitismRate    =    populationLimit    /    elitismRate;    	compilable	  [FE]  AssertionError  	6	5	replace
105	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  /  elitismRate  +  1;	  this.elitismRate    =    populationLimit    /    elitismRate;    	compilable	  [FE]  AssertionError  	6	5	replace
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  /  elitismRate  *  elitismRate;	  this.elitismRate    =    populationLimit    /    elitismRate;    	compilable	  [FE]  AssertionError  	6	5	replace
107	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate  *  elitismRate;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  /  elitismRate  *  elitismRate;	  this.elitismRate    =    populationLimit    /    elitismRate;    	compilable	  [FE]  AssertionError  	6	5	replace
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	26	4	add
109	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	26	4	add
110	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	26	None	add
111	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  PopulationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	26	None	add
112	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  elitismRate  *  PopulationLimit;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	26	None	add
113	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit  /  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit  /  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  populationLimit  /  populationLimit;	  this.populationLimit    =    populationLimit    /    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	41	None	replace
114	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  PopulationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  +  PopulationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  elitismRate  +  PopulationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate    =    elitismRate    +    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	48	None	replace
115	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	          this.elitismRate    =    populationLimit;    this.elitismRate    =    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	18	None	replace
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	          this.elitismRate    =    populationLimit;    this.elitismRate    =    populationLimit;    	compilable	  [FE]  AssertionError  	18	4	replace
117	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit;  this.elitismRate  =  elitismRate;	          this.elitismRate    =    populationLimit;    this.elitismRate    =    populationLimit;    	compilable	  [FE]  AssertionError  	18	4	replace
118	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  -  PopulationLimit.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  -  PopulationLimit.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit.doubleValue()  -  PopulationLimit.doubleValue();	  this.elitismRate    =    PopulationLimit.doubleValue()    -    populationLimit;    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
119	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  super.populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  super.populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate  *  super.populationLimit;	  this.elitismRate    =    populationLimit    +    elitismRate    +    super.populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	52	None	replace
120	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  super.elitismRate  +  elitismRate;  [CE]  cannot  find  symbol  elitismRate  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  super.elitismRate  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  super.elitismRate  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate    +    super.populationLimit;    	non-compiled	[CE]  cannot  find  symbol  elitismRate	52	None	replace
121	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  super.populationLimit  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  super.populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  super.populationLimit  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate    +    super.populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	52	None	replace
122	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit  +  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate    =    PopulationLimit    +    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	15	None	replace
123	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit  +  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit  +  populationLimit;	  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate    =    PopulationLimit    +    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	15	None	replace
124	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit  +  populateLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit  +  populateLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit  +  populateLimit;	  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate    =    PopulationLimit    +    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	15	None	replace
125	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.intValue();  [CE]  cannot  find  symbol  PopulationLimit  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit.intValue();  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit.intValue();	          this.elitismRate    =    populationLimit;    This.elitismRate    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	21	None	replace
126	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  elitismRate  =  populationLimit  +  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit;  elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  elitismRate  +  populationLimit;  elitismRate  =  populationLimit  +  elitismRate;	  this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate    =    populationLimit    +    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	71	None	replace
127	[BUG]  [BUGGY]  elitismRate  =  populationLimit  +  this.elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  elitismRate  =  populationLimit  +  this.elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	elitismRate  =  populationLimit  +  this.elitismRate;	  this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate    =    populationLimit    +    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	71	None	replace
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	62	4	add
129	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	62	4	add
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	62	4	add
131	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	62	4	add
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	62	4	add
133	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	62	4	add
134	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  PopulationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  PopulationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  elitismRate  *  PopulationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	62	None	add
135	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  PopulationLimit  *  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  PopulationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  PopulationLimit  *  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	62	None	add
136	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  elitismRate  =  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  elitismRate  =  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit;  elitismRate  =  elitismRate;	          this.elitismRate    =    populationLimit;    elitismRate    =    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	20	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        populationLimit        +        elitismRate;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	12	4	add
138	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        populationLimit        +        elitismRate;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;	  	compilable	  [FE]  AssertionError  	12	4	add
139	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.populationLimit  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.populationLimit  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        populationLimit        +        elitismRate;        this.elitismRate    =    populationLimit    +    elitismRate;    this.populationLimit  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	12	None	add
140	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  PopulationLimit  +  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  PopulationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        populationLimit        +        elitismRate;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  PopulationLimit  +  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	12	None	add
141	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  PopulationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  PopulationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        populationLimit        +        elitismRate;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  PopulationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	12	None	add
142	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        populationLimit        +        elitismRate;        this.elitismRate    =    populationLimit    +    elitismRate;    elitismRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	12	None	add
143	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  4;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  4;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  4;	  this.populationLimit    =    populationLimit    +    elitismRate    *    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	37	None	replace
144	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  *  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  *  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  /  elitismRate  *  1;	  this.populationLimit    =    populationLimit    +    elitismRate    *    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	37	None	replace
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  -  elitismRate;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
146	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  -  elitismRate;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  /  populationLimit;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
148	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  populationLimit;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  /  populationLimit;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
149	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  elitismRate  -  populationLimit;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
150	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  -  populationLimit;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  elitismRate  -  populationLimit;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
151	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  super(populationLimit  +  elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  super(populationLimit  +  elitismRate,  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate;  super(populationLimit  +  elitismRate,  elitismRate);	  this.elitismRate    =    populationLimit    +    elitismRate;    super(populationLimit    +    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	51	None	replace
152	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit  +  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit  +  elitismRate);	  this.elitismRate    =    populationLimit    +    elitismRate;    super(populationLimit    +    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	51	None	replace
153	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  super(populationLimit  +  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  super(populationLimit  +  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  /  elitismRate;  super(populationLimit  +  elitismRate);	  this.elitismRate    =    populationLimit    +    elitismRate;    super(populationLimit    +    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	51	None	replace
154	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populateLimit  +  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populateLimit  +  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populateLimit  +  elitismRate;  }	  this.elitismRate    =    populationLimit    +    elitismRate;    if(populationLimit    <    =    0)    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    else    {    this.elitismRate    =    populateLimit    +    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  *  elitismRate  +  1;	  this.elitismRate    =    populationLimit    *    elitismRate;    	compilable	  [FE]  AssertionError  	10	5	replace
156	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  *  elitismRate  +  1;	  this.elitismRate    =    populationLimit    *    elitismRate;    	compilable	  [FE]  AssertionError  	10	5	replace
157	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  elitismRate  +  populationLimit  *  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
158	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit  *  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  +  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  elitismRate  +  populationLimit  *  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
159	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate  +  1;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
160	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate  +  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate  +  1;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
161	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                      AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  *  elitismRate  +  1;	  this.populationLimit    =    populationLimit    /    elitismRate    +    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	39	None	replace
162	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  elitismRate  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  elitismRate  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  -  elitismRate  +  1;	  this.populationLimit    =    populationLimit    -    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	40	None	replace
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  +  elitismRate  *  1;	  this.elitismRate    =    populationLimit    +    elitismRate    +    1;    	compilable	  [FE]  AssertionError  	4	5	replace
164	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  1;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate  *  1;	  this.elitismRate    =    populationLimit    +    elitismRate    +    1;    	compilable	  [FE]  AssertionError  	4	5	replace
165	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  +  elitismRate  +  2;	  this.elitismRate    =    populationLimit    +    elitismRate    +    1;    	compilable	  [FE]  AssertionError  	4	5	replace
166	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate  +  2;	  this.elitismRate    =    populationLimit    +    elitismRate    +    1;    	compilable	  [FE]  AssertionError  	4	5	replace
167	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  populationLimit  *  elitismRate;	  this.populationLimit    =    populationLimit    *    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	42	None	replace
168	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.MIN_VALUE  *  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                      AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  PopulationLimit.MIN_VALUE  *  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  PopulationLimit.MIN_VALUE  *  populationLimit;	  this.populationLimit    =    populationLimit    *    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	42	None	replace
169	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit;  this.populationLimit  =  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit;  this.populationLimit  =  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit;  this.populationLimit  =  elitismRate;	          this.elitismRate    =    populationLimit;    this.populationLimit    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	64	None	replace
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	9	4	add
171	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	9	4	add
172	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  populationLimit  *  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    elitismRate  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	9	None	add
173	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  PopulationLimit  *  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  PopulationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  PopulationLimit  *  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	9	None	add
174	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
175	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  elitismLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  elitismRate,  elitismLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  elitismRate,  elitismLimit);	  super(populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	24	None	replace
176	[BUG]  [BUGGY]  this.elitismRate  =  populateLimit  *  elitismRate;  [CE]  cannot  find  symbol  populateLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populateLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populateLimit  *  elitismRate;	  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	27	None	replace
177	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.populationLimit  =  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  this.populationLimit  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    this.populationLimit  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	9	None	add
178	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  super(populationLimit  +  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  super(populationLimit  +  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    super(populationLimit  +  elitismRate);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	9	None	add
179	[BUG]  [BUGGY]  elitismRate  =  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  elitismRate  =  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	elitismRate  =  populationLimit;	          this.elitismRate    =    populationLimit;    elitismRate    =    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	20	None	replace
180	[BUG]  [BUGGY]  this.elitismRate  =  populateLimit  +  populationLimit;  [CE]  cannot  find  symbol  populateLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populateLimit  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populateLimit  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	46	None	replace
181	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.populationLimit  =  populationLimit  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.populationLimit  =  populationLimit  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.populationLimit  =  populationLimit  +  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	55	None	add
182	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  +  elitismRate;  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit.doubleValue()  +  elitismRate;	  this.elitismRate    =    populationLimit.doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	31	None	replace
183	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  -  populationLimit;  [CE]  int  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  -  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit.doubleValue()  -  populationLimit;	  this.elitismRate    =    populationLimit.doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	31	None	replace
184	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate;	          this.elitismRate    =    populationLimit;    this.elitismRate    =    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	18	None	replace
185	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  super(populationLimit  +  elitismRate  +  1);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  super(populationLimit  +  elitismRate  +  1);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    +    1;    super(populationLimit  +  elitismRate  +  1);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	3	None	add
186	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  numberLimit;  elitismRate  =  populationLimit  +  elitismRate;  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  numberLimit;  elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  numberLimit;  elitismRate  =  populationLimit  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    elitismRate    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  numberLimit	14	None	replace
187	[BUG]  [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationRimit  =  populationLimit;  this.elitismRate  =  populationLimit;  [CE]  cannot  find  symbol  populationRimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.populationRimit  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	                this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.populationRimit  =  populationLimit;  this.elitismRate  =  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  populationRimit	17	None	add
188	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate  +  2;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  getPopulationLimit()  *  elitismRate  +  2;	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	35	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
190	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
191	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  numberLimit;  elitismRate  =  elitismRate  +  populationLimit;  [CE]  cannot  find  symbol  numberLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  numberLimit;  elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  numberLimit;  elitismRate  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  numberLimit	47	None	replace
192	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  populationLimit;	  this.populationLimit    =    populationLimit    *    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	42	None	replace
193	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.populationRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [CE]  cannot  find  symbol  populationRate  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.populationRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        populationLimit        +        elitismRate;        this.elitismRate    =    populationLimit    +    elitismRate;    this.populationRate  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  populationRate	12	None	add
194	[BUG]  [BUGGY]  super(populationLimit  +  elitismRate);  this.elitismRate  =  populationLimit  +  elitismRate;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit  +  elitismRate);  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit  +  elitismRate);  this.elitismRate  =  populationLimit  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    super(populationLimit    +    elitismRate);    this.elitismRate    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	74	None	replace
195	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit;  this.elitismRate  =  PopulationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit;  this.elitismRate  =  PopulationLimit;	          this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	19	None	replace
196	[BUG]  [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismLimit);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  populationLimit,  elitismRate,  elitismLimit);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  populationLimit,  elitismRate,  elitismLimit);	  super(populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	replace
197	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  1)  {  this.elitismRate  =  populationLimit  +  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  1)  {  this.elitismRate  =  populationLimit  +  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate;  if(populationLimit  <  =  1)  {  this.elitismRate  =  populationLimit  +  elitismRate;  }	  this.elitismRate    =    populationLimit    +    elitismRate;    if(populationLimit    <    =    0)    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    else    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
198	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  this.populationLimit  =  populationLimit  /  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  this.populationLimit  =  populationLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    this.populationLimit  =  populationLimit  /  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	5	None	add
199	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  /  elitismRate;  this.elitismRate  =  populationLimit  /  elitismRate;  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  /  elitismRate;  this.elitismRate  =  populationLimit  /  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  /  elitismRate;  this.elitismRate  =  populationLimit  /  elitismRate;  }	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	5	None	add
200	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    if(populationLimit  <  populationLimit)  {  final  double  elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }	  	non-compiled	[CE]  variable  elitismRate  is  already  defined  in  constructor  ElitisticListPopulation(int,double)	5	None	add
201	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  +  1  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                      AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  elitismRate  +  1  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  /  elitismRate  +  1  +  1;	  this.populationLimit    =    populationLimit    /    elitismRate    +    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	39	None	replace
202	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.populationLimit  =  populationLimit  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.populationLimit  =  populationLimit  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    1;    this.populationLimit  =  populationLimit  +  1;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	57	None	add
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.elitismRate  =  populationLimit  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    +    1;    this.elitismRate  =  populationLimit  +  2;	  	compilable	  [FE]  AssertionError  	57	4	add
204	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.elitismRate  =  populationLimit  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  1;  this.elitismRate  =  populationLimit  +  2;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    1;    this.elitismRate  =  populationLimit  +  2;	  	compilable	  [FE]  AssertionError  	57	4	add
205	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.populationLimit  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.populationLimit  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.populationLimit  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	26	None	add
206	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	26	4	add
207	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	26	4	add
208	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.populationRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  populationRate  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.populationRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.populationRate  =  populationLimit  *  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  populationRate	26	None	add
209	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getStandardPopulationLimit()  -  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  getStandardPopulationLimit()  -  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  getStandardPopulationLimit()  -  1;	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	34	None	replace
210	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  getPositionLimit();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  getPositionLimit();  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  getPositionLimit();	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	34	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	66	4	add
212	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	66	4	add
213	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  populationLimit;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  elitismRate  /  populationLimit;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  elitismRate  /  populationLimit;  }	  	non-compiled	[CE]  illegal  start  of  type	66	None	add
214	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.populationLimit  =  populationLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.populationLimit  =  populationLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.populationLimit  =  populationLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	62	None	add
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	62	4	add
216	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  populationLimit  *  elitismRate;	  	compilable	  [FE]  AssertionError  	62	4	add
217	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  this.populationLimit  =  populationLimit  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  this.populationLimit  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  /  elitismRate;  this.populationLimit  =  populationLimit  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	50	None	replace
218	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	compilable	  [FE]  AssertionError  	45	4	add
219	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	compilable	  [FE]  AssertionError  	45	4	add
220	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.populationLimit  =  populationLimit  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.populationLimit  =  populationLimit  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.populationLimit  =  populationLimit  +  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	45	None	add
221	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  elitismRate  +  populationLimit;  this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    elitismRate    +    populationLimit;    this.populationLimit  =  populationLimit;  this.elitismRate  =  elitismRate  +  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	45	None	add
222	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  3;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  3;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  3;	  this.populationLimit    =    populationLimit    +    elitismRate    *    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	37	None	replace
223	[BUG]  [BUGGY]  elitismRate  =  populationLimit  *  elitismRate;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	elitismRate  =  populationLimit  *  elitismRate;	  this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	28	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    -    populationLimit;    if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  this.elitismRate  =  populationLimit  -  populationLimit;  }	  	compilable	  [FE]  AssertionError  	59	4	add
225	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    -    populationLimit;    if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  this.elitismRate  =  populationLimit  -  populationLimit;  }	  	compilable	  [FE]  AssertionError  	59	4	add
226	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  this.elitismRate  =  PopulationLimit.doubleValue();  }  [CE]  cannot  find  symbol  PopulationLimit  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  this.elitismRate  =  PopulationLimit.doubleValue();  }  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    -    populationLimit;    if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  this.elitismRate  =  PopulationLimit.doubleValue();  }	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	59	None	add
227	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    -    populationLimit;    if(populationLimit  >  populationLimit)  {  this.elitismRate  =  populationLimit  -  populationLimit;  }  else  {  System.arraycopy(populationLimit,  0,  this.elitismRate,  populationLimit);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	59	None	add
228	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  this.populationLimit  =  populationLimit  -  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  this.populationLimit  =  populationLimit  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    -    populationLimit;    this.populationLimit  =  populationLimit  -  populationLimit;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	59	None	add
229	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	7	None	add
230	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  super(populationLimit  +  elitismRate  *  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  super(populationLimit  +  elitismRate  *  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    super(populationLimit  +  elitismRate  *  elitismRate);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	7	None	add
231	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate;  super(populationLimit  +  elitismRate);  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate;  super(populationLimit  +  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  elitismRate;  super(populationLimit  +  elitismRate);	  this.elitismRate    =    populationLimit    +    elitismRate;    super(populationLimit    +    elitismRate);    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	51	None	replace
232	[BUG]  [BUGGY]  This.elitismRate  =  populationLimit;  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  This.elitismRate  =  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	This.elitismRate  =  populationLimit;	          this.elitismRate    =    populationLimit;    This.elitismRate    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  This	21	None	replace
233	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  /  PopulationLimit.MAX_VALUE;  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit.doubleValue()  /  PopulationLimit.MAX_VALUE;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit.doubleValue()  /  PopulationLimit.MAX_VALUE;	  this.elitismRate    =    PopulationLimit.doubleValue()    /    populationLimit;    	non-compiled	[CE]  int  cannot  be  dereferenced	33	None	replace
234	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  total;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  total;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  /  total;	  this.populationLimit    =    populationLimit    /    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	41	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  -  1;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
236	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  -  1;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  *  populationLimit;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
238	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  populationLimit;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  *  populationLimit;	  this.elitismRate    =    populationLimit    -    populationLimit;    	compilable	  [FE]  AssertionError  	60	5	replace
239	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate  +  1;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate  +  1;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  +  elitismRate  *  elitismRate  +  1;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	1	None	replace
240	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  setPopulationLimit(populationLimit  *  elitismRate);  [CE]  method  setPopulationLimit  in  class  ListPopulation  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  setPopulationLimit(populationLimit  *  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  *  elitismRate;  setPopulationLimit(populationLimit  *  elitismRate);	  this.elitismRate    =    elitismRate    *    populationLimit;    this.populationLimit    =    populationLimit    *    elitismRate;    	non-compiled	[CE]  method  setPopulationLimit  in  class  ListPopulation  cannot  be  applied  to  given  types;	61	None	replace
241	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  *  populationLimit;  elitismRate  =  elitismRate  *  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit.doubleValue()  *  populationLimit;  elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit.doubleValue()  *  populationLimit;  elitismRate  =  elitismRate  *  populationLimit;	  this.elitismRate    =    elitismRate    *    populationLimit;    elitismRate    =    elitismRate    *    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	28	None	replace
242	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
243	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  }  else  {  this.elitismRate  =  PopulationLimit  +  populationLimit  *  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  }  else  {  this.elitismRate  =  PopulationLimit  +  populationLimit  *  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  +  elitismRate  *  elitismRate;  }  else  {  this.elitismRate  =  PopulationLimit  +  populationLimit  *  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
244	[BUG]  [BUGGY]  this.elmRate  =  populationLimit  +  elmRate;  [CE]  cannot  find  symbol  elmRate  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elmRate  =  populationLimit  +  elmRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elmRate  =  populationLimit  +  elmRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    if(populationLimit    <    =    0)    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    else    {    this.elitismRate    =    populateLimit    +    elitismRate;    }    	non-compiled	[CE]  cannot  find  symbol  elmRate	73	None	replace
245	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  [CE]  final  parameter  elitismRate  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  elitismRate  *  populationLimit;  elitismRate  =  elitismRate  +  populationLimit;	  this.elitismRate    =    elitismRate    +    populationLimit;    elitismRate    =    elitismRate    +    populationLimit;    	non-compiled	[CE]  final  parameter  elitismRate  may  not  be  assigned	47	None	replace
246	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  *  elitismRate  +  2;	  this.elitismRate    =    populationLimit    *    elitismRate;    	compilable	  [FE]  AssertionError  	10	5	replace
247	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  *  elitismRate  +  2;	  this.elitismRate    =    populationLimit    *    elitismRate;    	compilable	  [FE]  AssertionError  	10	5	replace
248	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  PopulationLimit.doubleValue()  /  populationLimit;	  this.populationLimit    =    populationLimit    /    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	41	None	replace
249	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  /  elitism;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  /  elitism;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  /  elitism;	  this.populationLimit    =    populationLimit    /    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	41	None	replace
250	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  This.elitismRate  =  populationLimit  -  populationLimit;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  -  populationLimit;  This.elitismRate  =  populationLimit  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    -    populationLimit;    This.elitismRate  =  populationLimit  -  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  This	59	None	add
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  /  elitismRate  +  2;	  this.elitismRate    =    populationLimit    /    elitismRate;    	compilable	  [FE]  AssertionError  	6	5	replace
252	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  /  elitismRate  +  2;	  this.elitismRate    =    populationLimit    /    elitismRate;    	compilable	  [FE]  AssertionError  	6	5	replace
253	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  super(populationLimit  *  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate;  super(populationLimit  *  elitismRate);  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate;  super(populationLimit  *  elitismRate);	  this.elitismRate    =    populationLimit    +    elitismRate;    super(populationLimit    +    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	51	None	replace
254	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit,  elitismRate.doubleValue();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit,  elitismRate.doubleValue();  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit,  elitismRate.doubleValue();	  this.elitismRate    =    populationLimit.doubleValue();    	non-compiled	[CE]  ';'  expected	31	None	replace
255	[BUG]  [BUGGY]  this.elitismRate  =  populateLimit;  [CE]  cannot  find  symbol  populateLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populateLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populateLimit;	          this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	19	None	replace
256	[BUG]  [BUGGY]  this.elitismRate  =  BevölkerungLimit;  [CE]  cannot  find  symbol  Bev  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  BevölkerungLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  BevölkerungLimit;	          this.elitismRate    =    populationLimit;    this.elitismRate    =    PopulationLimit;    	non-compiled	[CE]  cannot  find  symbol  Bev	19	None	replace
257	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populationLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  elitismRate,  populationLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  elitismRate,  populationLimit,  elitismRate);	  super(populationLimit,    elitismRate,    populationLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	24	None	replace
258	[BUG]  [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismLimit  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [CE]  cannot  find  symbol  elitismLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismRate  =  populationLimit  +  elitismRate;  this.elitismLimit  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        populationLimit        +        elitismRate;        this.elitismRate    =    populationLimit    +    elitismRate;    this.elitismLimit  =  populationLimit  +  elitismRate;  this.elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  elitismLimit	12	None	add
259	[BUG]  [BUGGY]  this.elitismRate  =  populateLimit  /  elitismRate;  [CE]  cannot  find  symbol  populateLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populateLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populateLimit  /  elitismRate;	  this.elitismRate    =    elitismRate    /    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	67	None	replace
260	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.populationLimit  =  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    +    populationLimit;    this.elitismRate  =  populationLimit  +  elitismRate;  this.populationLimit  =  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        +        populationLimit;        this.elitismRate    =    populationLimit    +    elitismRate;    this.populationLimit  =  populationLimit;  this.elitismRate  =  populationLimit  +  elitismRate;	  	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	55	None	add
261	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                    AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  populationLimit  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  -  populationLimit  *  elitismRate;	  this.populationLimit    =    populationLimit    *    populationLimit;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	42	None	replace
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  populationLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  populationLimit  /  elitismRate;	  	compilable	  [FE]  AssertionError  	66	4	add
263	[BUG]  [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  populationLimit  /  elitismRate;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  elitismRate  /  populationLimit;  this.elitismRate  =  populationLimit  /  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    elitismRate    /    populationLimit;    this.elitismRate  =  populationLimit  /  elitismRate;	  	compilable	  [FE]  AssertionError  	66	4	add
264	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate  *  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate  *  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate  *  elitismRate;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	1	None	replace
265	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate  *  populationLimit;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate  *  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  *  elitismRate  +  elitismRate  *  populationLimit;	  this.populationLimit    =    populationLimit    +    elitismRate    *    elitismRate;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	1	None	replace
266	[BUG]  [BUGGY]  super(populationLimit,  numberLimit,  elitismRate,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  numberLimit,  elitismRate,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  numberLimit,  elitismRate,  elitismRate);	  super(populationLimit,    populationLimit,    elitismRate);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	replace
267	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    *    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  *  elitismRate;  }	  	compilable	  [FE]  AssertionError  	9	4	add
268	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  *  elitismRate;  }	  	compilable	  [FE]  AssertionError  	9	4	add
269	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  *  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
270	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    *    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }	  	compilable	  [FE]  AssertionError  	9	4	add
271	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }	  	compilable	  [FE]  AssertionError  	9	4	add
272	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populateLimit  *  elitismRate;  }  [CE]  cannot  find  symbol  populateLimit  [FE]          AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populateLimit  *  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    *    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  *  elitismRate;  }  else  {  this.elitismRate  =  populateLimit  *  elitismRate;  }	  	non-compiled	[CE]  cannot  find  symbol  populateLimit	9	None	add
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.elitismRate  =  populationLimit  +  elitismRate  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    +    elitismRate    +    1;    this.elitismRate  =  populationLimit  +  elitismRate  +  2;	  	compilable	  [FE]  AssertionError  	3	4	add
274	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.elitismRate  =  populationLimit  +  elitismRate  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  +  1;  this.elitismRate  =  populationLimit  +  elitismRate  +  2;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    +    elitismRate    +    1;    this.elitismRate  =  populationLimit  +  elitismRate  +  2;	  	compilable	  [FE]  AssertionError  	3	4	add
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  +  elitismRate  *  populationLimit;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
276	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  +  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  +  elitismRate  *  populationLimit;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
277	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate  *  populationLimit;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
278	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate  *  populationLimit;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populationLimit  *  elitismRate  +  elitismRate  *  populationLimit;	  this.elitismRate    =    populationLimit    +    elitismRate    *    elitismRate;    	compilable	  [FE]  AssertionError  	8	5	replace
279	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit  +  populationLimit;  elitismRate  =  populationLimit  +  elitismRate;  [CE]  cannot  find  symbol  PopulationLimit  [FE]          AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit  +  populationLimit;  elitismRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit  +  populationLimit;  elitismRate  =  populationLimit  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    elitismRate    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	14	None	replace
280	[BUG]  [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitemRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [CE]  cannot  find  symbol  elitemRate  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]          this.elitismRate    =    populationLimit;    this.elitismRate  =  populationLimit;  this.elitemRate  =  populationLimit;  this.elitismRate  =  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	                this.elitismRate        =        populationLimit;        this.elitismRate    =    populationLimit;    this.elitemRate  =  populationLimit;  this.elitismRate  =  populationLimit;	  	non-compiled	[CE]  cannot  find  symbol  elitemRate	17	None	add
281	[BUG]  [BUGGY]  super(populationLimit,  elitismRate,  populateLimit,  elitismRate);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  super(populationLimit,  elitismRate,  populateLimit,  elitismRate);  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	super(populationLimit,  elitismRate,  populateLimit,  elitismRate);	  super(populationLimit,    elitismRate,    populateLimit);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	25	None	replace
282	[BUG]  [BUGGY]  this.elitemRate  =  populationLimit  +  elitismRate;  [CE]  cannot  find  symbol  elitemRate  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitemRate  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitemRate  =  populationLimit  +  elitismRate;	  this.elitismRate    =    populationLimit    +    elitismRate;    if(populationLimit    <    =    0)    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    else    {    this.elitismRate    =    populationLimit    +    elitismRate;    }    	non-compiled	[CE]  cannot  find  symbol  elitemRate	72	None	replace
283	[BUG]  [BUGGY]  this.elitismRate  =  PopulationLimit  -  populationLimit;  [CE]  cannot  find  symbol  PopulationLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  PopulationLimit  -  populationLimit;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  PopulationLimit  -  populationLimit;	  this.elitismRate    =    populationLimit    -    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	60	None	replace
284	[BUG]  [BUGGY]  this.elitismLimit  =  populationLimit  +  elitismRate;  [CE]  cannot  find  symbol  elitismLimit  [FE]        AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismLimit  =  populationLimit  +  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismLimit  =  populationLimit  +  elitismRate;	  this.elitismRate    =    elitismRate    +    populationLimit;    this.populationLimit    =    populationLimit    +    elitismRate;    	non-compiled	[CE]  cannot  find  symbol  elitismLimit	54	None	replace
285	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [CE]  cannot  find  symbol  elitismLimit  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    populationLimit    *    elitismRate;    this.elitismRate  =  elitismLimit  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;	  	non-compiled	[CE]  cannot  find  symbol  elitismLimit	62	None	add
286	[BUG]  [BUGGY]  this.elitismRate  =  populateLimit;  elitismRate  =  elitismRate;  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populateLimit;  elitismRate  =  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate  =  populateLimit;  elitismRate  =  elitismRate;	          this.elitismRate    =    populationLimit;    elitismRate    =    populationLimit;    	non-compiled	[CE]  cannot  find  symbol  populateLimit	20	None	replace
287	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	26	4	add
288	[BUG]  [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  elitismRate  *  populationLimit;  this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate        =        elitismRate        *        populationLimit;        this.elitismRate    =    elitismRate    *    populationLimit;    this.elitismRate  =  populationLimit  *  elitismRate;  this.elitismRate  =  elitismRate  *  populationLimit;	  	compilable	  [FE]  AssertionError  	26	4	add
289	[BUG]  [BUGGY]  this.populationLimit  =  PopulationLimit  +  getPopulationLimit();  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]              AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  PopulationLimit  +  getPopulationLimit();  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  PopulationLimit  +  getPopulationLimit();	  this.populationLimit    =    populationLimit    +    getPopulationLimit()    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	34	None	replace
290	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit  -  1  +  elitismRate;  [CE]  populationLimit  has  private  access  in  ListPopulation  [FE]                      AssertionError      [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.populationLimit  =  populationLimit  -  1  +  elitismRate;  [BUGGY]      this.elitismRate  =  elitismRate;  }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.populationLimit  =  populationLimit  -  1  +  elitismRate;	  this.populationLimit    =    populationLimit    -    1;    	non-compiled	[CE]  populationLimit  has  private  access  in  ListPopulation	43	None	replace
291	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	add	this.elitismRate    =    populationLimit    /    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }	  	compilable	  [FE]  AssertionError  	5	4	add
292	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }	  	compilable	  [FE]  AssertionError  	5	4	add
293	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    if(populationLimit  <  =  0)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  populationLimit  /  elitismRate;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
294	[BUG]  [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  PopulationLimit  /  elitismRate;  }  [CE]  cannot  find  symbol  PopulationLimit  [FE]        AssertionError    [CONTEXT]      public  ElitisticListPopulation(final  int  populationLimit,  final  double  elitismRate)  {  super(populationLimit);      [BUGGY]  this.elitismRate  =  populationLimit  /  elitismRate;  if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  PopulationLimit  /  elitismRate;  }  [BUGGY]      }  [CLASS]  ElitisticListPopulation  [METHOD]  <init>  [RETURN_TYPE]  ElitisticListPopulation(int,double)  final  int  populationLimit  final  double  elitismRate  [VARIABLES]  double  elitismRate  int  populationLimit  boolean  	projects/Math35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java	0.4082482904638631	65	65	4	replace	this.elitismRate    =    populationLimit    /    elitismRate;    if(populationLimit  >  elitismRate)  {  this.elitismRate  =  populationLimit  /  elitismRate;  }  else  {  this.elitismRate  =  PopulationLimit  /  elitismRate;  }	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	5	None	add
