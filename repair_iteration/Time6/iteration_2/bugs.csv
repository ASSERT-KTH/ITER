bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  3);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  3);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    3);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	84	5	replace
2	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  3);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  3);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  3);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    3);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	84	5	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  +  2);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  +  2);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    3);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	84	5	replace
5	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  +  2);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  +  2);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  +  2);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    3);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	84	5	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  4);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  4);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    4);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	365	5	replace
13	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  4);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  4);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  4);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    4);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	365	5	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  3);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  3);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    4);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	365	5	replace
14	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  3);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  3);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  3);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    4);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	365	5	replace
43	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfSecond().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfSecond().get(instant));	  from.monthOfYear().get(instant),    from.dayOfMonth().get(instant),    from.millisOfSecond().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	243	1	replace
44	[BUG]  [BUGGY]  from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfSecond().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfSecond().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfSecond().get(instant));	  from.monthOfYear().get(instant),    from.dayOfMonth().get(instant),    from.millisOfSecond().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	243	1	replace
44	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfSecond().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfSecond().get(instant));	  from.monthOfYear().get(instant),    from.dayOfMonth().get(instant),    from.millisOfSecond().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	243	1	replace
45	[BUG]  [BUGGY]  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfSecond().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfSecond().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfSecond().get(instant));	  from.monthOfYear().get(instant),    from.dayOfMonth().get(instant),    from.millisOfSecond().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	243	1	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  1);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  1);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	12	5	replace
73	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  1);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  1);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  1);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	12	5	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L  +  1);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L  +  1);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	12	5	replace
75	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L  +  1);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L  +  1);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L  +  1);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	12	5	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L  -  1);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L  -  1);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	14	5	replace
95	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L  -  1);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L  -  1);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L  -  1);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	14	5	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
112	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(1);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(1);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
113	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(1);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(1);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(1);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
115	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1L);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    long  gregorianToJulianByYear(long  instant)  {    [BUGGY]  return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  [BUGGY]    }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  gregorianToJulianByYear  [RETURN_TYPE]  long  long  instant  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	588	588	5	add	return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);	  return    convertByYear(instant,    iJulianChronology,    iGregorianChronology);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	103	5	replace
134	[BUG]  [BUGGY]  return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    long  gregorianToJulianByYear(long  instant)  {    [BUGGY]  return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  [BUGGY]    }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  gregorianToJulianByYear  [RETURN_TYPE]  long  long  instant  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutover  cutoverMillis  gregorianCutover  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	588	588	5	replace	return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);	  return    convertByYear(instant,    iJulianChronology,    iGregorianChronology);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	103	5	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  *  4);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  *  4);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    4);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	85	5	replace
145	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  *  4);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  *  4);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  *  4);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    +    4);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	85	5	replace
151	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
152	[BUG]  [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
152	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
153	[BUG]  [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
153	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
154	[BUG]  [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
154	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
155	[BUG]  [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
172	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
173	[BUG]  [BUGGY]  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
173	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
174	[BUG]  [BUGGY]  from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
284	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));	  from.monthOfYear().get(instant),    from.weekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	574	1	replace
285	[BUG]  [BUGGY]  from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));	  from.monthOfYear().get(instant),    from.weekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	574	1	replace
341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
342	[BUG]  [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
342	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.year().set(newInstant,  from.year().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
343	[BUG]  [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.year().set(newInstant,  from.year().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
344	[BUG]  [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
372	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));	  from.weekOfWeekyear().get(instant),    from.dayOfMonth().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	34	1	replace
373	[BUG]  [BUGGY]  from.weekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));	  from.weekOfWeekyear().get(instant),    from.dayOfMonth().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	34	1	replace
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(0,  from.year().get(instant));  [BUGGY]    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.year().set(0,  from.year().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	123	5	add
392	[BUG]  [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(0,  from.year().get(instant));  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(0,  from.year().get(instant));  [BUGGY]    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.year().set(0,  from.year().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	123	5	add
392	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  [BUGGY]    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.year().set(newInstant,  from.year().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	123	5	add
393	[BUG]  [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  [BUGGY]    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.year().set(newInstant,  from.year().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	123	5	add
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  [BUGGY]    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	123	5	add
394	[BUG]  [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  [BUGGY]    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	123	5	add
82	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));	  from.monthOfYear().get(instant),    from.weekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	574	1	replace
83	[BUG]  [BUGGY]  from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));	  from.monthOfYear().get(instant),    from.weekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	574	1	replace
84	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));	  from.monthOfYear().get(instant),    from.weekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	574	1	replace
85	[BUG]  [BUGGY]  from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));	  from.monthOfYear().get(instant),    from.weekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	574	1	replace
362	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12119292800000L);    	compilable	  [FE]  ExceptionInInitializerError  initializationError	364	1	replace
363	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12119292800000L);    	compilable	  [FE]  ExceptionInInitializerError  initializationError	364	1	replace
381	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {    [BUGGY]  return  to.getDateTimeMillis(from.year().get(instant),  from.weekyear().get(instant),  [BUGGY]    (from.year().get(instant),  from.monthOfYear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	84	86	5	add	return  to.getDateTimeMillis(from.year().get(instant),  from.weekyear().get(instant),	  return    to.getDateTimeMillis(from.year().get(instant),    from.weekOfWeekyear().get(instant),    	compilable	  [FE]  ExceptionInInitializerError  initializationError	53	1	replace
382	[BUG]  [BUGGY]  return  to.getDateTimeMillis(from.year().get(instant),  from.weekyear().get(instant),  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {    [BUGGY]  return  to.getDateTimeMillis(from.year().get(instant),  from.weekyear().get(instant),  [BUGGY]    (from.year().get(instant),  from.monthOfYear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	84	86	5	replace	return  to.getDateTimeMillis(from.year().get(instant),  from.weekyear().get(instant),	  return    to.getDateTimeMillis(from.year().get(instant),    from.weekOfWeekyear().get(instant),    	compilable	  [FE]  ExceptionInInitializerError  initializationError	53	1	replace
442	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  [BUGGY]    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	123	5	add
443	[BUG]  [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]      newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  [BUGGY]    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	123	5	add
503	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));	  from.weekOfWeekyear().get(instant),    from.dayOfMonth().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	34	1	replace
504	[BUG]  [BUGGY]  from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));	  from.weekOfWeekyear().get(instant),    from.dayOfMonth().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	34	1	replace
523	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
524	[BUG]  [BUGGY]  from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
582	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	add	from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
583	[BUG]  [BUGGY]  from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  [FE]  ExceptionInInitializerError  initializationError  [CONTEXT]    private  static  long  convertByYear(long  instant,  Chronology  from,  Chronology  to)  {  return  to.getDateTimeMillis  (from.year().get(instant),    [BUGGY]  from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  [BUGGY]    from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByYear  [RETURN_TYPE]  long  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	86	88	5	replace	from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));	  from.monthOfYear().get(instant),    from.weekOfWeekyear().get(instant),    from.millisOfDay().get(instant));    	compilable	  [FE]  ExceptionInInitializerError  initializationError	33	1	replace
824	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0L);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0L);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
825	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0L);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0L);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0L);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4119292800000L);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4119292800000L);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12119292800000L);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	364	5	replace
303	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4119292800000L);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4119292800000L);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4119292800000L);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12119292800000L);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	364	5	replace
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-6119292800000L);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-6119292800000L);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12119292800000L);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	364	5	replace
304	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-6119292800000L);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-6119292800000L);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-6119292800000L);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12119292800000L);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	364	5	replace
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  GJChronology(JulianChronology  julian,  GregorianChronology  gregorian,  Instant  cutoverInstant)  {  super(null,  new  Object[]  {julian,  gregorian,  cutoverInstant});    [BUGGY]      iGregorianChronology  =  iGregorianChronology.getInstanceUTC();  iJulianChronology  =  iJulianChronology.getInstanceUTC();  [BUGGY]    }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  <init>  [RETURN_TYPE]  Instant)  JulianChronology  julian  GregorianChronology  gregorian  Instant  cutoverInstant  [VARIABLES]  boolean  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  iField  DateTimeField  iGregorianField  iJulianField  Map  cCache  DurationField  iDurationField  iRangeDurationField  long  iCutover  iCutoverMillis  iGapDuration  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	271	271	5	add	        iGregorianChronology    =    iGregorianChronology.getInstanceUTC();    iJulianChronology  =  iJulianChronology.getInstanceUTC();	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	162	5	add
362	[BUG]  [BUGGY]      iGregorianChronology  =  iGregorianChronology.getInstanceUTC();  iJulianChronology  =  iJulianChronology.getInstanceUTC();  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  GJChronology(JulianChronology  julian,  GregorianChronology  gregorian,  Instant  cutoverInstant)  {  super(null,  new  Object[]  {julian,  gregorian,  cutoverInstant});    [BUGGY]      iGregorianChronology  =  iGregorianChronology.getInstanceUTC();  iJulianChronology  =  iJulianChronology.getInstanceUTC();  [BUGGY]    }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  <init>  [RETURN_TYPE]  Instant)  JulianChronology  julian  GregorianChronology  gregorian  Instant  cutoverInstant  [VARIABLES]  boolean  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  iField  DateTimeField  iGregorianField  iJulianField  Map  cCache  DurationField  iDurationField  iRangeDurationField  long  iCutover  iCutoverMillis  iGapDuration  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	271	271	5	replace	        iGregorianChronology    =    iGregorianChronology.getInstanceUTC();    iJulianChronology  =  iJulianChronology.getInstanceUTC();	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	162	5	add
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  GJChronology(JulianChronology  julian,  GregorianChronology  gregorian,  Instant  cutoverInstant)  {  super(null,  new  Object[]  {julian,  gregorian,  cutoverInstant});    [BUGGY]      iGregorianChronology  =  iGregorianChronology.getInstanceUTC();  iJulianChronology  =  iJulianChronology.getInstance();  [BUGGY]    }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  <init>  [RETURN_TYPE]  Instant)  JulianChronology  julian  GregorianChronology  gregorian  Instant  cutoverInstant  [VARIABLES]  boolean  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  iField  DateTimeField  iGregorianField  iJulianField  Map  cCache  DurationField  iDurationField  iRangeDurationField  long  iCutover  iCutoverMillis  iGapDuration  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	271	271	5	add	        iGregorianChronology    =    iGregorianChronology.getInstanceUTC();    iJulianChronology  =  iJulianChronology.getInstance();	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	162	5	add
365	[BUG]  [BUGGY]      iGregorianChronology  =  iGregorianChronology.getInstanceUTC();  iJulianChronology  =  iJulianChronology.getInstance();  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  GJChronology(JulianChronology  julian,  GregorianChronology  gregorian,  Instant  cutoverInstant)  {  super(null,  new  Object[]  {julian,  gregorian,  cutoverInstant});    [BUGGY]      iGregorianChronology  =  iGregorianChronology.getInstanceUTC();  iJulianChronology  =  iJulianChronology.getInstance();  [BUGGY]    }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  <init>  [RETURN_TYPE]  Instant)  JulianChronology  julian  GregorianChronology  gregorian  Instant  cutoverInstant  [VARIABLES]  boolean  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  iField  DateTimeField  iGregorianField  iJulianField  Map  cCache  DurationField  iDurationField  iRangeDurationField  long  iCutover  iCutoverMillis  iGapDuration  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	271	271	5	replace	        iGregorianChronology    =    iGregorianChronology.getInstanceUTC();    iJulianChronology  =  iJulianChronology.getInstance();	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	162	5	add
482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
483	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-4);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	13	5	replace
814	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  6);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  6);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    4);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	365	5	replace
815	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  6);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  6);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  6);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    4);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	365	5	replace
931	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
932	[BUG]  [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
932	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  if(from!=  null)  {  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  }  else  {  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  }  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    if(from!=  null)  {  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  }  else  {  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  }	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
933	[BUG]  [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  if(from!=  null)  {  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  }  else  {  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  }  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  if(from!=  null)  {  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  }  else  {  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  }  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    if(from!=  null)  {  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  }  else  {  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  }	  	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	513	5	add
1174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  2);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	add	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  2);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	14	5	replace
1175	[BUG]  [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  2);  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]      [BUGGY]  static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  2);  [BUGGY]      [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [VARIABLES]  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6201736729460423	106	106	5	replace	static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  -  2);	  static    final    Instant    DEFAULT_CUTOVER    =    new    Instant(-12219292800000L    -    1);    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	14	5	replace
1234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant  +  1));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	add	newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant  +  1));	  newInstant    =    to.weekyear().set(0,    from.weekyear().get(instant    -    1));    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	515	5	replace
1235	[BUG]  [BUGGY]  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant  +  1));  [FE]  AssertionFailedError  test_cutoverPreZero  [CONTEXT]    private  static  long  convertByWeekyear(final  long  instant,  Chronology  from,  Chronology  to)  {  long  newInstant;    [BUGGY]  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant  +  1));  [BUGGY]    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant  =  to.dayOfWeek().set(newInstant,  from.dayOfWeek().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  return  newInstant;  }  [CLASS]  GJChronology  CutoverField  ImpreciseCutoverField  LinkedDurationField  [METHOD]  convertByWeekyear  [RETURN_TYPE]  long  final  long  instant  Chronology  from  Chronology  to  [VARIABLES]  boolean  convertByWeekyear  iConvertByWeekyear  JulianChronology  iJulianChronology  julian  Instant  DEFAULT_CUTOVER  cutoverInstant  iCutoverInstant  GregorianChronology  gregorian  iGregorianChronology  ImpreciseCutoverField  dateTimeField  iField  DateTimeField  gregorianField  iGregorianField  iJulianField  julianField  Chronology  from  to  Map  cCache  DurationField  durationField  iDurationField  iRangeDurationField  rangeField  long  cutoverMillis  iCutover  iCutoverMillis  iGapDuration  instant  newInstant  serialVersionUID  	projects/Time6/src/main/java/org/joda/time/chrono/GJChronology.java	0.6324555320336759	96	96	5	replace	newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant  +  1));	  newInstant    =    to.weekyear().set(0,    from.weekyear().get(instant    -    1));    	compilable	  [FE]  AssertionFailedError  test_cutoverPreZero	515	5	replace
