compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,588,add,[CE] ';' expected, ,return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  if(instant >= iCutover) { if(instant >= iGregorianChronology) { return convertByWeekyear(instant, iJulianChronology, iGregorianChronology); }
compilation error,84,replace,[CE] ';' expected, return  to.getDateTimeMillis(from.year().get(instant),  from.weekyear().get(instant),  ,return to.getDateTimeMillis(from.year().get(instant), from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,replace,[CE] ')' expected, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  if(from!=  null)  {  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  }  else  {  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  }  ,if(from!= null) { newInstant = to.weekOfWeekyear().set(newInstant, from.weekOfWeekyear().get(instant)); if(from!= null) { newInstant = to.weekOfWeekyear().set(newInstant,
compilation error,86,replace,[CE] cannot find symbol, from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));  ,from.weekOfYear().get(instant), from.monthOfYear().get(instant), from.millisOfDay().get(instant));
compilation error,96,replace,[CE] bad operand types for binary operator '>=', newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  ,if(newInstant >= from) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekyear().set(newInstant, from.weekyear().get(instant)); }
increase failing tests,106,replace, [FE] AssertionFailedError test_plusYears_negativeToPositive_crossCutover, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  1);  ,static final Instant DEFAULT_CUTOVER = new Instant(-219219292800000L / 2);
compilation error,271,add,[CE] cannot find symbol iDurationField, ,        iGregorianChronology    =    iGregorianChronology.getInstanceUTC();    iJulianChronology  =  iJulianChronology.getInstance();  iDurationField = iDurationField.getInstance(); iGregorianChronology = iGregorianChronology.getInstanceUTC();
compilation error,96,replace,[CE] variable newInstant might not have been initialized, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  ,newInstant = to.monthOfYear().set(newInstant, from.monthOfYear().get(instant));
compilation error,86,replace,[CE] cannot find symbol, from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant));  ,from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfHour().get(instant));
increase failing tests,86,replace, [FE] AssertionFailedError test_plusYears_negativeToPositive_crossCutover, from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  ,from.monthOfYear().get(instant), from.monthOfYear().get(instant), from.millisOfDay().get(instant));
compilation error,96,replace,[CE] bad operand types for binary operator '>=', newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  ,if(newInstant >= from) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.year().set(newInstant, from.year().get(instant)); }
compilation error,96,replace,[CE] variable newInstant might not have been initialized, newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant  +  1));  ,newInstant = to.weekyear().set(newInstant, from.weekyear().get(instant + 1));
compilation error,96,replace,[CE] bad operand types for binary operator '>=',     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  ,if(newInstant >= from) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.millisOfDay().set(newInstant, from.millisOfDay().get(instant)); }
compilation error,96,replace,[CE] bad operand types for binary operator '>=', newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  ,if(newInstant >= from) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekyear().set(0, from.weekyear().get(instant)); }
increase failing tests,86,replace, [FE] AssertionFailedError test_plusYears_negativeToPositive_crossCutover, from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  ,from.monthOfYear().get(instant), from.monthOfYear().get(instant), from.monthOfYear().get(instant));
increase failing tests,86,replace, [FE] AssertionFailedError test_plusYears_negativeToPositive_crossCutover, from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  ,from.monthOfYear().get(instant), from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,replace,[CE] no suitable method found for getDateTimeMillis(int,int,int), from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  ,from.millisOfSecond().get(instant), from.millisOfSecond().get(instant));
compilation error,96,add,[CE] cannot find symbol, ,newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant = to.monthOfWeekyear().set(newInstant, from.monthOfWeekyear().get(instant));
compilation error,96,add,[CE] cannot find symbol, ,        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant = to.monthOfWeekyear().set(newInstant, from.monthOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,add,[CE] cannot find symbol, ,newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant = to.yearOfYear().set(newInstant, from.yearOfYear().get(instant));
compilation error,96,replace,[CE] variable newInstant might not have been initialized, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  ,newInstant = to.millisOfDay().set(newInstant, from.millisOfDay().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfSecond().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfSecond().get(instant));
compilation error,86,replace,[CE] cannot find symbol, from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfSecond().get(instant));  ,from.weekOfWeekyear().get(instant), from.monthOfWeekyear().get(instant), from.millisOfSecond().get(instant));
compilation error,86,replace,[CE] no suitable method found for getDateTimeMillis(int,int,int), from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  ,from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfSecond().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfDay().get(instant));
compilation error,106,replace,[CE] cannot find symbol instant, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0);  ,static final Instant DEFAULT_CUTOVER = new Instant(instant);
compilation error,86,add,[CE] ';' expected, ,from.weekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,271,add,[CE] cannot find symbol iDurationField, ,        iGregorianChronology    =    iGregorianChronology.getInstanceUTC();    iJulianChronology  =  iJulianChronology.getInstanceUTC();  iDurationField = iDurationField.getInstanceUTC(); iGregorianChronology = iGregorianChronology.getInstanceUTC();
compilation error,96,replace,[CE] bad operand types for binary operator '>=',     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(0,  from.year().get(instant));  ,if(newInstant >= from) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.year().set(0, from.year().get(instant)); }
compilation error,106,replace,[CE] ')' expected, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  /  4);  ,static final Instant DEFAULT_CUTOVER = new Instant(-10.0L / 4);
compilation error,96,replace,[CE] bad operand types for binary operator '>=',     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  ,if(newInstant >= from) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.weekyear().set(0, from.weekyear().get(instant)); }
compilation error,96,replace,[CE] ')' expected, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  ,if(newInstant >= from) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekOfWeekyear().set(newInstant, from.weekOfWeekyear()
compilation error,106,add,[CE] variable DEFAULT_CUTOVER is already defined in class GJChronology, ,static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);  static final Instant DEFAULT_CUTOVER = new Instant(-10.0f);
compilation error,588,replace,[CE] cannot find symbol, return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  ,return convertByWeeksInYear(instant, iJulianChronology, iGregorianChronology);
compilation error,106,add,[CE] <identifier> expected, ,static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);  iGregorianChronology = iGregorianChronology.getInstanceUTC(); iJulianChronology = iJulianChronology.getInstanceUTC();
compilation error,106,replace,[CE] no suitable constructor found for Instant(long,long), static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0L);  ,static final Instant DEFAULT_CUTOVER = new Instant(0L, 1L);
compilation error,96,replace,[CE] bad operand types for binary operator '>=',     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  ,if(newInstant >= from) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.year().set(newInstant, from.year().get(instant)); }
compilation error,86,add,[CE] ';' expected, ,from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.dayOfMonth().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfDay().get(instant));
compilation error,96,add,[CE] cannot find symbol, ,        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant = to.monthOfWeekyear().set(newInstant, from.monthOfWeekyear().get(instant));
compilation error,86,replace,[CE] no suitable method found for getDateTimeMillis(int,int,int), from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  ,from.monthOfYear().get(instant), from.millisOfDay().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  from.monthOfYear().get(instant), from.monthOfYear().get(instant), from.monthOfYear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,84,add,[CE] unreachable statement, ,return  to.getDateTimeMillis(from.year().get(instant),  from.weekyear().get(instant),  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,add,[CE] cannot find symbol, ,newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant = to.monthOfWeek().set(newInstant, from.monthOfWeek().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,replace,[CE] ')' expected, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  ,if(newInstant >= 0) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekOfWeekyear().set(newInstant, from.weekOfWeekyear()
compilation error,106,replace,[CE] cannot find symbol, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0L);  ,static final Instant DEFAULT_CUTOVER = new Instant(instants(1));
compilation error,86,replace,[CE] cannot find symbol, from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant));  ,from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.weekOfMonth().get(instant));
compilation error,96,replace,[CE] variable newInstant might not have been initialized, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  ,if(newInstant >= 2) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekyear().set(newInstant, from.weekyear().get(instant)); }
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,replace,[CE] no suitable method found for getDateTimeMillis(int,int,int), from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  ,from.monthOfYear().get(instant), from.monthOfYear().get(instant));
compilation error,86,replace,[CE] ')' expected, from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  ,from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant, from.weekOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,271,add,[CE] cannot find symbol, ,        iGregorianChronology    =    iGregorianChronology.getInstanceUTC();    iJulianChronology  =  iJulianChronology.getInstance();  iCutoverInstant = iCutoverInstant.withUTC();
compilation error,96,replace,[CE] cannot find symbol, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  ,newInstant = to.monthOfWeek().set(newInstant, from.monthOfWeek().get(instant));
compilation error,96,replace,[CE] ,     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  ,if(from.weekyear().get(instant) == newInstant = to.weekyear().set(0, from.weekyear().get(instant)); newInstant = to.monthOfYear().set(newInstant, from.monthOfYear().get(instant)); }
compilation error,86,replace,[CE] cannot find symbol, from.weekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  ,from.weekyear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfWeekyear().get(instant));
compilation error,86,replace,[CE] cannot find symbol, from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  ,from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfWeekyear().get(instant));
compilation error,86,replace,[CE] cannot find symbol, from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));  ,from.millisOfYear().get(instant), from.weekyear().get(instant));
compilation error,96,replace,[CE] cannot find symbol, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  ,newInstant = to.yearOfWeekyear().set(newInstant, from.yearOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,add,[CE] cannot find symbol, ,newInstant    =    to.weekOfWeekyear().set(0,    from.weekOfWeekyear().get(instant));    newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  newInstant = to.monthOfWeek().set(newInstant, from.monthOfWeek().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,replace,[CE] ')' expected, from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  ,from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant, from.weekOfWeekyear().get(instant));
compilation error,96,replace,[CE] variable newInstant might not have been initialized, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  ,if(newInstant >= 0) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekyear().set(newInstant, from.weekyear().get(instant)); }
compilation error,96,replace,[CE] incomparable types: long and <null>,     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  ,if(newInstant == null) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.millisOfDay().set(newInstant, from.millisOfDay().get(instant)); }
compilation error,96,add,[CE] cannot find symbol, ,newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant  +  1));  newInstant = to.yearOfYear().set(newInstant, from.yearOfYear().get(instant));
compilation error,106,replace,[CE] cannot find symbol, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(1);  ,static final Instant DEFAULT_CUTOVER = new Instant(getMillis());
compilation error,106,replace,[CE] cannot find symbol DEFAULT_CUTOVER, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0);  ,static final Instant deFAULT_CUTOVER = new Instant(1);
compilation error,106,add,[CE] <identifier> expected, ,static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);  iJulianChronology = iJulianChronology.getInstanceUTC();
compilation error,96,replace,[CE] incomparable types: long and <null>,     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  ,if(newInstant == null) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.monthOfYear().set(newInstant, from.monthOfYear().get(instant)); }
compilation error,86,replace,[CE] cannot find symbol, from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  ,from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfYear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  from.weekyear().get(instant), from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,add,[CE] cannot find symbol, ,        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  newInstant = to.monthOfWeek().set(newInstant, from.monthOfWeek().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfSecond().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,replace,[CE] no suitable method found for getDateTimeMillis(int,int,int), from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  ,from.weekyear().get(instant), from.weekyear().get(instant));
compilation error,96,replace,[CE] ')' expected, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  ,if(newInstant >= null) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekOfWeekyear().set(newInstant, from.year().get
compilation error,271,add,[CE] cannot find symbol, ,        iGregorianChronology    =    iGregorianChronology.getInstanceUTC();    iJulianChronology  =  iJulianChronology.getInstanceUTC();  iCutoverInstant = iCutoverInstant.withUTC();
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,replace,[CE] ')' expected, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  if(from!=  null)  {  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  }  else  {  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  }  ,if(from!= null) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); if(from!= null) { newInstant = to.weekOfWeekyear().set(newInstant, from
compilation error,106,replace,[CE] no suitable constructor found for Instant(float,float), static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);  ,static final Instant DEFAULT_CUTOVER = new Instant(-10.0f, 10.0f);
compilation error,96,add,[CE] cannot find symbol, ,        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant = to.monthOfWeek().set(newInstant, from.monthOfWeek().get(instant));
compilation error,86,replace,[CE] no suitable method found for getDateTimeMillis(int,int), from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  ,from.millisOfSecond().get(instant));
compilation error,96,replace,[CE] bad operand types for binary operator '>=', newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  ,if(newInstant >= null) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.year().set(newInstant, from.year().get(instant)); }
compilation error,96,replace,[CE] bad operand types for binary operator '>=',     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(0,  from.year().get(instant));  ,if(newInstant >= null) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.year().set(0, from.year().get(instant)); }
compilation error,96,replace,[CE] bad operand types for binary operator '>=',     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  ,if(newInstant >= null) { newInstant = to.weekyear().set(0, from.weekyear().get(instant)); newInstant = to.monthOfYear().set(newInstant, from.monthOfYear().get(instant)); }
compilation error,96,add,[CE] bad operand types for binary operator '>=', ,        newInstant    =    to.year().set(0,    from.year().get(instant));    newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  if(newInstant >= null) { newInstant = to.weekyear().set(0, from.weekyear().get(instant)); newInstant = to.monthOfYear().set(newInstant, from.monthOfYear().get(instant)); }
compilation error,588,replace,[CE] cannot find symbol, return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  ,return iConvertByYear(instant, iJulianChronology, iGregorianChronology);
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,replace,[CE] ')' expected, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  ,if(from.weekOfWeekyear!= null) { newInstant = to.weekOfWeekyear().set(newInstant, from.weekOfWeekyear().get(instant)); } else { newInstant = to.weekOfWeekyear().set(newIns
increase failing tests,106,replace, [FE] AssertionFailedError test_plusYears_negativeToPositive_crossCutover, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L  -  1);  ,static final Instant DEFAULT_CUTOVER = new Instant(-419199292800000L - 1);
increase failing tests,106,replace, [FE] AssertionFailedError test_plusYears_negativeToPositive_crossCutover, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12219292800000L  *  4);  ,static final Instant DEFAULT_CUTOVER = new Instant(-12219292800000L * 6);
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfSecond().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  from.millisOfSecond().get(instant));
compilation error,86,replace,[CE] no suitable method found for getDateTimeMillis(int,int), from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  ,from.millisOfDay().get(instant));
compilation error,96,replace,[CE] ')' expected, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekOfWeekyear().set(newInstant,  from.weekOfWeekyear().get(instant));  ,if(newInstant >= null) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekOfWeekyear().set(newInstant, from.weekOfWeekyear()
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant));  from.weekyear().get(instant));
compilation error,271,add,[CE] cannot find symbol, ,        iGregorianChronology    =    iGregorianChronology.getInstanceUTC();    iJulianChronology  =  iJulianChronology.getInstance();  iCutoverInstant = iCutoverInstant.getInstance();
compilation error,106,replace,[CE] no suitable constructor found for Instant(float,float), static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-10.0f);  ,static final Instant DEFAULT_CUTOVER = new Instant(-10.0f, -10.0f);
compilation error,96,replace,[CE] bad operand types for binary operator '>=',     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.millisOfDay().set(newInstant,  from.millisOfDay().get(instant));  ,if(newInstant >= null) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.millisOfDay().set(newInstant, from.millisOfDay().get(instant)); }
compilation error,106,replace,[CE] self-reference in initializer, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(1);  ,static final Instant DEFAULT_CUTOVER = new Instant(DEFAULT_CUTOVER, 0);
compilation error,96,replace,[CE] bad operand types for binary operator '>=',     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.year().set(newInstant,  from.year().get(instant));  ,if(newInstant >= null) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.year().set(newInstant, from.year().get(instant)); }
compilation error,96,replace,[CE] bad operand types for binary operator '>=', newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  if(from!=  null)  {  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  }  else  {  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  }  ,if(newInstant >= null) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); }
compilation error,86,add,[CE] ';' expected, ,from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  from.millisOfSecond().get(instant));
compilation error,96,replace,[CE] bad operand types for binary operator '>=',     newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  ,if(newInstant >= null) { newInstant = to.year().set(0, from.year().get(instant)); newInstant = to.weekyear().set(0, from.weekyear().get(instant)); }
compilation error,86,replace,[CE] cannot find symbol, from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  ,from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfHalfday().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  from.weekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,106,replace,[CE] cannot find symbol, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(0);  ,static final Instant DEFAULT_CUTOVER = new Instant(instant(1));
compilation error,86,replace,[CE] no suitable method found for getDateTimeMillis(int,int), from.weekOfWeekyear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  ,from.weekyear().get(instant));
compilation error,96,replace,[CE] ')' expected, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(newInstant,  from.weekyear().get(instant));  ,if(newInstant >= null) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekyear().set(newInstant, from.weekyear().get(instant)
compilation error,86,replace,[CE] cannot find symbol, from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));  ,from.monthOfYear().get(instant), from.weekyear().get(instant), from.millisOfHalfday().get(instant));
compilation error,84,add,[CE] no suitable method found for getDateTimeMillis(int,int,int), ,return  to.getDateTimeMillis(from.year().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));
compilation error,86,replace,[CE] ')' expected, from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfSecond().get(instant));  ,from.monthOfYear().get(instant, from.weekyear().get(instant), from.millisOfSecond().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.dayOfMonth().get(instant));  from.millisOfDay().get(instant));
compilation error,96,replace,[CE] bad operand types for binary operator '>=', newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant));  ,if(newInstant >= null) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); newInstant = to.weekyear().set(0, from.weekyear().get(instant)); }
compilation error,86,add,[CE] ';' expected, ,from.weekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  from.monthOfYear().get(instant));
compilation error,86,replace,[CE] cannot find symbol, from.weekOfWeekyear().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant));  ,from.weekOfWeekyear().get(instant), from.monthOfYear().get(instant), from.millisOfHalfday().get(instant));
