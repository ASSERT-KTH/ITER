compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfDay().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,85,replace,[CE] ';' expected, (from.year().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant),  ,(from.year().get(instant), from.monthOfYear().get(instant), from.dayOfMonth().get(instant), from.millisOfDay().get(instant));
compilation error,588,replace,[CE] ';' expected, return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  ,if(instant >= iCutover) { if(instant + iGregorianChronology > iJulianChronology) { return convertByWeekyear(instant, iGregorianChronology, iJulianChronology); }
compilation error,596,replace,[CE] cannot find symbol, return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  ,return convertByWeek(instant, iJulianChronology, iGregorianChronology);
compilation error,588,replace,[CE] cannot find symbol, return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  ,return convertByWeek(instant, iJulianChronology, iGregorianChronology);
compilation error,596,replace,[CE] cannot find symbol, return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  ,return convertByWeeksInYear(instant, iJulianChronology, iGregorianChronology);
increase failing tests,106,replace, [FE] AssertionFailedError test_plusYears_negativeToPositive_crossCutover, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L);  ,static final Instant DEFAULT_CUTOVER = new Instant(-128119292800000L);
compilation error,106,replace,[CE] no suitable constructor found for Instant(int,int), static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L);  ,static final Instant DEFAULT_CUTOVER = new Instant(-1, 1);
compilation error,588,add,[CE] ';' expected, ,return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  if(instant >= iCutover) { if(instant < iGregorianChronology) { return convertByYear(instant, iJulianChronology, iGregorianChronology); }
compilation error,96,replace,[CE] variable newInstant might not have been initialized, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  ,newInstant = to.weekyear().set(newInstant, from.weekOfWeekyear().get(instant));
compilation error,85,add,[CE] ')' expected, ,(from.year().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant),  (from.year().get(instant), from.monthOfYear().get(instant), from.dayOfMonth().get(instant), from.millisOfDay().get(instant));
compilation error,96,replace,[CE] variable newInstant might not have been initialized, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  ,newInstant = to.year().set(newInstant, from.year().get(instant - 1));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant), from.millisOfDay().get(instant));
compilation error,96,replace,[CE] variable newInstant might not have been initialized, newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant  -  1));  ,newInstant = to.weekOfWeekyear().set(newInstant, from.weekOfWeekyear().get(instant - 1));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfSecond().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,add,[CE] cannot find symbol, ,newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant = to.yearOfYear().set(newInstant, from.yearOfYear().get(instant));
compilation error,84,replace,[CE] ';' expected, return  to.getDateTimeMillis(from.year().get(instant),  from.weekOfWeekyear().get(instant),  ,return to.getDateTimeMillis(from.year().get(instant), from.weekOfWeekyear().get(instant));
compilation error,596,replace,[CE] cannot find symbol, return  convertByYear(instant,  iGregorianChronology,  iJulianChronology);  ,return convertByWeek(instant, iGregorianChronology, iJulianChronology);
compilation error,86,replace,[CE] cannot find symbol, from.weekOfWeekyear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfDay().get(instant));  ,from.weekOfWeekyear().get(instant), from.monthOfWeekyear().get(instant), from.millisOfDay().get(instant));
compilation error,109,replace,[CE] <identifier> expected, private  static  final  Map  <  DateTimeZone,  ArrayList  <  GJChronology  >>  cCache  =  new  HashMap  <  DateTimeZone,  ArrayList  <  GJChronology  >>  (1);  ,private static final Map < DateTimeZone, ArrayList >> GJChronology >> cCache = new HashMap < DateTimeZone, ArrayList >> GJChronology >> (1);
compilation error,96,add,[CE] cannot find symbol, ,    newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant = to.monthOfWeekyear().set(newInstant, from.monthOfWeekyear().get(instant));
compilation error,96,replace,[CE] cannot find symbol,   newInstant  =  to.year().set(0,  from.year().get(instant));  ,newInstant = to.monthOfWeekyear().set(newInstant, from.monthOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  from.weekOfWeekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,replace,[CE] cannot find symbol,   newInstant  =  to.year().set(0,  from.year().get(instant));  ,newInstant = to.monthOfWeek().set(0, from.monthOfWeek().get(instant));
compilation error,596,replace,[CE] cannot find symbol, return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  ,return iGregorianChronology.convertByWeekyear(instant, iJulianChronology, iGregorianChronology);
compilation error,86,replace,[CE] ')' expected, from.monthOfYear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfSecond().get(instant));  ,from.monthOfYear().get(instant), from.dayOfMonth().get(instant)from.millisOfSecond().get(instant));
compilation error,96,replace,[CE] variable newInstant might not have been initialized, newInstant  =  to.weekyear().set(0,  from.weekyear().get(instant  -  1));  ,newInstant = to.weekyear().set(newInstant, from.weekyear().get(instant - 1));
compilation error,588,replace,[CE] no suitable method found for validate(long,GregorianChronology), return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  ,iJulianChronology.validate(instant, iGregorianChronology);
compilation error,96,add,[CE] cannot find symbol, ,newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  newInstant = to.weekYear().set(newInstant, from.weekYear().get(instant));
compilation error,106,replace,[CE] no suitable constructor found for Instant(int,int), static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L);  ,static final Instant DEFAULT_CUTOVER = new Instant(-1, -1);
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfDay().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,96,add,[CE] cannot find symbol, ,    newInstant  =  to.year().set(0,  from.year().get(instant));  newInstant = to.monthOfWeek().set(newInstant, from.monthOfWeek().get(instant));
compilation error,588,add,[CE] cannot find symbol, ,return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  iJulianChronology = iGregorianChronology.yearOfYear();
compilation error,85,add,[CE] ')' expected, ,(from.year().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant),  from.dayOfMonth().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfSecond().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,85,replace,[CE] ';' expected, (from.year().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant),  ,from.year().get(instant), from.monthOfYear().get(instant), from.dayOfMonth().get(instant));
compilation error,109,replace,[CE] <identifier> expected, private  static  final  Map  <  DateTimeZone,  ArrayList  <  GJChronology  >>  cCache  =  new  HashMap  <  DateTimeZone,  ArrayList  <  GJChronology  >>  (1);  ,private static final Map < DateTimeZone, ArrayList >> GJChronology >> cCache = new HashMap % DateTimeZone, ArrayList >> GJChronology >> (1;
compilation error,588,replace,[CE] cannot find symbol, return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  ,return iGregorianChronology.convertByYear(instant, iJulianChronology, iGregorianChronology);
compilation error,596,add,[CE] method getWeekyear in class BasicChronology cannot be applied to given types;, ,return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  iJulianChronology = iGregorianChronology.getWeekyear();
compilation error,86,replace,[CE] no suitable method found for getDateTimeMillis(int,int,int), from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  ,from.weekyear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,596,replace,[CE] cannot find symbol, return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  ,return iConvertByWeekyear(instant, iJulianChronology, iGregorianChronology);
compilation error,96,replace,[CE] cannot find symbol,   newInstant  =  to.year().set(0,  from.year().get(instant));  ,newInstant = to.monthOfWeekyear().set(0, from.monthOfWeekyear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));  from.monthOfYear().get(instant), from.weekOfWeekyear().get(instant));
compilation error,588,replace,[CE] ';' expected, return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  ,if(instant >= iCutover) { if(instant - iGapDuration >= iCutover) { return iGregorianToJulianByWeekyear(instant, iJulianChronology, iGregorianChronology); }
increase failing tests,106,replace, [FE] AssertionFailedError test_plusYears_negativeToPositive_crossCutover, static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-12119292800000L);  ,static final Instant DEFAULT_CUTOVER = new Instant(-419199292800000L);
compilation error,84,add,[CE] no suitable method found for getDateTimeMillis(int,int,int), ,return  to.getDateTimeMillis(from.year().get(instant),  from.weekOfWeekyear().get(instant),  from.millisOfDay().get(instant));
compilation error,271,add,[CE] cannot find symbol iJeulianChronology, ,    iGregorianChronology  =  iGregorianChronology.getInstanceUTC();  iJulianChronology = iJeulianChronology.getInstanceUTC();
compilation error,596,add,[CE] no suitable method found for withZone(long), ,return  convertByWeekyear(instant,  iJulianChronology,  iGregorianChronology);  iJulianChronology = iGregorianChronology.withZone(instant);
compilation error,109,replace,[CE] <identifier> expected, private  static  final  Map  <  DateTimeZone,  ArrayList  <  GJChronology  >>  cCache  =  new  HashMap  <  DateTimeZone,  ArrayList  <  GJChronology  >>  (1);  ,private static final Map < DateTimeZone, ArrayList >> GJChronology >> cCache = new HashMap < DateTimeZone, ArrayList >> GJChronology >> (2);
compilation error,106,replace,[CE] no suitable constructor found for Instant(int,int), static  final  Instant  DEFAULT_CUTOVER  =  new  Instant(-1);  ,static final Instant DEFAULT_CUTOVER = new Instant(0, 1);
compilation error,86,replace,[CE] cannot find symbol, from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfDay().get(instant));  ,from.monthOfYear().get(instant), from.weekyear().get(instant), from.millisOfWeekyear().get(instant));
compilation error,96,add,[CE] ')' expected, ,    newInstant  =  to.year().set(0,  from.year().get(instant));  if(newInstant >= null) { newInstant = to.weekyear().set(0, from.weekyear().get(instant)); } else { newInstant = to.monthOfYear().set(newInstant, from.monthOfYear().get(instant)
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.weekyear().get(instant),  from.millisOfDay().get(instant));  from.monthOfYear().get(instant), from.weekyear().get(instant));
compilation error,596,replace,[CE] cannot find symbol, return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  ,return convertByWeeks(instant, iJulianChronology, iGregorianChronology);
compilation error,96,replace,[CE] ')' expected, newInstant  =  to.weekOfWeekyear().set(0,  from.weekOfWeekyear().get(instant));  ,if(newInstant >= null) { newInstant = to.weekOfWeekyear().set(0, from.weekOfWeekyear().get(instant)); } else { newInstant = to.weekOfWeekyear().set(newInstant, from
compilation error,85,add,[CE] ')' expected, ,(from.year().get(instant),  from.monthOfYear().get(instant),  from.millisOfDay().get(instant),  from.dayOfMonth().get(instant)); to.setChronology(from.year().get(instant), from.monthOfYear().get(instant));
compilation error,86,add,[CE] ';' expected, ,from.monthOfYear().get(instant),  from.dayOfMonth().get(instant),  from.millisOfSecond().get(instant));  from.millisOfDay().get(instant));
compilation error,588,replace,[CE] cannot find symbol, return  convertByYear(instant,  iJulianChronology,  iGregorianChronology);  ,return convertByYear(instant, iJulianChronology, iGregorianChronology)&& iCutoverInstant(instant, iGapDuration, iCutoverInstant);
