bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  right.getLastChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >=  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >=  right.getLastChild())  {	  if(intIndex    <    0    ||    index    >    right.getLastChild())    {    	non-compiled	[CE]  	4	None	replace
2	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  >=  right.getLastChild())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  >=  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  >=  right.getLastChild())  {	  if(intIndex    <    0    ||    index    >    right.getLastChild())    {    	non-compiled	[CE]  	4	None	replace
3	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  ==  right.getLastChild())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  ==  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  ==  right.getLastChild())  {	  if(intIndex    <    0    ||    index    >    right.getLastChild())    {    	non-compiled	[CE]  	4	None	replace
4	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  right.getLastChild())  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >  right.getLastChild())  {	  if(intIndex    <    0    ||    index    >    right.getLastChild())    {    	non-compiled	[CE]  	4	None	replace
5	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  left.getLastChild())  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >  left.getLastChild())  {	  if(intIndex    <    0    ||    index    >    right.getLastChild())    {    	non-compiled	[CE]  	4	None	replace
6	[BUG]  [BUGGY]  if(index  <  0  ||  index  ==  right.getLastChild())  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  ==  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  ==  right.getLastChild())  {	  if(intIndex    <    0    ||    index    >    right.getLastChild())    {    	non-compiled	[CE]  	4	None	replace
7	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index!=  right.getLastChild())  {  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index!=  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index!=  right.getLastChild())  {	  if(intIndex    <    0    ||    index    >    right.getLastChild())    {    	non-compiled	[CE]  	4	None	replace
8	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  >=  right.getLastChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  >=  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  >=  right.getLastChild())  {	  if(intIndex    <    0    ||    intIndex    >    right.getLastChild())    {    	non-compiled	[CE]  	2	None	replace
9	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  ==  right.getLastChild())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  ==  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  ==  right.getLastChild())  {	  if(intIndex    <    0    ||    intIndex    >    right.getLastChild())    {    	non-compiled	[CE]  	2	None	replace
10	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  <  right.getLastChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  <  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  <  right.getLastChild())  {	  if(intIndex    <    0    ||    intIndex    >    right.getLastChild())    {    	non-compiled	[CE]  	2	None	replace
11	[BUG]  [BUGGY]  if(intIndex  >=  0  ||  intIndex  >  right.getLastChild())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  >=  0  ||  intIndex  >  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  >=  0  ||  intIndex  >  right.getLastChild())  {	  if(intIndex    <    0    ||    intIndex    >    right.getLastChild())    {    	non-compiled	[CE]  	2	None	replace
12	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  >=  left.getLastChild())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  >=  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  >=  left.getLastChild())  {	  if(intIndex    <    0    ||    intIndex    >    right.getLastChild())    {    	non-compiled	[CE]  	2	None	replace
13	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  <  left.getLastChild())  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  <  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  <  left.getLastChild())  {	  if(intIndex    <    0    ||    intIndex    >    right.getLastChild())    {    	non-compiled	[CE]  	2	None	replace
14	[BUG]  [BUGGY]  if(intIndex  >=  index)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  >=  index)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  >=  index)  {	  if(intIndex!=    0)    {    	non-compiled	[CE]  	7	None	replace
15	[BUG]  [BUGGY]  if(intIndex  ==  index)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  ==  index)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  ==  index)  {	  if(intIndex!=    0)    {    	non-compiled	[CE]  	7	None	replace
16	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  ==  left.getLastChild())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  ==  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  ==  left.getLastChild())  {	  if(intIndex    <    0    ||    intIndex    >    left.getLastChild())    {    	non-compiled	[CE]  	5	None	replace
17	[BUG]  [BUGGY]  if(intIndex  >=  0  ||  intIndex  >  left.getLastChild())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  >=  0  ||  intIndex  >  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  >=  0  ||  intIndex  >  left.getLastChild())  {	  if(intIndex    <    0    ||    intIndex    >    left.getLastChild())    {    	non-compiled	[CE]  	5	None	replace
18	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  <  left.getFirstChild())  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  <  left.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  <  left.getFirstChild())  {	  if(intIndex    <    0    ||    intIndex    >    left.getLastChild())    {    	non-compiled	[CE]  	5	None	replace
19	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  >  left.getFirstChild())  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  >  left.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  >  left.getFirstChild())  {	  if(intIndex    <    0    ||    intIndex    >    left.getLastChild())    {    	non-compiled	[CE]  	5	None	replace
20	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  >=  left.getLastChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  >=  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  >=  left.getLastChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
21	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  left.getLastChild())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >=  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >=  left.getLastChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
22	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  ==  left.getLastChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  ==  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  ==  left.getLastChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
23	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index!=  left.getLastChild())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index!=  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index!=  left.getLastChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
24	[BUG]  [BUGGY]  if(index  <  0  ||  index  ==  left.getLastChild())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  ==  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  ==  left.getLastChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
25	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  <  left.getLastChild())  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  <  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  <  left.getLastChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
26	[BUG]  [BUGGY]  int  parentIndex  =  left.getParent();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  int  parentIndex  =  left.getParent();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	int  parentIndex  =  left.getParent();	      	non-compiled	[CE]  	6	None	replace
27	[BUG]  [BUGGY]  n  =  left.getFirstChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  n  =  left.getFirstChild();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	n  =  left.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
28	[BUG]  [BUGGY]  n  =  left.getNext();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  n  =  left.getNext();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	n  =  left.getNext();	      	non-compiled	[CE]  	6	None	replace
29	[BUG]  [BUGGY]  int  parentIndex  =  right.getParent();  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  int  parentIndex  =  right.getParent();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	int  parentIndex  =  right.getParent();	      	non-compiled	[CE]  	6	None	replace
30	[BUG]  [BUGGY]  n  =  left.getLastChild();  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  n  =  left.getLastChild();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	n  =  left.getLastChild();	      	non-compiled	[CE]  	6	None	replace
31	[BUG]  [BUGGY]  Node  left  =  left.getFirstChild();  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  Node  left  =  left.getFirstChild();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	Node  left  =  left.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
32	[BUG]  [BUGGY]  Node  left  =  left.getNext();  [CE]  [FE]                              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  Node  left  =  left.getNext();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	Node  left  =  left.getNext();	      	non-compiled	[CE]  	6	None	replace
33	[BUG]  [BUGGY]  if(index  >=  0)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  >=  0)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  >=  0)  {	  if(index    <    0)    {    	non-compiled	[CE]  	8	None	replace
34	[BUG]  [BUGGY]  if(index  ==  0)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  ==  0)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  ==  0)  {	  if(index    <    0)    {    	non-compiled	[CE]  	8	None	replace
35	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  right.getFirstChild().getIndex())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >  right.getFirstChild().getIndex())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >  right.getFirstChild().getIndex())  {	  if(index    <    0)    {    	non-compiled	[CE]  	8	None	replace
36	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  right.getFirstChild().getNext())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >  right.getFirstChild().getNext())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >  right.getFirstChild().getNext())  {	  if(index    <    0)    {    	non-compiled	[CE]  	8	None	replace
37	[BUG]  [BUGGY]  if(index  >  0)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  >  0)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  >  0)  {	  if(intIndex    >    0)    {    	non-compiled	[CE]  	9	None	replace
38	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  >=  right.getLength())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  >=  right.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  >=  right.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
39	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  right.getLength())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >=  right.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >=  right.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
40	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  ==  right.getLength())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  ==  right.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  ==  right.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
41	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  right.getLength())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >  right.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >  right.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
42	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index!=  right.getLength())  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index!=  right.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index!=  right.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
43	[BUG]  [BUGGY]  if(index  <  0  ||  index  ==  right.getLength())  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  ==  right.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  ==  right.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
44	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  left.getLength())  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >  left.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >  left.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
45	[BUG]  [BUGGY]  if(intIndex  >=  -1)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  >=  -1)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  >=  -1)  {	  if(intIndex    >=    0)    {    	non-compiled	[CE]  	1	None	replace
46	[BUG]  [BUGGY]  if(intIndex  ==  -1)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  ==  -1)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  ==  -1)  {	  if(intIndex    ==    0)    {    	non-compiled	[CE]  	3	None	replace
47	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  left.getLength())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >=  left.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >=  left.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
48	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  >=  left.getLength())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  >=  left.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  >=  left.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
49	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  >=  left.getFirstChild())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  >=  left.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  >=  left.getFirstChild())  {	  if(intIndex    <    0    ||    intIndex    >    left.getLastChild())    {    	non-compiled	[CE]  	5	None	replace
50	[BUG]  [BUGGY]  if(intIndex  <  0  &&  intIndex  >  left.getLastChild())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  &&  intIndex  >  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  &&  intIndex  >  left.getLastChild())  {	  if(intIndex    <    0    ||    intIndex    >    left.getLastChild())    {    	non-compiled	[CE]  	5	None	replace
51	[BUG]  [BUGGY]  if(intIndex  >=  0  ||  intIndex  >  left.getFirstChild())  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  >=  0  ||  intIndex  >  left.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  >=  0  ||  intIndex  >  left.getFirstChild())  {	  if(intIndex    <    0    ||    intIndex    >    left.getLastChild())    {    	non-compiled	[CE]  	5	None	replace
52	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  right.getFirstChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >=  right.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >=  right.getFirstChild())  {	  if(intIndex    <    0    ||    index    >    right.getLastChild())    {    	non-compiled	[CE]  	4	None	replace
53	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  >=  left.getFirstChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  >=  left.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  >=  left.getFirstChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
54	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  left.getFirstChild())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >=  left.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >=  left.getFirstChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
55	[BUG]  [BUGGY]  if(left  <  0  ||  index  >=  left.getLastChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(left  <  0  ||  index  >=  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(left  <  0  ||  index  >=  left.getLastChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
56	[BUG]  [BUGGY]  if(index!=  0)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index!=  0)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index!=  0)  {	  if(intIndex!=    0)    {    	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  >=  right.getFirstChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  >=  right.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  >=  right.getFirstChild())  {	  if(intIndex    <    0    ||    intIndex    >    right.getLastChild())    {    	non-compiled	[CE]  	2	None	replace
58	[BUG]  [BUGGY]  if(i  >  0)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(i  >  0)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(i  >  0)  {	  if(intIndex    >    0)    {    	non-compiled	[CE]  	9	None	replace
59	[BUG]  [BUGGY]  Node  left  =  left.getLastChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  Node  left  =  left.getLastChild();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	Node  left  =  left.getLastChild();	      	non-compiled	[CE]  	6	None	replace
60	[BUG]  [BUGGY]  Node  right  =  left.getNext();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  Node  right  =  left.getNext();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	Node  right  =  left.getNext();	      	non-compiled	[CE]  	6	None	replace
61	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  >  left.getLength())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  >  left.getLength())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  >  left.getLength())  {	  if(intIndex    <    0    ||    index    >    right.getLength())    {    	non-compiled	[CE]  	11	None	replace
62	[BUG]  [BUGGY]  if(intIndex!=  index)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex!=  index)  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex!=  index)  {	  if(intIndex!=    0)    {    	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  if(intIndex  >  0  &&  index  <  right.getLastChild())  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  >  0  &&  index  <  right.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  >  0  &&  index  <  right.getLastChild())  {	  if(intIndex    >    0)    {    	non-compiled	[CE]  	9	None	replace
64	[BUG]  [BUGGY]  if(intIndex  >  0  &&  index  <=  left.getLastChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  >  0  &&  index  <=  left.getLastChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  >  0  &&  index  <=  left.getLastChild())  {	  if(intIndex    >    0)    {    	non-compiled	[CE]  	9	None	replace
65	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  left.getFirstChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >  left.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >  left.getFirstChild())  {	  if(index    <    0)    {    	non-compiled	[CE]  	8	None	replace
66	[BUG]  [BUGGY]  if(intIndex  <  0  ||  intIndex  >  right.getFirstChild())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  intIndex  >  right.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  intIndex  >  right.getFirstChild())  {	  if(intIndex    <    0    ||    intIndex    >    left.getLastChild())    {    	non-compiled	[CE]  	5	None	replace
67	[BUG]  [BUGGY]  if(intIndex  <  0  ||  index  >  left.getFirstChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(intIndex  <  0  ||  index  >  left.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(intIndex  <  0  ||  index  >  left.getFirstChild())  {	  if(intIndex    <    0    ||    index    >    left.getLastChild())    {    	non-compiled	[CE]  	10	None	replace
68	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  right.getFirstChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  if(index  <  0  ||  index  >  right.getFirstChild())  {  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	if(index  <  0  ||  index  >  right.getFirstChild())  {	  if(intIndex    <    0    ||    index    >    right.getLastChild())    {    	non-compiled	[CE]  	4	None	replace
69	[BUG]  [BUGGY]  n  =  left.getFirstChild().getNext();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  double  index  =  right.getDouble();  int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }    [BUGGY]  n  =  left.getFirstChild().getNext();  [BUGGY]    error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;  for  (int  i  =  0;  current  !=  null  &&  i  <  intIndex;  i++)  {  elem  =  current;  current  =  current.getNext();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1444	1444	1	replace	n  =  left.getFirstChild().getNext();	      	non-compiled	[CE]  	6	None	replace
