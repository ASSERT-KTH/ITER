bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  true;  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return  true;  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return  true;	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
2	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getLastChild().getString().equals( "assignment "));  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getLastChild().getString().equals( "assignment "));  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getLastChild().getString().equals( "assignment "));	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
3	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.CALL  &&  n.getChildCount()  >  MAX_FOLD_NUMBER))  {  return  true;  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.CALL  &&  n.getChildCount()  >  MAX_FOLD_NUMBER))  {  return  true;  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.CALL  &&  n.getChildCount()  >  MAX_FOLD_NUMBER))  {  return  true;	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
4	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getLastChild().getNext().getString().equals( "assignment "));  [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getLastChild().getNext().getString().equals( "assignment "));  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getLastChild().getNext().getString().equals( "assignment "));	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
5	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.CALL  &&  n.getChildCount()  >  MAX_FOLD_NUMBER));  [CE]  orphaned  case  [FE]            AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.CALL  &&  n.getChildCount()  >  MAX_FOLD_NUMBER));  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.CALL  &&  n.getChildCount()  >  MAX_FOLD_NUMBER));	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
6	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getLastChild().getNext().getString().equals( "assignment ")));  [CE]  orphaned  case  [FE]              AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getLastChild().getNext().getString().equals( "assignment ")));  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getLastChild().getNext().getString().equals( "assignment ")));	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
7	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.CALL  &&  n.getChildCount()  >  MAX_FOLD_NUMBER  [CE]  orphaned  case  [FE]                AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.CALL  &&  n.getChildCount()  >  MAX_FOLD_NUMBER  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.CALL  &&  n.getChildCount()  >  MAX_FOLD_NUMBER	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
8	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]                  AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]    [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	  	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
9	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.VAR);  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.VAR);  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.VAR);	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
10	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.GETPROP);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.GETPROP);  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.GETPROP);	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
11	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.FUNCTION);  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.FUNCTION);	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
12	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR);  [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR);  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR);	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
13	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [CE]  orphaned  case  [FE]            AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
14	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.NEW);  [CE]  orphaned  case  [FE]              AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.NEW);  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME  &&  n.getChildCount()  >  MAX_FOLD_NUMBER)||(n.getType()  ==  Token.NEW);	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
15	[BUG]  [BUGGY]  return  n.getType()  ==  Token.ASSIGN;  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return  n.getType()  ==  Token.ASSIGN;  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return  n.getType()  ==  Token.ASSIGN;	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
16	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT;  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return  n.getType()  ==  Token.EXPR_RESULT;	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
17	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME;  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return  n.getType()  ==  Token.NAME;  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return  n.getType()  ==  Token.NAME;	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
18	[BUG]  [BUGGY]  return(n.getType()  ==  Token.NAME);  [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return(n.getType()  ==  Token.NAME);  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return(n.getType()  ==  Token.NAME);	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
19	[BUG]  [BUGGY]  return  n.getType()  ==  Token.RETURN;  [CE]  orphaned  case  [FE]            AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return  n.getType()  ==  Token.RETURN;  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return  n.getType()  ==  Token.RETURN;	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
20	[BUG]  [BUGGY]  return  n.getType()  ==  Token.VAR;  [CE]  orphaned  case  [FE]              AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  [BUGGY]  return  n.getType()  ==  Token.VAR;  [BUGGY]  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	1419	1419	1	replace	return  n.getType()  ==  Token.VAR;	return  false;  	non-compiled	[CE]  orphaned  case	37	None	replace
