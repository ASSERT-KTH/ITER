bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  parent  =  n.getAssignmentTarget(n);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getAssignmentTarget(n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getAssignmentTarget(n);	  Node    parent    =    n.getAssignmentTarget();    	non-compiled	[CE]  ';'  expected	12	None	replace
2	[BUG]  [BUGGY]  Node  parent  =  n.getAncestor(4);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getAncestor(4);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getAncestor(4);	  Node    parent    =    n.getAncestor(3);    	non-compiled	[CE]  ';'  expected	18	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETELEM);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETELEM);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETELEM);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()!=  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(parent.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.GETELEM);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.GETELEM);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.GETELEM);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.NAME);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.GETPROP);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
9	[BUG]  [BUGGY]  Node  parent  =  n.getAssignedParentNode();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getAssignedParentNode();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getAssignedParentNode();	  Node    parent    =    n.getImmediateParentNode();    	non-compiled	[CE]  ';'  expected	10	None	replace
10	[BUG]  [BUGGY]  Node  parent  =  n.getOwner();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getOwner();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getOwner();	  Node    parent    =    n.getOwnerNode();    	non-compiled	[CE]  ';'  expected	1	None	replace
11	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  n)  {  return  false;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  n)  {  return  false;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  n)  {  return  false;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
12	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  false;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  false;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  false;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
13	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  n.getFirstChild()  ==  n)  {  return  false;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  n.getFirstChild()  ==  n)  {  return  false;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  n.getFirstChild()  ==  n)  {  return  false;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
14	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  return  false;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  return  false;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  return  false;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
15	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getLastChild()  ==  n)  {  return  false;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getLastChild()  ==  n)  {  return  false;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(n)&&  n.getLastChild()  ==  n)  {  return  false;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
16	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  n.getFirstChild()  ==  n)  {  return  false;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  n.getFirstChild()  ==  n)  {  return  false;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(parent)||  n.getFirstChild()  ==  n)  {  return  false;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
17	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
18	[BUG]  [BUGGY]  parent  ==  NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  parent  ==  NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	parent  ==  NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
19	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  parent)  {  return  true;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  parent)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  parent)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
20	[BUG]  [BUGGY]  parent  ==  NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  parent  ==  NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	parent  ==  NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
21	[BUG]  [BUGGY]  parent  ==  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  parent  ==  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	parent  ==  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
22	[BUG]  [BUGGY]  parent!=  NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  parent!=  NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	parent!=  NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
23	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
24	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getLastChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getLastChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(n)&&  n.getLastChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
25	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
26	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.NAME);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.VAR);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.VAR);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.VAR);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.FUNCTION);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.ASSIGNMENT);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.ASSIGNMENT);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(parent.getType()  ==  Token.ASSIGNMENT);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.ASSIGNMENT);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.ASSIGNMENT);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()!=  Token.ASSIGNMENT);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
32	[BUG]  [BUGGY]  Node  parent  =  n.getParentNext();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getParentNext();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getParentNext();	  Node    parent    =    n.getParentFirstChild();    	non-compiled	[CE]  ';'  expected	21	None	replace
33	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerParent();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getOwnerParent();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getOwnerParent();	  Node    parent    =    n.getOwnerDocument();    	non-compiled	[CE]  ';'  expected	26	None	replace
34	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerStructure();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getOwnerStructure();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getOwnerStructure();	  Node    parent    =    n.getOwnerDocument();    	non-compiled	[CE]  ';'  expected	26	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getChildCount());  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getChildCount());  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getChildCount());	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
41	[BUG]  [BUGGY]  Node  parent  =  n.getSecondaryParent();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getSecondaryParent();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getSecondaryParent();	  Node    parent    =    n.getAssignedParent();    	non-compiled	[CE]  ';'  expected	16	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.ASSIGN);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.ASSIGN);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()!=  Token.ASSIGN);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  ';'  expected	5	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  ||  n.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  ||  n.getType()  ==  Token.NAME);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGN  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  ';'  expected	5	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.ASSIGN);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.ASSIGN);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(parent.getType()  ==  Token.ASSIGN);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  ';'  expected	5	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  &&!NodeUtil.isAssignmentOp(n));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  &&!NodeUtil.isAssignmentOp(n));  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGN  &&!NodeUtil.isAssignmentOp(n));	  Preconditions.checkState(n.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  ';'  expected	5	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.ASSIGN);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.ASSIGN);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.ASSIGN);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  ';'  expected	5	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  ||  n.getType()  ==  Token.FUNCTION);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGN  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  ';'  expected	5	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.EXPR_RESULT);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(parent.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  ';'  expected	4	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  ';'  expected	4	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  ';'  expected	4	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.CALL);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.CALL);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.CALL);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  ';'  expected	4	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  ';'  expected	4	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.GETELEM);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.GETELEM);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.GETELEM);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  ';'  expected	4	None	replace
54	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(parent)||  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)||    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
55	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()!=  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()!=  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()!=  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)||    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  n)  {  return  false;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  n)  {  return  false;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  n)  {  return  false;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
57	[BUG]  [BUGGY]  Node  parent  =  n.parentNode();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.parentNode();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.parentNode();	  Node    parent    =    n.cloneTree();    	non-compiled	[CE]  ';'  expected	15	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(NodeUtil.isAssignmentOp(n)||  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)||    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
59	[BUG]  [BUGGY]  parent  ==  n  ||  NodeUtil.isAssignmentOp(parent)||  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  parent  ==  n  ||  NodeUtil.isAssignmentOp(parent)||  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	parent  ==  n  ||  NodeUtil.isAssignmentOp(parent)||  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)||    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
60	[BUG]  [BUGGY]  parent!=  if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  parent!=  if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	parent!=  if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
61	[BUG]  [BUGGY]  parent  ==  n  ||  NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  parent  ==  n  ||  NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	parent  ==  n  ||  NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
62	[BUG]  [BUGGY]  parent!=  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  parent!=  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	parent!=  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(n));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(n));  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(n));	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||!NodeUtil.isAssignmentOp(n));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||!NodeUtil.isAssignmentOp(n));  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||!NodeUtil.isAssignmentOp(n));	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  n);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  ';'  expected	4	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT)||!NodeUtil.isAssignmentOp(n);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT)||!NodeUtil.isAssignmentOp(n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT)||!NodeUtil.isAssignmentOp(n);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  ';'  expected	4	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
69	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerFunction();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getOwnerFunction();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getOwnerFunction();	  Node    parent    =    n.getAssignedParent();    	non-compiled	[CE]  ';'  expected	16	None	replace
70	[BUG]  [BUGGY]  Node  parent  =  n.getParentLastChild();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getParentLastChild();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getParentLastChild();	  Node    parent    =    n.getParentFirstChild();    	non-compiled	[CE]  ';'  expected	21	None	replace
71	[BUG]  [BUGGY]  Node  parent  =  n.getAncestor(2).getParent();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getAncestor(2).getParent();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getAncestor(2).getParent();	  Node    parent    =    n.getAncestor(2);    	non-compiled	[CE]  ';'  expected	9	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getFirstChild()  ==  n);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getFirstChild()  ==  n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
73	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||!NodeUtil.isAssignmentOp(n));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||!NodeUtil.isAssignmentOp(n));  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||!NodeUtil.isAssignmentOp(n));	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  &&!NodeUtil.isAssignmentOp(n));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  &&!NodeUtil.isAssignmentOp(n));  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  &&!NodeUtil.isAssignmentOp(n));	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
75	[BUG]  [BUGGY]  Node  parent  =  n.item(0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.item(0);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.item(0);	  Node    parent    =    n.removeLastChild();    	non-compiled	[CE]  ';'  expected	8	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getFirstChild()  ==  n);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getFirstChild()  ==  n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
77	[BUG]  [BUGGY]  Node  parent  =  n.getAssignmentParent();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getAssignmentParent();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getAssignmentParent();	  Node    parent    =    n.getAssignmentNode();    	non-compiled	[CE]  ';'  expected	14	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.ASSIGNMENT);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.ASSIGNMENT);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.ASSIGNMENT);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.BLOCK);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.BLOCK);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGNMENT  ||  n.getType()  ==  Token.BLOCK);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGNMENT);    	non-compiled	[CE]  ';'  expected	6	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getFirstChild());  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getFirstChild());  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  n.getFirstChild()  ==  n);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  n.getFirstChild()  ==  n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getString());  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getString());  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getString());	  Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  ';'  expected	7	None	replace
83	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerDocumentNode();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getOwnerDocumentNode();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getOwnerDocumentNode();	  Node    parent    =    n.getImmediateParentNode();    	non-compiled	[CE]  ';'  expected	10	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  &&  n.getFirstChild()  ==  n);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  &&  n.getFirstChild()  ==  n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  &&  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  n);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  n);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  ';'  expected	3	None	replace
86	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerChild();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getOwnerChild();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getOwnerChild();	  Node    parent    =    n.getPreviousChild();    	non-compiled	[CE]  ';'  expected	2	None	replace
87	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isName(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    parent)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
88	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isName(n)||  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isName(n)||  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)||    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
89	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)||    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
90	[BUG]  [BUGGY]  parent  ==  n  ||  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  parent  ==  n  ||  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	parent  ==  n  ||  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)||    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
91	[BUG]  [BUGGY]  Node  parent  =  n.parent;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.parent;  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.parent;	  Node    parent    =    n.cloneTree();    	non-compiled	[CE]  ';'  expected	15	None	replace
92	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  ||  n.getFirstChild()  ==  n);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  ||  n.getFirstChild()  ==  n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGN  ||  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  ';'  expected	5	None	replace
93	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()  ==  n);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()  ==  n);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkState(n.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.ASSIGN);    	non-compiled	[CE]  ';'  expected	5	None	replace
94	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	if(NodeUtil.isFunction(n)&&  n.getFirstChild()  ==  n)  {  return  true;  }	  if(NodeUtil.isAssignmentOp(n)&&    n.getFirstChild()    ==    n)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  ';'  expected	4	None	replace
96	[BUG]  [BUGGY]  Node  parent  =  n.getParentTree();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  isAssignmentTarget(Node  n)  {      [BUGGY]  Node  parent  =  n.getParentTree();  [BUGGY]      if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1410	1410	1	replace	Node  parent  =  n.getParentTree();	  Node    parent    =    n.getParentFirstChild();    	non-compiled	[CE]  ';'  expected	21	None	replace
