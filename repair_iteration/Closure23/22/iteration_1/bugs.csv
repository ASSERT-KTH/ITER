bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  tryFoldComparison(subtree,  left,  right);  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldComparison(subtree,  left,  right);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldComparison(subtree,  left,  right);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
2	[BUG]  [BUGGY]  return  tryFoldBinaryOperator(subtree,  left,  right);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldBinaryOperator(subtree,  left,  right);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldBinaryOperator(subtree,  left,  right);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
3	[BUG]  [BUGGY]  return  tryFoldBinaryOperator(subtree);  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldBinaryOperator(subtree);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldBinaryOperator(subtree);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
4	[BUG]  [BUGGY]  return  tryFoldConstant(subtree,  left,  right);  [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldConstant(subtree,  left,  right);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldConstant(subtree,  left,  right);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
5	[BUG]  [BUGGY]  return  tryFoldComparison(subtree);  [CE]  orphaned  case  [FE]            AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldComparison(subtree);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldComparison(subtree);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
6	[BUG]  [BUGGY]  return  tryFoldBinaryOperator(subtree,  left);  [CE]  orphaned  case  [FE]              AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldBinaryOperator(subtree,  left);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldBinaryOperator(subtree,  left);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
7	[BUG]  [BUGGY]  return  tryFoldUnknownComparison(subtree,  left,  right);  [CE]  orphaned  case  [FE]                AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldUnknownComparison(subtree,  left,  right);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldUnknownComparison(subtree,  left,  right);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
8	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]                  AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]    [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	  	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
9	[BUG]  [BUGGY]  return  tryFoldBinaryOperator(subtree.cloneTree(),  left,  right);  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldBinaryOperator(subtree.cloneTree(),  left,  right);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldBinaryOperator(subtree.cloneTree(),  left,  right);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
10	[BUG]  [BUGGY]  return  tryFoldDeclaration(subtree,  left,  right);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldDeclaration(subtree,  left,  right);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldDeclaration(subtree,  left,  right);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
11	[BUG]  [BUGGY]  return  tryFoldConstants(subtree,  left,  right);  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldConstants(subtree,  left,  right);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldConstants(subtree,  left,  right);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
12	[BUG]  [BUGGY]  return  tryFoldBinaryOperand(subtree,  left,  right);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  return  tryFoldComparison(subtree,  left,  right);  default:  [BUGGY]  return  tryFoldBinaryOperand(subtree,  left,  right);  [BUGGY]  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  boolean  late  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.2581988897471611	177	177	1	replace	return  tryFoldBinaryOperand(subtree,  left,  right);	return  subtree;  	non-compiled	[CE]  orphaned  case	43	None	replace
