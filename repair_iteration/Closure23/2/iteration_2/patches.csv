bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  right  =  right.getNext();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  right.getNext();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  right.getNext();	  Node    right    =    n.getNext();    	non-compiled	[CE]  	16	None	replace
2	[BUG]  [BUGGY]  Node  right  =  n.getLastChild();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  n.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  n.getLastChild();	  Node    right    =    n.getNext();    	non-compiled	[CE]  	16	None	replace
3	[BUG]  [BUGGY]  Node  right  =  parent.getNext();  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  parent.getNext();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  parent.getNext();	  Node    right    =    n.getNext();    	non-compiled	[CE]  	16	None	replace
4	[BUG]  [BUGGY]  Node  right  =  n.getRight();  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  n.getRight();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  n.getRight();	  Node    right    =    n.getNext();    	non-compiled	[CE]  	16	None	replace
5	[BUG]  [BUGGY]  Node  right  =  n.getParent();  [CE]  [FE]                                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  n.getParent();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  n.getParent();	  Node    right    =    n.getNext();    	non-compiled	[CE]  	16	None	replace
6	[BUG]  [BUGGY]  double  index  =  left.getDouble()  *  2;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getDouble()  *  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getDouble()  *  2;	  double    index    =    right.getDouble()    *    2;    	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  double  index  =  right.getDouble()  *  2  +  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getDouble()  *  2  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getDouble()  *  2  +  1;	  double    index    =    right.getDouble()    *    2;    	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]  double  index  =  right.getDouble()  *  4;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getDouble()  *  4;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getDouble()  *  4;	  double    index    =    right.getDouble()    *    2;    	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  double  index  =  left.getIndex()  -  1;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getIndex()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getIndex()  -  1;	  double    index    =    right.getIndex()    -    1;    	non-compiled	[CE]  	23	None	replace
10	[BUG]  [BUGGY]  double  index  =  n.getIndex()  -  1;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getIndex()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getIndex()  -  1;	  double    index    =    right.getIndex()    -    1;    	non-compiled	[CE]  	23	None	replace
11	[BUG]  [BUGGY]  double  index  =  right.getDouble()  /  3;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getDouble()  /  3;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getDouble()  /  3;	  double    index    =    right.getDouble()    /    1;    	non-compiled	[CE]  	40	None	replace
12	[BUG]  [BUGGY]  int  index  =  left.getIndex();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  left.getIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  left.getIndex();	  int    index    =    n.getIndex();    	non-compiled	[CE]  	13	None	replace
13	[BUG]  [BUGGY]  int  index  =  n.getIndex()  -  1;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  n.getIndex()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  n.getIndex()  -  1;	  int    index    =    n.getIndex();    	non-compiled	[CE]  	13	None	replace
14	[BUG]  [BUGGY]  int  index  =  parent.getIndex();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  parent.getIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  parent.getIndex();	  int    index    =    n.getIndex();    	non-compiled	[CE]  	13	None	replace
15	[BUG]  [BUGGY]  int  index  =  n.getIndex()  +  1;  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  n.getIndex()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  n.getIndex()  +  1;	  int    index    =    n.getIndex();    	non-compiled	[CE]  	13	None	replace
16	[BUG]  [BUGGY]  Integer  index  =  right.getIndex();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Integer  index  =  right.getIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Integer  index  =  right.getIndex();	  int    index    =    n.getIndex();    	non-compiled	[CE]  	13	None	replace
17	[BUG]  [BUGGY]  Double  index  =  right.getDouble()  +  1;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  right.getDouble()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  right.getDouble()  +  1;	  double    index    =    n.getDouble()    +    1;    	non-compiled	[CE]  	43	None	replace
18	[BUG]  [BUGGY]  double  index  =  left.getDouble()  /  4;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getDouble()  /  4;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getDouble()  /  4;	  double    index    =    right.getDouble()    /    4;    	non-compiled	[CE]  	10	None	replace
19	[BUG]  [BUGGY]  double  index  =  n.getIndex()  +  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getIndex()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getIndex()  +  1;	  double    index    =    n.getIndex();    	non-compiled	[CE]  	26	None	replace
20	[BUG]  [BUGGY]  double  index  =  left.getIndex()  +  1;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getIndex()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getIndex()  +  1;	  double    index    =    right.getIndex()    +    1;    	non-compiled	[CE]  	25	None	replace
21	[BUG]  [BUGGY]  double  index  =  right.getIndex()  /  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getIndex()  /  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getIndex()  /  1;	  double    index    =    right.getIndex()    +    1;    	non-compiled	[CE]  	25	None	replace
22	[BUG]  [BUGGY]  double  index  =  left.getIndex()  /  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getIndex()  /  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getIndex()  /  1;	  double    index    =    right.getIndex()    +    1;    	non-compiled	[CE]  	25	None	replace
23	[BUG]  [BUGGY]  Node  current  =  n.getNext();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  n.getNext();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  n.getNext();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	49	None	replace
24	[BUG]  [BUGGY]  Node  current  =  left.getLastChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  left.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  left.getLastChild();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	49	None	replace
25	[BUG]  [BUGGY]  Node  current  =  left.getNext()  -  1;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  left.getNext()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  left.getNext()  -  1;	  Node    current    =    left.getNext();    	non-compiled	[CE]  	49	None	replace
26	[BUG]  [BUGGY]  Node  current  =  left.getNext(),  right.getLastChild());  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  left.getNext(),  right.getLastChild());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  left.getNext(),  right.getLastChild());	  Node    current    =    left.getNext();    	non-compiled	[CE]  	49	None	replace
27	[BUG]  [BUGGY]  Node  current  =  left.getNext(),  right.getLastChild();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  left.getNext(),  right.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  left.getNext(),  right.getLastChild();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	49	None	replace
28	[BUG]  [BUGGY]  double  index  =  left.getIndex()  -  2;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getIndex()  -  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getIndex()  -  2;	  double    index    =    right.getIndex()    -    2;    	non-compiled	[CE]  	27	None	replace
29	[BUG]  [BUGGY]  Double  index  =  right.getIndex();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  right.getIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  right.getIndex();	  double    index    =    right.getIndex()    -    2;    	non-compiled	[CE]  	27	None	replace
30	[BUG]  [BUGGY]  Node  current  =  right.getLastChild();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  right.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  right.getLastChild();	  Node    current    =    right.getNext();    	non-compiled	[CE]  	52	None	replace
31	[BUG]  [BUGGY]  Node  current  =  right.getNext()  -  1;  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  right.getNext()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  right.getNext()  -  1;	  Node    current    =    right.getNext();    	non-compiled	[CE]  	52	None	replace
32	[BUG]  [BUGGY]  Node  current  =  right.getParent();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  right.getParent();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  right.getParent();	  Node    current    =    right.getNext();    	non-compiled	[CE]  	52	None	replace
33	[BUG]  [BUGGY]  Node  current  =  parent.getNext();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  parent.getNext();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  parent.getNext();	  Node    current    =    right.getNext();    	non-compiled	[CE]  	52	None	replace
34	[BUG]  [BUGGY]  double  index  =  left.getLong()  -  1;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getLong()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getLong()  -  1;	  double    index    =    left.getLong();    	non-compiled	[CE]  	18	None	replace
35	[BUG]  [BUGGY]  int  index  =  left.getLong();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  left.getLong();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  left.getLong();	  double    index    =    left.getLong();    	non-compiled	[CE]  	18	None	replace
36	[BUG]  [BUGGY]  Node  right  =  right.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  right.getFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  right.getFirstChild();	  Node    right    =    n.getFirstChild();    	non-compiled	[CE]  	12	None	replace
37	[BUG]  [BUGGY]  Node  right  =  left.getLastChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  left.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  left.getLastChild();	  Node    right    =    n.getFirstChild();    	non-compiled	[CE]  	12	None	replace
38	[BUG]  [BUGGY]  Node  right  =  right.getLastChild();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  right.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  right.getLastChild();	  Node    right    =    n.getFirstChild();    	non-compiled	[CE]  	12	None	replace
39	[BUG]  [BUGGY]  Node  right  =  parent.getFirstChild();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  parent.getFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  parent.getFirstChild();	  Node    right    =    n.getFirstChild();    	non-compiled	[CE]  	12	None	replace
40	[BUG]  [BUGGY]  int  index  =  right.getFirstChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getFirstChild();	  int    index    =    right.getLastChild();    	non-compiled	[CE]  	5	None	replace
41	[BUG]  [BUGGY]  int  index  =  left.getFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  left.getFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  left.getFirstChild();	  int    index    =    right.getLastChild();    	non-compiled	[CE]  	5	None	replace
42	[BUG]  [BUGGY]  int  index  =  left.getLastChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  left.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  left.getLastChild();	  int    index    =    right.getLastChild();    	non-compiled	[CE]  	5	None	replace
43	[BUG]  [BUGGY]  int  index  =  n.getLastChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  n.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  n.getLastChild();	  int    index    =    right.getLastChild();    	non-compiled	[CE]  	5	None	replace
44	[BUG]  [BUGGY]  int  index  =  n.getFirstChild();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  n.getFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  n.getFirstChild();	  int    index    =    right.getLastChild();    	non-compiled	[CE]  	5	None	replace
45	[BUG]  [BUGGY]  double  index  =  right.getFirstChild()  -  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getFirstChild()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getFirstChild()  -  1;	  double    index    =    right.getLastChild()    -    1;    	non-compiled	[CE]  	6	None	replace
46	[BUG]  [BUGGY]  double  index  =  left.getLastChild()  -  1;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getLastChild()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getLastChild()  -  1;	  double    index    =    right.getLastChild()    -    1;    	non-compiled	[CE]  	6	None	replace
47	[BUG]  [BUGGY]  double  index  =  left.getFirstChild()  -  1;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getFirstChild()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getFirstChild()  -  1;	  double    index    =    right.getLastChild()    -    1;    	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  double  index  =  n.getLastChild()  -  1;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getLastChild()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getLastChild()  -  1;	  double    index    =    right.getLastChild()    -    1;    	non-compiled	[CE]  	6	None	replace
49	[BUG]  [BUGGY]  double  index  =  right.getLastChild()  +  1;  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getLastChild()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getLastChild()  +  1;	  double    index    =    right.getLastChild()    -    1;    	non-compiled	[CE]  	6	None	replace
50	[BUG]  [BUGGY]  double  index  =  left.getDouble()  *  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getDouble()  *  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getDouble()  *  1;	  double    index    =    right.getDouble()    *    1;    	non-compiled	[CE]  	41	None	replace
51	[BUG]  [BUGGY]  double  index  =  n.getDouble()  *  1;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getDouble()  *  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getDouble()  *  1;	  double    index    =    right.getDouble()    *    1;    	non-compiled	[CE]  	41	None	replace
52	[BUG]  [BUGGY]  int  index  =  right.getInt();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getInt();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getInt();	  int    index    =    n.getDouble();    	non-compiled	[CE]  	29	None	replace
53	[BUG]  [BUGGY]  double  index  =  left.getInt();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getInt();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getInt();	  double    index    =    right.getInt();    	non-compiled	[CE]  	21	None	replace
54	[BUG]  [BUGGY]  double  index  =  right.getInt()  -  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getInt()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getInt()  -  1;	  double    index    =    right.getInt();    	non-compiled	[CE]  	21	None	replace
55	[BUG]  [BUGGY]  double  index  =  n.getInt();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getInt();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getInt();	  double    index    =    right.getInt();    	non-compiled	[CE]  	21	None	replace
56	[BUG]  [BUGGY]  double  index  =  left.getDouble()  /  2  +  1;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getDouble()  /  2  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getDouble()  /  2  +  1;	  double    index    =    right.getDouble()    /    2    +    1;    	non-compiled	[CE]  	9	None	replace
57	[BUG]  [BUGGY]  double  index  =  right.getLowerBound();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getLowerBound();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getLowerBound();	  double    index    =    right.getUpperBound();    	non-compiled	[CE]  	19	None	replace
58	[BUG]  [BUGGY]  double  index  =  left.getUpperBound();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getUpperBound();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getUpperBound();	  double    index    =    right.getUpperBound();    	non-compiled	[CE]  	19	None	replace
59	[BUG]  [BUGGY]  double  index  =  left.getLowerBound();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getLowerBound();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getLowerBound();	  double    index    =    right.getUpperBound();    	non-compiled	[CE]  	19	None	replace
60	[BUG]  [BUGGY]  double  index  =  n.getUpperBound();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getUpperBound();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getUpperBound();	  double    index    =    right.getUpperBound();    	non-compiled	[CE]  	19	None	replace
61	[BUG]  [BUGGY]  double  index  =  right.getUpperBound()  -  1;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getUpperBound()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getUpperBound()  -  1;	  double    index    =    right.getUpperBound();    	non-compiled	[CE]  	19	None	replace
62	[BUG]  [BUGGY]  double  index  =  right.getUpperBound()  +  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getUpperBound()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getUpperBound()  +  1;	  double    index    =    right.getUpperBound();    	non-compiled	[CE]  	19	None	replace
63	[BUG]  [BUGGY]  double  index  =  right.getImplicitValue();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getImplicitValue();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getImplicitValue();	  double    index    =    n.getLong();    	non-compiled	[CE]  	20	None	replace
64	[BUG]  [BUGGY]  Double  index  =  left.getDouble();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  left.getDouble();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  left.getDouble();	  Double    index    =    right.getDouble();    	non-compiled	[CE]  	48	None	replace
65	[BUG]  [BUGGY]  Double  index  =  right.getDouble()  -  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  right.getDouble()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  right.getDouble()  -  1;	  Double    index    =    right.getDouble();    	non-compiled	[CE]  	48	None	replace
66	[BUG]  [BUGGY]  Double  index  =  n.getDouble();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  n.getDouble();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  n.getDouble();	  Double    index    =    right.getDouble();    	non-compiled	[CE]  	48	None	replace
67	[BUG]  [BUGGY]  Double  index  =  right.getNumber();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  right.getNumber();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  right.getNumber();	  Double    index    =    right.getDouble();    	non-compiled	[CE]  	48	None	replace
68	[BUG]  [BUGGY]  double  index  =  right.getLowerCase();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getLowerCase();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getLowerCase();	  double    index    =    right.getFirstChild();    	non-compiled	[CE]  	1	None	replace
69	[BUG]  [BUGGY]  int  index  =  right.getIntValue();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getIntValue();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getIntValue();	  int    index    =    right.getDouble();    	non-compiled	[CE]  	30	None	replace
70	[BUG]  [BUGGY]  int  index  =  parent.getDouble();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  parent.getDouble();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  parent.getDouble();	  int    index    =    right.getDouble();    	non-compiled	[CE]  	30	None	replace
71	[BUG]  [BUGGY]  double  index  =  left.getNumber()  +  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getNumber()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getNumber()  +  1;	  double    index    =    right.getNumber()    +    1;    	non-compiled	[CE]  	38	None	replace
72	[BUG]  [BUGGY]  double  index  =  right.getNumber()  /  1;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getNumber()  /  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getNumber()  /  1;	  double    index    =    right.getNumber()    +    1;    	non-compiled	[CE]  	38	None	replace
73	[BUG]  [BUGGY]  double  index  =  left.getNumber()  /  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getNumber()  /  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getNumber()  /  1;	  double    index    =    right.getNumber()    +    1;    	non-compiled	[CE]  	38	None	replace
74	[BUG]  [BUGGY]  double  index  =  n.getNumber()  +  1;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getNumber()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getNumber()  +  1;	  double    index    =    right.getNumber()    +    1;    	non-compiled	[CE]  	38	None	replace
75	[BUG]  [BUGGY]  double  index  =  right.getRowIndex();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getRowIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getRowIndex();	  double    index    =    right.getColumnIndex();    	non-compiled	[CE]  	44	None	replace
76	[BUG]  [BUGGY]  double  index  =  right.getColumnIndex()  -  1;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getColumnIndex()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getColumnIndex()  -  1;	  double    index    =    right.getColumnIndex();    	non-compiled	[CE]  	44	None	replace
77	[BUG]  [BUGGY]  double  index  =  left.getColumnIndex();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getColumnIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getColumnIndex();	  double    index    =    right.getColumnIndex();    	non-compiled	[CE]  	44	None	replace
78	[BUG]  [BUGGY]  double  index  =  right.getColumnIndex()  +  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getColumnIndex()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getColumnIndex()  +  1;	  double    index    =    right.getColumnIndex();    	non-compiled	[CE]  	44	None	replace
79	[BUG]  [BUGGY]  double  index  =  n.getColumnIndex();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getColumnIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getColumnIndex();	  double    index    =    right.getColumnIndex();    	non-compiled	[CE]  	44	None	replace
80	[BUG]  [BUGGY]  double  index  =  right.getColumnIndex()  /  2;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getColumnIndex()  /  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getColumnIndex()  /  2;	  double    index    =    right.getColumnIndex();    	non-compiled	[CE]  	44	None	replace
81	[BUG]  [BUGGY]  double  index  =  left.getNumber()  -  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getNumber()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getNumber()  -  1;	  double    index    =    right.getNumber()    -    1;    	non-compiled	[CE]  	37	None	replace
82	[BUG]  [BUGGY]  double  index  =  right.getLowerCase()  -  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getLowerCase()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getLowerCase()  -  1;	  double    index    =    right.getNumber()    -    1;    	non-compiled	[CE]  	37	None	replace
83	[BUG]  [BUGGY]  double  index  =  n.getNumber()  -  1;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getNumber()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getNumber()  -  1;	  double    index    =    right.getNumber()    -    1;    	non-compiled	[CE]  	37	None	replace
84	[BUG]  [BUGGY]  double  index  =  right.getLength()  -  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getLength()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getLength()  -  1;	  double    index    =    right.getNumber()    -    1;    	non-compiled	[CE]  	37	None	replace
85	[BUG]  [BUGGY]  int  index  =  indexOf(right,  left);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right,  left);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right,  left);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
86	[BUG]  [BUGGY]  int  index  =  indexOf(left,  right,  0);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left,  right,  0);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left,  right,  0);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
87	[BUG]  [BUGGY]  int  index  =  indexOf(left,  right,  n);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left,  right,  n);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left,  right,  n);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
88	[BUG]  [BUGGY]  int  index  =  indexOf(n,  right);  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(n,  right);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(n,  right);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
89	[BUG]  [BUGGY]  int  index  =  indexOf(left,  right,  parent);  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left,  right,  parent);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left,  right,  parent);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
90	[BUG]  [BUGGY]  int  index  =  indexOf(left,  right  -  1);  [CE]  [FE]                                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left,  right  -  1);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left,  right  -  1);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
91	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  parent  =  left.getParent();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  parent  =  left.getParent();	  Node    parent    =    right.getParent();    	non-compiled	[CE]  	50	None	replace
92	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  parent  =  n.getParent();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  parent  =  n.getParent();	  Node    parent    =    right.getParent();    	non-compiled	[CE]  	50	None	replace
93	[BUG]  [BUGGY]  Node  parent  =  right.getNext();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  parent  =  right.getNext();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  parent  =  right.getNext();	  Node    parent    =    right.getParent();    	non-compiled	[CE]  	50	None	replace
94	[BUG]  [BUGGY]  Node  parent  =  left.getNext();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  parent  =  left.getNext();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  parent  =  left.getNext();	  Node    parent    =    right.getParent();    	non-compiled	[CE]  	50	None	replace
95	[BUG]  [BUGGY]  Node  parent  =  current.getParent();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  parent  =  current.getParent();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  parent  =  current.getParent();	  Node    parent    =    right.getParent();    	non-compiled	[CE]  	50	None	replace
96	[BUG]  [BUGGY]  Node  parent  =  right.getLastChild();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  parent  =  right.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  parent  =  right.getLastChild();	  Node    parent    =    right.getParent();    	non-compiled	[CE]  	50	None	replace
97	[BUG]  [BUGGY]  double  index  =  left.getIndex()  /  2;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getIndex()  /  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getIndex()  /  2;	  double    index    =    right.getIndex()    /    2;    	non-compiled	[CE]  	28	None	replace
98	[BUG]  [BUGGY]  double  index  =  right.getIndex()  /  2  +  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getIndex()  /  2  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getIndex()  /  2  +  1;	  double    index    =    right.getIndex()    /    2;    	non-compiled	[CE]  	28	None	replace
99	[BUG]  [BUGGY]  double  index  =  right.getIndex()  *  2;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getIndex()  *  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getIndex()  *  2;	  double    index    =    right.getIndex()    /    2;    	non-compiled	[CE]  	28	None	replace
100	[BUG]  [BUGGY]  double  index  =  n.getIndex()  /  2;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getIndex()  /  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getIndex()  /  2;	  double    index    =    right.getIndex()    /    2;    	non-compiled	[CE]  	28	None	replace
101	[BUG]  [BUGGY]  int  index  =  left.getNumber();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  left.getNumber();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  left.getNumber();	  double    index    =    left.getNumber();    	non-compiled	[CE]  	34	None	replace
102	[BUG]  [BUGGY]  double  index  =  left.getLowerCase();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getLowerCase();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getLowerCase();	  double    index    =    left.getNumber();    	non-compiled	[CE]  	34	None	replace
103	[BUG]  [BUGGY]  double  index  =  left.getLength();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getLength();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getLength();	  double    index    =    left.getNumber();    	non-compiled	[CE]  	34	None	replace
104	[BUG]  [BUGGY]  int  index  =  indexOf(right.getString());  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.getString());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.getString());	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
105	[BUG]  [BUGGY]  int  index  =  indexOf(right.getValue());  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.getValue());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.getValue());	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
106	[BUG]  [BUGGY]  int  index  =  indexOf(left.getLastChild());  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getLastChild());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getLastChild());	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
107	[BUG]  [BUGGY]  int  index  =  indexOf(right.getInput());  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.getInput());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.getInput());	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
108	[BUG]  [BUGGY]  int  index  =  indexOf(right.getIndex());  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.getIndex());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.getIndex());	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
109	[BUG]  [BUGGY]  int  index  =  indexOf(right.getType());  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.getType());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.getType());	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
110	[BUG]  [BUGGY]  double  index  =  right.getImplicitValue()  -  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getImplicitValue()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getImplicitValue()  -  1;	  double    index    =    right.getLong()    -    1;    	non-compiled	[CE]  	22	None	replace
111	[BUG]  [BUGGY]  int  index  =  right.getIndex()  -  1;  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getIndex()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getIndex()  -  1;	  int    index    =    right.getIndex();    	non-compiled	[CE]  	17	None	replace
112	[BUG]  [BUGGY]  int  index  =  right.getIndex()  +  1;  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getIndex()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getIndex()  +  1;	  int    index    =    right.getIndex();    	non-compiled	[CE]  	17	None	replace
113	[BUG]  [BUGGY]  int  index  =  right.getIndex()  -  2;  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getIndex()  -  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getIndex()  -  2;	  int    index    =    right.getIndex();    	non-compiled	[CE]  	17	None	replace
114	[BUG]  [BUGGY]  double  index  =  n.getLength();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getLength();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getLength();	  double    index    =    right.getLength();    	non-compiled	[CE]  	53	None	replace
115	[BUG]  [BUGGY]  double  index  =  right.getLength()  +  1;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getLength()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getLength()  +  1;	  double    index    =    right.getLength();    	non-compiled	[CE]  	53	None	replace
116	[BUG]  [BUGGY]  int  index  =  right.getLength();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getLength();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getLength();	  double    index    =    right.getLength();    	non-compiled	[CE]  	53	None	replace
117	[BUG]  [BUGGY]  int  index  =  n.getNumber();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  n.getNumber();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  n.getNumber();	  int    index    =    right.getNumber();    	non-compiled	[CE]  	36	None	replace
118	[BUG]  [BUGGY]  int  index  =  parent.getNumber();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  parent.getNumber();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  parent.getNumber();	  int    index    =    right.getNumber();    	non-compiled	[CE]  	36	None	replace
119	[BUG]  [BUGGY]  int  index  =  left.getInt();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  left.getInt();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  left.getInt();	  int    index    =    left.getDouble();    	non-compiled	[CE]  	33	None	replace
120	[BUG]  [BUGGY]  Node  right  =  left.getNext()  -  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  left.getNext()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  left.getNext()  -  1;	  Node    right    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
121	[BUG]  [BUGGY]  Node  right  =  left.getParent();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  left.getParent();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  left.getParent();	  Node    right    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
122	[BUG]  [BUGGY]  int  index  =  indexOf(right.getString(),  left.getString());  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.getString(),  left.getString());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.getString(),  left.getString());	  int    index    =    indexOf(left.getString(),    right.getString());    	non-compiled	[CE]  	46	None	replace
123	[BUG]  [BUGGY]  int  index  =  indexOf(right.getString(),  right.getString());  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.getString(),  right.getString());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.getString(),  right.getString());	  int    index    =    indexOf(left.getString(),    right.getString());    	non-compiled	[CE]  	46	None	replace
124	[BUG]  [BUGGY]  int  index  =  indexOf(left.getString(),  right.getString(),  MAX_FOLD_NUMBER);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getString(),  right.getString(),  MAX_FOLD_NUMBER);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getString(),  right.getString(),  MAX_FOLD_NUMBER);	  int    index    =    indexOf(left.getString(),    right.getString());    	non-compiled	[CE]  	46	None	replace
125	[BUG]  [BUGGY]  int  index  =  indexOf(left.getString(),  right.getValue());  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getString(),  right.getValue());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getString(),  right.getValue());	  int    index    =    indexOf(left.getString(),    right.getString());    	non-compiled	[CE]  	46	None	replace
126	[BUG]  [BUGGY]  int  index  =  indexOf(left.getString(),  right.getString()  +  1);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getString(),  right.getString()  +  1);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getString(),  right.getString()  +  1);	  int    index    =    indexOf(left.getString(),    right.getString());    	non-compiled	[CE]  	46	None	replace
127	[BUG]  [BUGGY]  int  index  =  indexOf(left.getString(),  left.getString());  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getString(),  left.getString());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getString(),  left.getString());	  int    index    =    indexOf(left.getString(),    right.getString());    	non-compiled	[CE]  	46	None	replace
128	[BUG]  [BUGGY]  int  index  =(int)right.getIndex()  -  1;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =(int)right.getIndex()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =(int)right.getIndex()  -  1;	  int    index    =(int)right.getIndex();    	non-compiled	[CE]  	51	None	replace
129	[BUG]  [BUGGY]  int  index  =(int)right.getIndex()  +  1;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =(int)right.getIndex()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =(int)right.getIndex()  +  1;	  int    index    =(int)right.getIndex();    	non-compiled	[CE]  	51	None	replace
130	[BUG]  [BUGGY]  int  index  =(int)right.getLength();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =(int)right.getLength();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =(int)right.getLength();	  int    index    =(int)right.getIndex();    	non-compiled	[CE]  	51	None	replace
131	[BUG]  [BUGGY]  int  index  =(int)n.getIndex();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =(int)n.getIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =(int)n.getIndex();	  int    index    =(int)right.getIndex();    	non-compiled	[CE]  	51	None	replace
132	[BUG]  [BUGGY]  int  index  =(int)right.getIndex()  *  2;  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =(int)right.getIndex()  *  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =(int)right.getIndex()  *  2;	  int    index    =(int)right.getIndex();    	non-compiled	[CE]  	51	None	replace
133	[BUG]  [BUGGY]  int  index  =(int)right.getIndex()  -  2;  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =(int)right.getIndex()  -  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =(int)right.getIndex()  -  2;	  int    index    =(int)right.getIndex();    	non-compiled	[CE]  	51	None	replace
134	[BUG]  [BUGGY]  int  index  =  indexOf(left);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left);	  int    index    =    indexOf(right);    	non-compiled	[CE]  	14	None	replace
135	[BUG]  [BUGGY]  int  index  =  indexOfSupported(right);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOfSupported(right);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOfSupported(right);	  int    index    =    indexOf(right);    	non-compiled	[CE]  	14	None	replace
136	[BUG]  [BUGGY]  int  index  =  indexOfSupported(n);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOfSupported(n);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOfSupported(n);	  int    index    =    indexOf(right);    	non-compiled	[CE]  	14	None	replace
137	[BUG]  [BUGGY]  int  index  =  indexOfSupported(left);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOfSupported(left);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOfSupported(left);	  int    index    =    indexOf(right);    	non-compiled	[CE]  	14	None	replace
138	[BUG]  [BUGGY]  int  index  =  indexOf(n);  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(n);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(n);	  int    index    =    indexOf(right);    	non-compiled	[CE]  	14	None	replace
139	[BUG]  [BUGGY]  double  index  =  left.getImmediateParentPointer();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getImmediateParentPointer();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getImmediateParentPointer();	  double    index    =    right.getImmediateParentPointer();    	non-compiled	[CE]  	55	None	replace
140	[BUG]  [BUGGY]  double  index  =  right.getImmediateParentPointer()  -  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getImmediateParentPointer()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getImmediateParentPointer()  -  1;	  double    index    =    right.getImmediateParentPointer();    	non-compiled	[CE]  	55	None	replace
141	[BUG]  [BUGGY]  double  index  =  right.getImmediateParentPointer()  +  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getImmediateParentPointer()  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getImmediateParentPointer()  +  1;	  double    index    =    right.getImmediateParentPointer();    	non-compiled	[CE]  	55	None	replace
142	[BUG]  [BUGGY]  double  index  =  n.getImmediateParentPointer();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getImmediateParentPointer();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getImmediateParentPointer();	  double    index    =    right.getImmediateParentPointer();    	non-compiled	[CE]  	55	None	replace
143	[BUG]  [BUGGY]  double  index  =  right.getImmediateIndex();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getImmediateIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getImmediateIndex();	  double    index    =    right.getImmediateParentPointer();    	non-compiled	[CE]  	55	None	replace
144	[BUG]  [BUGGY]  double  index  =  left.getDouble()  /  3;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getDouble()  /  3;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getDouble()  /  3;	  double    index    =    left.getDouble()    /    1;    	non-compiled	[CE]  	42	None	replace
145	[BUG]  [BUGGY]  Node  current  =  right.getFirstChild();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  right.getFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  right.getFirstChild();	  Node    current    =    right.getNext();    	non-compiled	[CE]  	52	None	replace
146	[BUG]  [BUGGY]  double  index  =  right.getDouble()  /  2  *  1;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getDouble()  /  2  *  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getDouble()  /  2  *  1;	  double    index    =    right.getDouble()    /    2    +    1;    	non-compiled	[CE]  	9	None	replace
147	[BUG]  [BUGGY]  double  index  =  right.getDouble()  /  2.0  +  1;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getDouble()  /  2.0  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getDouble()  /  2.0  +  1;	  double    index    =    right.getDouble()    /    2    +    1;    	non-compiled	[CE]  	9	None	replace
148	[BUG]  [BUGGY]  if(right!=  null)  {  int  index  =  indexOf(right);  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  if(right!=  null)  {  int  index  =  indexOf(right);  }  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	if(right!=  null)  {  int  index  =  indexOf(right);  }	  int    index    =    indexOf(right);    	non-compiled	[CE]  	14	None	replace
149	[BUG]  [BUGGY]  Node  current  =  left.removeFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  left.removeFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  left.removeFirstChild();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	49	None	replace
150	[BUG]  [BUGGY]  Node  current  =  left.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  left.getFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  left.getFirstChild();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	49	None	replace
151	[BUG]  [BUGGY]  Double  index  =  right.getFirstChild();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  right.getFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  right.getFirstChild();	  double    index    =    n.getFirstChild();    	non-compiled	[CE]  	54	None	replace
152	[BUG]  [BUGGY]  float  index  =  n.getIndex();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  float  index  =  n.getIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	float  index  =  n.getIndex();	  int    index    =    n.getIndex();    	non-compiled	[CE]  	13	None	replace
153	[BUG]  [BUGGY]  int  index  =  indexOf(left.getString(),  right.getChars());  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getString(),  right.getChars());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getString(),  right.getChars());	  int    index    =    indexOf(left.getString(),    right.getString());    	non-compiled	[CE]  	46	None	replace
154	[BUG]  [BUGGY]  Node  parent  =  right.removeFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  parent  =  right.removeFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  parent  =  right.removeFirstChild();	  Node    parent    =    right.getParent();    	non-compiled	[CE]  	50	None	replace
155	[BUG]  [BUGGY]  double  index  =  right.getColumnIndex()  -  2;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getColumnIndex()  -  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getColumnIndex()  -  2;	  double    index    =    right.getColumnIndex();    	non-compiled	[CE]  	44	None	replace
156	[BUG]  [BUGGY]  int  index  =  indexOf(right.getString(),  MAX_FOLD_NUMBER);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.getString(),  MAX_FOLD_NUMBER);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.getString(),  MAX_FOLD_NUMBER);	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
157	[BUG]  [BUGGY]  int  index  =  indexOf(left.getString(),  MAX_FOLD_NUMBER);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getString(),  MAX_FOLD_NUMBER);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getString(),  MAX_FOLD_NUMBER);	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
158	[BUG]  [BUGGY]  int  index  =  indexOf(left.getString(),  right);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getString(),  right);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getString(),  right);	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
159	[BUG]  [BUGGY]  int  index  =  indexOf(right.toString());  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.toString());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.toString());	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
160	[BUG]  [BUGGY]  double  index  =  right.getDouble()  *  2  -  1;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getDouble()  *  2  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getDouble()  *  2  -  1;	  double    index    =    right.getDouble()    *    2;    	non-compiled	[CE]  	7	None	replace
161	[BUG]  [BUGGY]  Node  right  =  left.removeFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  left.removeFirstChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  left.removeFirstChild();	  Node    right    =    left.getFirstChild();    	non-compiled	[CE]  	45	None	replace
162	[BUG]  [BUGGY]  Node  right  =  left.cloneTree();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  left.cloneTree();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  left.cloneTree();	  Node    right    =    left.getFirstChild();    	non-compiled	[CE]  	45	None	replace
163	[BUG]  [BUGGY]  double  index  =  right.getDouble()  *  3;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getDouble()  *  3;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getDouble()  *  3;	  double    index    =    right.getDouble()    *    1;    	non-compiled	[CE]  	41	None	replace
164	[BUG]  [BUGGY]  int  index  =(int)left.getIndex();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =(int)left.getIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =(int)left.getIndex();	  int    index    =(int)right.getIndex();    	non-compiled	[CE]  	51	None	replace
165	[BUG]  [BUGGY]  float  index  =(float)right.getIndex();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  float  index  =(float)right.getIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	float  index  =(float)right.getIndex();	  int    index    =(int)right.getIndex();    	non-compiled	[CE]  	51	None	replace
166	[BUG]  [BUGGY]  int  index  =  left.getDouble()  -  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  left.getDouble()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  left.getDouble()  -  1;	  int    index    =    left.getDouble();    	non-compiled	[CE]  	33	None	replace
167	[BUG]  [BUGGY]  int  index  =  left.getLength();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  left.getLength();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  left.getLength();	  int    index    =    left.getDouble();    	non-compiled	[CE]  	33	None	replace
168	[BUG]  [BUGGY]  double  index  =  left.getDouble()  /  1  +  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getDouble()  /  1  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getDouble()  /  1  +  1;	  double    index    =    left.getDouble()    /    1;    	non-compiled	[CE]  	42	None	replace
169	[BUG]  [BUGGY]  Double  index  =  right.getLastChild();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  right.getLastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  right.getLastChild();	  double    index    =    n.getLastChild();    	non-compiled	[CE]  	4	None	replace
170	[BUG]  [BUGGY]  double  index  =  right.getImmediateParentIndex();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getImmediateParentIndex();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getImmediateParentIndex();	  double    index    =    right.getImmediateParentPointer();    	non-compiled	[CE]  	55	None	replace
171	[BUG]  [BUGGY]  double  index  =  right.getImmediatePosition();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getImmediatePosition();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getImmediatePosition();	  double    index    =    right.getImmediateParentPointer();    	non-compiled	[CE]  	55	None	replace
172	[BUG]  [BUGGY]  int  index  =  indexOf(left,  left);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left,  left);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left,  left);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
173	[BUG]  [BUGGY]  int  index  =  indexOf(left,  right)+  1;  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left,  right)+  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left,  right)+  1;	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
174	[BUG]  [BUGGY]  int  index  =  indexOf(left,  right  +  1);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left,  right  +  1);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left,  right  +  1);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
175	[BUG]  [BUGGY]  double  index  =  right.getIndex()  /  4;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getIndex()  /  4;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getIndex()  /  4;	  double    index    =    right.getIndex()    /    2;    	non-compiled	[CE]  	28	None	replace
176	[BUG]  [BUGGY]  int  index  =  left.getlastChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  left.getlastChild();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  left.getlastChild();	  int    index    =    right.getLastChild();    	non-compiled	[CE]  	5	None	replace
177	[BUG]  [BUGGY]  double  index  =  right.getDouble()  /  4  +  1;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getDouble()  /  4  +  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getDouble()  /  4  +  1;	  double    index    =    right.getDouble()    /    4;    	non-compiled	[CE]  	10	None	replace
178	[BUG]  [BUGGY]  int  index  =  right.getNumber()  -  1;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getNumber()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getNumber()  -  1;	  int    index    =    right.getNumber();    	non-compiled	[CE]  	36	None	replace
179	[BUG]  [BUGGY]  double  index  =  left.getFirstChild().getLong();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  left.getFirstChild().getLong();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  left.getFirstChild().getLong();	  double    index    =    left.getLong();    	non-compiled	[CE]  	18	None	replace
180	[BUG]  [BUGGY]  Node  right  =  right.getParent();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  right  =  right.getParent();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  right  =  right.getParent();	  Node    right    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
181	[BUG]  [BUGGY]  double  index  =  n.getDouble()  *  2;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getDouble()  *  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getDouble()  *  2;	  double    index    =    right.getDouble()    *    2;    	non-compiled	[CE]  	7	None	replace
182	[BUG]  [BUGGY]  double  index  =  right.getName()  -  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getName()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getName()  -  1;	  double    index    =    right.getNumber()    -    1;    	non-compiled	[CE]  	37	None	replace
183	[BUG]  [BUGGY]  double  index  =  right.getValue()  -  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getValue()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getValue()  -  1;	  double    index    =    right.getNumber()    -    1;    	non-compiled	[CE]  	37	None	replace
184	[BUG]  [BUGGY]  int  index  =  indexOfSupported(right.getString());  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOfSupported(right.getString());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOfSupported(right.getString());	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
185	[BUG]  [BUGGY]  int  index  =  indexOf(left.getString()  +  1);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getString()  +  1);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getString()  +  1);	  int    index    =    indexOf(left.getString());    	non-compiled	[CE]  	47	None	replace
186	[BUG]  [BUGGY]  int  index  =  right.getDouble()  -  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getDouble()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getDouble()  -  1;	  int    index    =    right.getDouble();    	non-compiled	[CE]  	30	None	replace
187	[BUG]  [BUGGY]  double  index  =  n.getDouble()  /  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getDouble()  /  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getDouble()  /  1;	  double    index    =    left.getDouble()    /    1;    	non-compiled	[CE]  	42	None	replace
188	[BUG]  [BUGGY]  double  index  =  n.getLowerBound();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  n.getLowerBound();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  n.getLowerBound();	  double    index    =    right.getUpperBound();    	non-compiled	[CE]  	19	None	replace
189	[BUG]  [BUGGY]  double  index  =  right.getIndex()  *  1;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getIndex()  *  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getIndex()  *  1;	  double    index    =    right.getIndex()    -    1;    	non-compiled	[CE]  	23	None	replace
190	[BUG]  [BUGGY]  Node  current  =  left.getParent();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Node  current  =  left.getParent();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Node  current  =  left.getParent();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	49	None	replace
191	[BUG]  [BUGGY]  int  index  =  indexOfImmutableValue(right);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOfImmutableValue(right);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOfImmutableValue(right);	  int    index    =    indexOf(right);    	non-compiled	[CE]  	14	None	replace
192	[BUG]  [BUGGY]  int  index  =  right.getImmediateParentPointer();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  right.getImmediateParentPointer();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  right.getImmediateParentPointer();	  int    index    =    right.getLastChild();    	non-compiled	[CE]  	5	None	replace
193	[BUG]  [BUGGY]  int  index  =  indexOf(right.getString(),  right.getValue());  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(right.getString(),  right.getValue());  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(right.getString(),  right.getValue());	  int    index    =    indexOf(left.getString(),    right.getString());    	non-compiled	[CE]  	46	None	replace
194	[BUG]  [BUGGY]  int  index  =  indexOf(left.getString(),  right.getString(),  0);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOf(left.getString(),  right.getString(),  0);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOf(left.getString(),  right.getString(),  0);	  int    index    =    indexOf(left.getString(),    right.getString());    	non-compiled	[CE]  	46	None	replace
195	[BUG]  [BUGGY]  int  index  =  indexOfSupported(left,  right);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOfSupported(left,  right);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOfSupported(left,  right);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
196	[BUG]  [BUGGY]  int  index  =  indexOfSupported(right,  left);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =  indexOfSupported(right,  left);  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =  indexOfSupported(right,  left);	  int    index    =    indexOf(left,    right);    	non-compiled	[CE]  	15	None	replace
197	[BUG]  [BUGGY]  double  index  =  right.getImmediateParentPointer()  /  2;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getImmediateParentPointer()  /  2;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getImmediateParentPointer()  /  2;	  double    index    =    right.getImmediateParentPointer();    	non-compiled	[CE]  	55	None	replace
198	[BUG]  [BUGGY]  Double  index  =  right.getLong();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  right.getLong();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  right.getLong();	  Double    index    =    right.getDouble();    	non-compiled	[CE]  	48	None	replace
199	[BUG]  [BUGGY]  Double  index  =  right.getValue();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  Double  index  =  right.getValue();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	Double  index  =  right.getValue();	  Double    index    =    right.getDouble();    	non-compiled	[CE]  	48	None	replace
200	[BUG]  [BUGGY]  double  index  =  right.getImmediateParentNode()  -  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  double  index  =  right.getImmediateParentNode()  -  1;  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	double  index  =  right.getImmediateParentNode()  -  1;	  double    index    =    right.getLastChild()    -    1;    	non-compiled	[CE]  	6	None	replace
201	[BUG]  [BUGGY]  int  index  =(int)right.getValue();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      if  (isAssignmentTarget(n))  {  return  n;  }  if  (!right.isNumber())  {    return  n;  }      [BUGGY]  int  index  =(int)right.getValue();  [BUGGY]      int  intIndex  =  (int)  index;  if  (intIndex  !=  index)  {  error(INVALID_GETELEM_INDEX_ERROR,  right);  return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1437	1437	1	replace	int  index  =(int)right.getValue();	  int    index    =(int)right.getIndex();    	non-compiled	[CE]  	51	None	replace
