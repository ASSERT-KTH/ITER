bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	30	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS.length;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS.length;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS.length;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	30	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  right.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    left.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	40	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  left.getFirstChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  left.getFirstChild()  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  left.getFirstChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    left.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	40	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  >=  left.getLastChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  >=  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  >=  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    left.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	40	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  left.getFirstChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  left.getFirstChild()  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  left.getFirstChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    left.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	40	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  left.getLastChild();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    left.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	40	None	replace
8	[BUG]  [BUGGY]  elem  =  right.getNext();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  right.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  right.getNext();	  elem    =    left.getNext();    	non-compiled	[CE]  	33	None	replace
9	[BUG]  [BUGGY]  elem  =  left.getLastChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  left.getLastChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  left.getLastChild();	  elem    =    left.getNext();    	non-compiled	[CE]  	33	None	replace
10	[BUG]  [BUGGY]  elem  =  left.getParent();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  left.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  left.getParent();	  elem    =    left.getNext();    	non-compiled	[CE]  	33	None	replace
11	[BUG]  [BUGGY]  elem  =  left.getFirstChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  left.getFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  left.getFirstChild();	  elem    =    left.getNext();    	non-compiled	[CE]  	33	None	replace
12	[BUG]  [BUGGY]  elem  =  left.getNext()  +  1;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  left.getNext()  +  1;  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  left.getNext()  +  1;	  elem    =    left.getNext();    	non-compiled	[CE]  	33	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  intIndex  +  1;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  intIndex  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  2;  current!=  null  &&  i  <  intIndex  +  1;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	17	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getIndex()  +  1;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getIndex()  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  right.getIndex()  +  1;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	17	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  3;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  3;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  3;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	17	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  right.getLastChild();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  right.getLastChild();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	20	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  left.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  left.getLastChild();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	20	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	52	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  left.getFirstChild()  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  left.getFirstChild()  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  left.getFirstChild()  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	52	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	52	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  >=  left.getLastChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  >=  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  >=  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	52	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current    ==    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	21	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getIndex();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  right.getIndex();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    intIndex    +    2;    i++)    {    	non-compiled	[CE]  	47	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  5;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  5;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  5;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    intIndex    +    2;    i++)    {    	non-compiled	[CE]  	47	None	replace
25	[BUG]  [BUGGY]  Node  elem  =  current.getNext();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  current.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  current.getNext();	  Node    elem    =    left.getNext();    	non-compiled	[CE]  	9	None	replace
26	[BUG]  [BUGGY]  Node  elem  =  right.getNext();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  right.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  right.getNext();	  Node    elem    =    left.getNext();    	non-compiled	[CE]  	9	None	replace
27	[BUG]  [BUGGY]  Node  elem  =  left.getLastChild();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  left.getLastChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  left.getLastChild();	  Node    elem    =    left.getNext();    	non-compiled	[CE]  	9	None	replace
28	[BUG]  [BUGGY]  Node  elem  =  left.getParent();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  left.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  left.getParent();	  Node    elem    =    left.getNext();    	non-compiled	[CE]  	9	None	replace
29	[BUG]  [BUGGY]  Node  elem  =  left.getNext()  +  1;  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  left.getNext()  +  1;  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  left.getNext()  +  1;	  Node    elem    =    left.getNext();    	non-compiled	[CE]  	9	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	14	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getNext();  i++)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  left.getNext();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getNext();  i++)  {	  for(int    i    =    0;    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	14	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  current.getFirstChild();  i++)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  current.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  current.getFirstChild();  i++)  {	  for(int    i    =    0;    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	14	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getChildCount();  i++)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  left.getChildCount();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getChildCount();  i++)  {	  for(int    i    =    0;    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	14	None	replace
34	[BUG]  [BUGGY]  Node  elem  =  current.getFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  current.getFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  current.getFirstChild();	  Node    elem    =    left.getFirstChild();    	non-compiled	[CE]  	34	None	replace
35	[BUG]  [BUGGY]  Node  elem  =  right.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  right.getFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  right.getFirstChild();	  Node    elem    =    left.getFirstChild();    	non-compiled	[CE]  	34	None	replace
36	[BUG]  [BUGGY]  Node  elem  =  right.getLastChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  right.getLastChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  right.getLastChild();	  Node    elem    =    left.getFirstChild();    	non-compiled	[CE]  	34	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getIndex();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    3;    i++)    {    	non-compiled	[CE]  	58	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getIndex();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    3;    i++)    {    	non-compiled	[CE]  	58	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  intIndex  +  2;  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  intIndex  +  2;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  intIndex  +  2;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	49	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  intIndex  +  1;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  intIndex  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  ==  intIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	49	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  right.getIndex()  +  1;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  right.getIndex()  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  right.getIndex()  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	49	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  intIndex  +  1;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  intIndex  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >=  intIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	49	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  left.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  2;  current!=  null  &&  i  <  left.getLastChild();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	27	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getType();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getType();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  right.getType();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getType();    i++)    {    	non-compiled	[CE]  	1	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getNext();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getNext();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getNext();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getType();    i++)    {    	non-compiled	[CE]  	1	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  right.getType();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  right.getType();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  right.getType();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getType();    i++)    {    	non-compiled	[CE]  	1	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  current  ==  null;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  current  ==  null;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  intIndex  &&  current  ==  null;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  rightIndex  &&  current!=  null;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  rightIndex  &&  current!=  null;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  rightIndex  &&  current!=  null;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  left.getIndex()  &&  current!=  null;  i++)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  left.getIndex()  &&  current!=  null;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  left.getIndex()  &&  current!=  null;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  right!=  null;  i++)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  right!=  null;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  intIndex  &&  right!=  null;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  right.getIndex()  &&  current!=  null;  i++)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  right.getIndex()  &&  current!=  null;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  right.getIndex()  &&  current!=  null;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  left!=  null;  i++)  {  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  left!=  null;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  intIndex  &&  left!=  null;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.size();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  left.size();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	48	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  right.size();  i++)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  right.size();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	48	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  right.size();  i++)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  2;  current!=  null  &&  i  <  right.size();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	48	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  1;  current  ==  null  &&  i  <  right.size();  i++)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current  ==  null  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current  ==  null  &&  i  <  right.size();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	48	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS.length;  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS.length;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS.length;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    inDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	44	None	replace
58	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  if(parent  ==  null)  {  return  parent;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getParent();  if(parent  ==  null)  {  return  parent;  }  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  if(parent  ==  null)  {  return  parent;  }	  Node    parent    =    left.getParent();    if(parent!=    null)    {    return    parent;    }    	non-compiled	[CE]  	55	None	replace
59	[BUG]  [BUGGY]  Node  parent  =  left.getNext();  if(parent!=  null)  {  return  parent;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getNext();  if(parent!=  null)  {  return  parent;  }  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getNext();  if(parent!=  null)  {  return  parent;  }	  Node    parent    =    left.getParent();    if(parent!=    null)    {    return    parent;    }    	non-compiled	[CE]  	55	None	replace
60	[BUG]  [BUGGY]  Node  parent  =  current.getParent();  if(parent!=  null)  {  return  parent;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  current.getParent();  if(parent!=  null)  {  return  parent;  }  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  current.getParent();  if(parent!=  null)  {  return  parent;  }	  Node    parent    =    left.getParent();    if(parent!=    null)    {    return    parent;    }    	non-compiled	[CE]  	55	None	replace
61	[BUG]  [BUGGY]  Node  parent  =  right.getParent();  if(parent!=  null)  {  return  parent;  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  right.getParent();  if(parent!=  null)  {  return  parent;  }  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  right.getParent();  if(parent!=  null)  {  return  parent;  }	  Node    parent    =    left.getParent();    if(parent!=    null)    {    return    parent;    }    	non-compiled	[CE]  	55	None	replace
62	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  if(parent!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  return  parent;  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getParent();  if(parent!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  return  parent;  }  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  if(parent!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  return  parent;  }	  Node    parent    =    left.getParent();    if(parent!=    null)    {    return    parent;    }    	non-compiled	[CE]  	55	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  ==  intIndex;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  ==  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  ==  intIndex;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	24	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >>  intIndex;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >>  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >>  intIndex;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	24	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i!=  intIndex;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i!=  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i!=  intIndex;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	24	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  left.getIndex();  i++)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  left.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >=  left.getIndex();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	24	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  right.getIndex();  i++)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  right.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >=  right.getIndex();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	24	None	replace
68	[BUG]  [BUGGY]  For(int  i  =  0;  current!=  null  &&  i  <  right.getLastChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  For(int  i  =  0;  current!=  null  &&  i  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	For(int  i  =  0;  current!=  null  &&  i  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getLastChild()    +    1;    i++)    {    	non-compiled	[CE]  	18	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  current  >=  null  &&  i  <  right.getLastChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  >=  null  &&  i  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  >=  null  &&  i  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getLastChild()    +    1;    i++)    {    	non-compiled	[CE]  	18	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getLastChild().getIndex  +  1;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getLastChild().getIndex  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getLastChild().getIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex()  +  1;  i++)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex()  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex()  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex(0);  i++)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex(0);  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex(0);  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getFirstChild().getIndex  +  1;  i++)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getFirstChild().getIndex  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  left.getFirstChild().getIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getFirstChild().getIndex  +  1;  i++)  {  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getFirstChild().getIndex  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getFirstChild().getIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getLength()  -  1;  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getLength()  -  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getLength()  -  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getLength();    i++)    {    	non-compiled	[CE]  	46	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getLength();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getLength();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  left.getLength();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getLength();    i++)    {    	non-compiled	[CE]  	46	None	replace
78	[BUG]  [BUGGY]  Node  parent  =  left.getNext();  elem  =  parent.getNext();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getNext();  elem  =  parent.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getNext();  elem  =  parent.getNext();	  Node    parent    =    left.getParent();    elem    =    parent.getNext();    	non-compiled	[CE]  	56	None	replace
79	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  elem  =  current.getNext();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getParent();  elem  =  current.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  elem  =  current.getNext();	  Node    parent    =    left.getParent();    elem    =    parent.getNext();    	non-compiled	[CE]  	56	None	replace
80	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  elem  =  parent.getNext();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  n.getParent();  elem  =  parent.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  n.getParent();  elem  =  parent.getNext();	  Node    parent    =    left.getParent();    elem    =    parent.getNext();    	non-compiled	[CE]  	56	None	replace
81	[BUG]  [BUGGY]  Node  parent  =  current.getParent();  elem  =  parent.getNext();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  current.getParent();  elem  =  parent.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  current.getParent();  elem  =  parent.getNext();	  Node    parent    =    left.getParent();    elem    =    parent.getNext();    	non-compiled	[CE]  	56	None	replace
82	[BUG]  [BUGGY]  Node  parent  =  right.getParent();  elem  =  parent.getNext();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  right.getParent();  elem  =  parent.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  right.getParent();  elem  =  parent.getNext();	  Node    parent    =    left.getParent();    elem    =    parent.getNext();    	non-compiled	[CE]  	56	None	replace
83	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  elem  =  parent!=  null?  parent.getNext()  :  n;  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getParent();  elem  =  parent!=  null?  parent.getNext()  :  n;  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  elem  =  parent!=  null?  parent.getNext()  :  n;	  Node    parent    =    left.getParent();    elem    =    parent.getNext();    	non-compiled	[CE]  	56	None	replace
84	[BUG]  [BUGGY]  Node  current  =  n.getNext();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  n.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  n.getNext();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	6	None	replace
85	[BUG]  [BUGGY]  Node  current  =  left.getParent();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  left.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.getParent();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	6	None	replace
86	[BUG]  [BUGGY]  Node  current  =  left.getNext()  -  1;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  left.getNext()  -  1;  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.getNext()  -  1;	  Node    current    =    left.getNext();    	non-compiled	[CE]  	6	None	replace
87	[BUG]  [BUGGY]  Node  current  =  right.getNext();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  right.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  right.getNext();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	6	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  left.getLastChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    ==    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	43	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  right.getLastChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    ==    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	43	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  ==  left.getLastChild();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  ==  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  ==  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    ==    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	43	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()!=  left.getLastChild();  i++)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()!=  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()!=  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    ==    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	43	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getLastChild()  ==  left.getLastChild();  i++)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getLastChild()  ==  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getLastChild()  ==  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    ==    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	43	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  right.getFirstChild();  i++)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  right.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  right.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    ==    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	43	None	replace
94	[BUG]  [BUGGY]  Node  current  =  n.getLastChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  n.getLastChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  n.getLastChild();	  Node    current    =    left.getLastChild();    	non-compiled	[CE]  	8	None	replace
95	[BUG]  [BUGGY]  Node  current  =  right.getLastChild();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  right.getLastChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  right.getLastChild();	  Node    current    =    left.getLastChild();    	non-compiled	[CE]  	8	None	replace
96	[BUG]  [BUGGY]  Node  current  =  right.getFirstChild();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  right.getFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  right.getFirstChild();	  Node    current    =    left.getLastChild();    	non-compiled	[CE]  	8	None	replace
97	[BUG]  [BUGGY]  Node  current  =  n.getFirstChild();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  n.getFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  n.getFirstChild();	  Node    current    =    left.getLastChild();    	non-compiled	[CE]  	8	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  right.getFirstChild();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  right.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  right.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	42	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  <  left.getFirstChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	42	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  left.getNext();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  left.getNext();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  left.getNext();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	42	None	replace
101	[BUG]  [BUGGY]  elem  =  current.getParent();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  current.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  current.getParent();	  elem    =    current.getNext();    	non-compiled	[CE]  	35	None	replace
102	[BUG]  [BUGGY]  elem  =  current.getLastChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  current.getLastChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  current.getLastChild();	  elem    =    current.getNext();    	non-compiled	[CE]  	35	None	replace
103	[BUG]  [BUGGY]  elem  =  current.getFirstChild();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  current.getFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  current.getFirstChild();	  elem    =    current.getNext();    	non-compiled	[CE]  	35	None	replace
104	[BUG]  [BUGGY]  elem  =  current.getRootNode();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  current.getRootNode();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  current.getRootNode();	  elem    =    current.getNext();    	non-compiled	[CE]  	35	None	replace
105	[BUG]  [BUGGY]  Node  current  =  parent.getFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  parent.getFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  parent.getFirstChild();	  Node    current    =    left.getFirstChild();    	non-compiled	[CE]  	7	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.getIndex();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  <  left.getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	57	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getColumn();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getColumn();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getColumn();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	57	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  current  >=  null  &&  i  <  left.getIndex();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  >=  null  &&  i  <  left.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  >=  null  &&  i  <  left.getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	57	None	replace
109	[BUG]  [BUGGY]  For(int  i  =  0;  current!=  null  &&  i  <  left.getIndex();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  For(int  i  =  0;  current!=  null  &&  i  <  left.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	For(int  i  =  0;  current!=  null  &&  i  <  left.getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	57	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  right.getIndex();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  right.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  <  right.getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	16	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  0;  current  >=  null  &&  i  <  right.getIndex();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  >=  null  &&  i  <  right.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  >=  null  &&  i  <  right.getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	16	None	replace
112	[BUG]  [BUGGY]  For(int  i  =  0;  current!=  null  &&  i  <  right.getIndex();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  For(int  i  =  0;  current!=  null  &&  i  <  right.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	For(int  i  =  0;  current!=  null  &&  i  <  right.getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	16	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getColumn();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getColumn();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getColumn();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	16	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getChildCount();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getChildCount();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  left.getChildCount();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getChildCount();    i++)    {    	non-compiled	[CE]  	3	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getChildCount()  -  1;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getChildCount()  -  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getChildCount()  -  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getChildCount();    i++)    {    	non-compiled	[CE]  	3	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getChildCount();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getChildCount();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getChildCount();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getChildCount();    i++)    {    	non-compiled	[CE]  	3	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getLeastChild();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  left.getLeastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getLeastChild();  i++)  {	  for(int    i    =    0;    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	38	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  right.getFirstChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  right.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  right.getFirstChild();  i++)  {	  for(int    i    =    0;    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	38	None	replace
119	[BUG]  [BUGGY]  Node  parent  =  left.getNext();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getNext();	  Node    parent    =    left.getParent();    	non-compiled	[CE]  	5	None	replace
120	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  n.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  n.getParent();	  Node    parent    =    left.getParent();    	non-compiled	[CE]  	5	None	replace
121	[BUG]  [BUGGY]  Node  parent  =  left.getLastChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getLastChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getLastChild();	  Node    parent    =    left.getParent();    	non-compiled	[CE]  	5	None	replace
122	[BUG]  [BUGGY]  Node  parent  =  right.getParent();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  right.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  right.getParent();	  Node    parent    =    left.getParent();    	non-compiled	[CE]  	5	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  left.getType();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  left.getType();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  left.getType();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	4	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getNext();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getNext();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  left.getNext();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	4	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getLength();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  left.getLength();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getLength();  i++)  {	  for(int    i    =    0;    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	32	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getParent();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getParent();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getParent();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getNext();    i++)    {    	non-compiled	[CE]  	2	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.size();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size()    +    1;    i++)    {    	non-compiled	[CE]  	59	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  right.size();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  <  right.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size()    +    1;    i++)    {    	non-compiled	[CE]  	59	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  current  >=  null  &&  i  <  right.size();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  >=  null  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  >=  null  &&  i  <  right.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size()    +    1;    i++)    {    	non-compiled	[CE]  	59	None	replace
130	[BUG]  [BUGGY]  For(int  i  =  0;  current!=  null  &&  i  <  right.size();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  For(int  i  =  0;  current!=  null  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	For(int  i  =  0;  current!=  null  &&  i  <  right.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size()    +    1;    i++)    {    	non-compiled	[CE]  	59	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  i  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  i  <  right.getLastChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  i  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  i  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  1;  left!=  null  &&  i  <  left.getLastChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  left!=  null  &&  i  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  left!=  null  &&  i  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  current.getLastChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  current.getLastChild()  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  current.getLastChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  ||  i  <  left.getLastChild();  i++)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  ||  i  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  ||  i  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  1;  left!=  null  &&  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  left!=  null  &&  i  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  left!=  null  &&  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
137	[BUG]  [BUGGY]  Node  parent  =  current.getNext();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  current.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  current.getNext();	  Node    parent    =    current.getParent();    	non-compiled	[CE]  	10	None	replace
138	[BUG]  [BUGGY]  Node  parent  =  right.getNext();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  right.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  right.getNext();	  Node    parent    =    current.getParent();    	non-compiled	[CE]  	10	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.size()  -  1;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.size()  -  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.size()  -  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	51	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  ||  i  <  right.size();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  ||  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  ||  i  <  right.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	51	None	replace
141	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  right.size();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  right.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	51	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.length;  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.length;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.length;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS.length;    i++)    {    	non-compiled	[CE]  	29	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.length;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.length;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.length;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS.length;    i++)    {    	non-compiled	[CE]  	29	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS.length  -  1;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS.length  -  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS.length  -  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS.length;    i++)    {    	non-compiled	[CE]  	29	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  ||  i  <  INDEX_OUT_OF_BOUNDS.length;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  ||  i  <  INDEX_OUT_OF_BOUNDS.length;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  ||  i  <  INDEX_OUT_OF_BOUNDS.length;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS.length;    i++)    {    	non-compiled	[CE]  	29	None	replace
146	[BUG]  [BUGGY]  n  =  current.getNext();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  n  =  current.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	n  =  current.getNext();	  n    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
147	[BUG]  [BUGGY]  n  =  left.getLastChild();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  n  =  left.getLastChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	n  =  left.getLastChild();	  n    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
148	[BUG]  [BUGGY]  n  =  left.getParent();  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  n  =  left.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	n  =  left.getParent();	  n    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
149	[BUG]  [BUGGY]  n  =  left.getFirstChild();  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  n  =  left.getFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	n  =  left.getFirstChild();	  n    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
150	[BUG]  [BUGGY]  n  =  right.getNext();  [CE]  [FE]                                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  n  =  right.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	n  =  right.getNext();	  n    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
151	[BUG]  [BUGGY]  n  =  left.getNext()  +  1;  [CE]  [FE]                                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  n  =  left.getNext()  +  1;  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	n  =  left.getNext()  +  1;	  n    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  left.getFirstChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >=  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	25	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  left.getFirstChild()  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  left.getFirstChild()  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  left.getFirstChild()  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	53	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	53	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  left.getLastChild();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >=  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    left.getLastChild();    i++)    {    	non-compiled	[CE]  	23	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  left.getFirstChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  ==  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    left.getLastChild();    i++)    {    	non-compiled	[CE]  	23	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  intIndex;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  <  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >    intIndex;    i++)    {    	non-compiled	[CE]  	50	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >  intIndex;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >    intIndex;    i++)    {    	non-compiled	[CE]  	50	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex  +  2;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex  +  2;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex  +  2;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
160	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getFirstChild().getIndex  +  1;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  left.getFirstChild().getIndex  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getFirstChild().getIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.getFirstChild().getIndex  +  1;  i++)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.getFirstChild().getIndex  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  <  left.getFirstChild().getIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getNext().getIndex  +  1;  i++)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getNext().getIndex  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getNext().getIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild().getIndex    +    1;    i++)    {    	non-compiled	[CE]  	19	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getKey();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getKey();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getKey();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	57	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  1;  current  ==  null  &&  i  <  left.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current  ==  null  &&  i  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current  ==  null  &&  i  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current    ==    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	21	None	replace
165	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  For(int  i  =  0;  i  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	For(int  i  =  0;  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	39	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  left.getFirstChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    left.getFirstChild()    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	40	None	replace
167	[BUG]  [BUGGY]  Node  current  =  left.removeFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  left.removeFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.removeFirstChild();	  Node    current    =    left.getFirstChild();    	non-compiled	[CE]  	7	None	replace
168	[BUG]  [BUGGY]  Node  current  =  left.getPreviousChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  left.getPreviousChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.getPreviousChild();	  Node    current    =    left.getFirstChild();    	non-compiled	[CE]  	7	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getfirstChild();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  left.getfirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getfirstChild();  i++)  {	  for(int    i    =    0;    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	38	None	replace
170	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  left.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  For(int  i  =  0;  i  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	For(int  i  =  0;  i  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	38	None	replace
171	[BUG]  [BUGGY]  Node  elem  =  left.getType();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  left.getType();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  left.getType();	  Node    elem    =    left.getFirstChild();    	non-compiled	[CE]  	34	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  left.getFirstChild()  <  right.getLastChild();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  left.getFirstChild()  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  left.getFirstChild()  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	53	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	53	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  left.getType();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  left.getType();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  left.getType();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    INDEX_OUT_OF_RANGE;    i++)    {    	non-compiled	[CE]  	36	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  1;  i!=  null  &&  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i!=  null  &&  i  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i!=  null  &&  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	13	None	replace
176	[BUG]  [BUGGY]  if(left!=  null)  {  Node  parent  =  left.getParent();  if(parent!=  null)  {  return  parent;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  if(left!=  null)  {  Node  parent  =  left.getParent();  if(parent!=  null)  {  return  parent;  }  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	if(left!=  null)  {  Node  parent  =  left.getParent();  if(parent!=  null)  {  return  parent;  }	  Node    parent    =    left.getParent();    if(parent!=    null)    {    return    parent;    }    	non-compiled	[CE]  	55	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  1;  i!=  left.getFirstChild()  &&  i  <  left.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i!=  left.getFirstChild()  &&  i  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i!=  left.getFirstChild()  &&  i  <  left.getLastChild();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	27	None	replace
178	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  elem  =  parent.getParent();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getParent();  elem  =  parent.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  elem  =  parent.getParent();	  Node    parent    =    left.getParent();    elem    =    parent.getNext();    	non-compiled	[CE]  	56	None	replace
179	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  elem  =  right.getNext();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getParent();  elem  =  right.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  elem  =  right.getNext();	  Node    parent    =    left.getParent();    elem    =    parent.getNext();    	non-compiled	[CE]  	56	None	replace
180	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  elem  =  parent!=  null?  right  :  parent.getNext();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getParent();  elem  =  parent!=  null?  right  :  parent.getNext();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  elem  =  parent!=  null?  right  :  parent.getNext();	  Node    parent    =    left.getParent();    elem    =    parent.getNext();    	non-compiled	[CE]  	56	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getKey();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getKey();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getKey();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	16	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getValue();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getValue();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getValue();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	16	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  left.getFirstChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i!=  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i!=  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	25	None	replace
184	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <=  INDEX_OUT_OF_BOUNDS;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <=  INDEX_OUT_OF_BOUNDS;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <=  INDEX_OUT_OF_BOUNDS;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    ==    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	45	None	replace
185	[BUG]  [BUGGY]  Node  current  =  left.getfirstChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  left.getfirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.getfirstChild();	  Node    current    =    left.getLastChild();    	non-compiled	[CE]  	8	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  ||  i  >  intIndex;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  ||  i  >  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  ||  i  >  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >    intIndex;    i++)    {    	non-compiled	[CE]  	50	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  current.getFirstChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  current.getFirstChild()  <  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  current.getFirstChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  current.getLastChild()  ==  left.getLastChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  current.getLastChild()  ==  left.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  current.getLastChild()  ==  left.getLastChild();  i++)  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  i  <  right.getFirstChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  i  <  right.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  i  <  right.getFirstChild();  i++)  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getFirstChild()  +  1;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getFirstChild()  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getFirstChild()  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getLastChild()    +    1;    i++)    {    	non-compiled	[CE]  	18	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  right.getNext();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  right.getNext();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  right.getNext();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    ==    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	43	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  left.getNext();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  left.getNext();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  left.getNext();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    ==    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	43	None	replace
193	[BUG]  [BUGGY]  for(int  i  =  1;  i!=  right.size()  &&  i  <  right.size();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i!=  right.size()  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i!=  right.size()  &&  i  <  right.size();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	48	None	replace
194	[BUG]  [BUGGY]  for(int  i  =  1;  i!=  left.size()  &&  i  <  right.size();  i++)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i!=  left.size()  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i!=  left.size()  &&  i  <  right.size();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	48	None	replace
195	[BUG]  [BUGGY]  for(int  i  =  1;  i!=  null  &&  i  <  right.size();  i++)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i!=  null  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i!=  null  &&  i  <  right.size();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	48	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  left.size()  &&  i  <  right.size();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i!=  left.size()  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i!=  left.size()  &&  i  <  right.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	51	None	replace
197	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  right.size()  &&  i  <  right.size();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i!=  right.size()  &&  i  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i!=  right.size()  &&  i  <  right.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	51	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getIndex  +  3;  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getIndex  +  3;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getIndex  +  3;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    3;    i++)    {    	non-compiled	[CE]  	58	None	replace
199	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getIndex  +  3;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getIndex  +  3;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getIndex  +  3;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    3;    i++)    {    	non-compiled	[CE]  	58	None	replace
200	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right  +  3;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right  +  3;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right  +  3;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    3;    i++)    {    	non-compiled	[CE]  	58	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  right.getNext();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  right.getNext();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  right.getNext();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	42	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  INDEX_OUT_OF_BOUNDS.length;  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  INDEX_OUT_OF_BOUNDS.length;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  INDEX_OUT_OF_BOUNDS.length;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS.length;    i++)    {    	non-compiled	[CE]  	29	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  left.length;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  left.length;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  left.length;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS.length;    i++)    {    	non-compiled	[CE]  	29	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.length;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.length;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  <  left.length;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS.length;    i++)    {    	non-compiled	[CE]  	29	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  intIndex  &&  current!=  null;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  intIndex  &&  current!=  null;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  intIndex  &&  current!=  null;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  leftIndex  &&  current!=  null;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  leftIndex  &&  current!=  null;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  leftIndex  &&  current!=  null;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  INDEX_OUT_OF_BOUNDS;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  INDEX_OUT_OF_BOUNDS;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >=  INDEX_OUT_OF_BOUNDS;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	30	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  INDEX_OUT_OF_RANGE;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  INDEX_OUT_OF_RANGE;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  INDEX_OUT_OF_RANGE;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	30	None	replace
209	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild()  +  1;  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild()  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild()  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	49	None	replace
210	[BUG]  [BUGGY]  Node  current  =  left.getNextChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  left.getNextChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.getNextChild();	  Node    current    =    left.getNext();    	non-compiled	[CE]  	6	None	replace
211	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getNext()  +  1;  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getNext()  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getNext()  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getNext();    i++)    {    	non-compiled	[CE]  	2	None	replace
212	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getLength();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getLength();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getLength();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getLength();    i++)    {    	non-compiled	[CE]  	46	None	replace
213	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  right.getLastChild();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	53	None	replace
214	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	53	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  current.getType()  ==  Token.VAR;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  current.getType()  ==  Token.VAR;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  intIndex  &&  current.getType()  ==  Token.VAR;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  current.getType()  ==  Token.RETURN;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  current.getType()  ==  Token.RETURN;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  intIndex  &&  current.getType()  ==  Token.RETURN;  i++)  {	  for(int    i    =    1;    i    <    intIndex    &&    current!=    null;    i++)    {    	non-compiled	[CE]  	26	None	replace
217	[BUG]  [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  right.getLastChild();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  right.getLastChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  2;  current!=  null  &&  i  <  right.getLastChild();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	20	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getCount();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getCount();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getCount();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getLength();    i++)    {    	non-compiled	[CE]  	46	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  1;  current  ==  null  &&  i  <  intIndex  +  2;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current  ==  null  &&  i  <  intIndex  +  2;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current  ==  null  &&  i  <  intIndex  +  2;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    intIndex    +    2;    i++)    {    	non-compiled	[CE]  	47	None	replace
220	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  4;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  4;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  4;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    intIndex    +    2;    i++)    {    	non-compiled	[CE]  	47	None	replace
221	[BUG]  [BUGGY]  elem  =  current.getChildCount();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  elem  =  current.getChildCount();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  current.getChildCount();	  elem    =    current.getNext();    	non-compiled	[CE]  	35	None	replace
222	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  current.getLastChild().getString().endsWith( "__ "))  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  left!=  null  &&  current.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  current.getLastChild().getString().endsWith( "__ "))  {	  for(int    i    =    0;    left!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	28	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  2;  current!=  null  &&  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	13	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  1;  i!=  0  &&  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  i!=  0  &&  i  <  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i!=  0  &&  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	13	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  inDEX_OUT_OF_RANGE;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  inDEX_OUT_OF_RANGE;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  inDEX_OUT_OF_RANGE;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    inDEX_OUT_OF_RANGE;    i++)    {    	non-compiled	[CE]  	41	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_RANGE  +  1;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_RANGE  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_RANGE  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    inDEX_OUT_OF_RANGE;    i++)    {    	non-compiled	[CE]  	41	None	replace
227	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inIndex;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  inIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    inDEX_OUT_OF_RANGE;    i++)    {    	non-compiled	[CE]  	41	None	replace
228	[BUG]  [BUGGY]  Node  parent  =  next.getParent();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  next.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  next.getParent();	  Node    parent    =    current.getParent();    	non-compiled	[CE]  	10	None	replace
229	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getItemCount();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  left.getItemCount();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getItemCount();  i++)  {	  for(int    i    =    0;    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	38	None	replace
230	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  index  +  2;  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  index  +  2;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  index  +  2;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    2;    i++)    {    	non-compiled	[CE]  	15	None	replace
231	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  current.getType();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  current.getType();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  current.getType();  i++)  {	  for(int    i    =    0;    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	32	None	replace
232	[BUG]  [BUGGY]  n  =  current.getParent();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  n  =  current.getParent();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	n  =  current.getParent();	  n    =    left.getNext();    	non-compiled	[CE]  	11	None	replace
233	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  ==  intIndex;  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  ==  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  ==  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    ==    intIndex;    i++)    {    	non-compiled	[CE]  	22	None	replace
234	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  ||  i  ==  intIndex;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  ||  i  ==  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  ||  i  ==  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    ==    intIndex;    i++)    {    	non-compiled	[CE]  	22	None	replace
235	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS_ERROR;  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS_ERROR;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS_ERROR;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    3;    i++)    {    	non-compiled	[CE]  	58	None	replace
236	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.size()  <  right.size();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.size()  <  right.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.size()  <  right.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size()    +    1;    i++)    {    	non-compiled	[CE]  	59	None	replace
237	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  inDEX_OUT_OF_BOUNDS;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  inDEX_OUT_OF_BOUNDS;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  inDEX_OUT_OF_BOUNDS;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    ==    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	45	None	replace
238	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  INDEX_OUT_OF_RANGE;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  INDEX_OUT_OF_RANGE;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  ==  INDEX_OUT_OF_RANGE;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    INDEX_OUT_OF_RANGE;    i++)    {    	non-compiled	[CE]  	36	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  index  +  1;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  index  +  1;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  index  +  1;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	17	None	replace
240	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  if(parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  return  parent;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.getParent();  if(parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  return  parent;  }  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  if(parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  return  parent;  }	  Node    parent    =    left.getParent();    if(parent!=    null)    {    return    parent;    }    	non-compiled	[CE]  	55	None	replace
241	[BUG]  [BUGGY]  Node  current  =  left.cloneTree();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  current  =  left.cloneTree();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.cloneTree();	  Node    current    =    left.getFirstChild();    	non-compiled	[CE]  	7	None	replace
242	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  ==  left.getFirstChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  ==  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  right.getFirstChild()  ==  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    ==    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	43	None	replace
243	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.size()  >  0;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  right.size()  >  0;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  right.size()  >  0;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	48	None	replace
244	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  left.getFirstChild();  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  ==  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	42	None	replace
245	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  >=  left.getFirstChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  >=  left.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  >=  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    right.getFirstChild()    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	42	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.size();  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  i  <  left.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.size();  i++)  {	  for(int    i    =    0;    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	14	None	replace
247	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  item  <  left.getIndex();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  item  <  left.getIndex();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  item  <  left.getIndex();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getIndex()    +    1;    i++)    {    	non-compiled	[CE]  	57	None	replace
248	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >  0;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >  0;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >  0;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >    intIndex;    i++)    {    	non-compiled	[CE]  	50	None	replace
249	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >>  intIndex;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >>  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >>  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >    intIndex;    i++)    {    	non-compiled	[CE]  	50	None	replace
250	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >  0;  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >  0;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >  0;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >    intIndex;    i++)    {    	non-compiled	[CE]  	50	None	replace
251	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  >  intIndex;  i++)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  >  intIndex;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  >  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >    intIndex;    i++)    {    	non-compiled	[CE]  	50	None	replace
252	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getParent();  i++)  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getParent();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getParent();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getType();    i++)    {    	non-compiled	[CE]  	1	None	replace
253	[BUG]  [BUGGY]  Node  elem  =  left.removeFirstChild();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  elem  =  left.removeFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  left.removeFirstChild();	  Node    elem    =    left.getFirstChild();    	non-compiled	[CE]  	34	None	replace
254	[BUG]  [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  right.getFirstChild();  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  2;  current!=  null  &&  i  <  right.getFirstChild();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  2;  current!=  null  &&  i  <  right.getFirstChild();  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    right.getFirstChild();    i++)    {    	non-compiled	[CE]  	12	None	replace
255	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS.length;  i++)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS.length;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS.length;  i++)  {	  for(int    i    =    1;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	30	None	replace
256	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.size()  >  0;  i++)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.size()  >  0;  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.size()  >  0;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	51	None	replace
257	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  list.size();  i++)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  list.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  list.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.size();    i++)    {    	non-compiled	[CE]  	51	None	replace
258	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS.size();  i++)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS.size();  i++)  {  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    inDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	44	None	replace
259	[BUG]  [BUGGY]  Node  parent  =  left.removeFirstChild();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;      [BUGGY]  Node  parent  =  left.removeFirstChild();  [BUGGY]      elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.removeFirstChild();	  Node    parent    =    left.getParent();    	non-compiled	[CE]  	5	None	replace
