bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getType();  i++)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getType();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getType();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	7	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getNext();  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getNext();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getNext();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	7	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getChildCount();  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getChildCount();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getChildCount();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	7	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getType();  i++)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getType();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  left.getType();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	7	None	replace
5	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  Node  parent  =  left.getParent();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();	      	non-compiled	[CE]  	6	None	replace
6	[BUG]  [BUGGY]  Node  current  =  left.getNext();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  Node  current  =  left.getNext();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.getNext();	      	non-compiled	[CE]  	6	None	replace
7	[BUG]  [BUGGY]  Node  current  =  left.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  Node  current  =  left.getFirstChild();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
8	[BUG]  [BUGGY]  Node  current  =  left.getLastChild();  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  Node  current  =  left.getLastChild();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  current  =  left.getLastChild();	      	non-compiled	[CE]  	6	None	replace
9	[BUG]  [BUGGY]  Node  elem  =  left.getNext();  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  Node  elem  =  left.getNext();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  left.getNext();	      	non-compiled	[CE]  	6	None	replace
10	[BUG]  [BUGGY]  Node  parent  =  current.getParent();  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  Node  parent  =  current.getParent();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  current.getParent();	      	non-compiled	[CE]  	6	None	replace
11	[BUG]  [BUGGY]  n  =  left.getNext();  [CE]  [FE]                              AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  n  =  left.getNext();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	n  =  left.getNext();	      	non-compiled	[CE]  	6	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getFirstChild();  i++)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getFirstChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  right.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getFirstChild();    i++)    {    	non-compiled	[CE]  	4	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getFirstChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getFirstChild();    i++)    {    	non-compiled	[CE]  	4	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getFirstChild();  i++)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  i  <  left.getFirstChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getFirstChild();    i++)    {    	non-compiled	[CE]  	4	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  intIndex  +  2;  i++)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  intIndex  +  2;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  intIndex  +  2;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	9	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getIndex()  +  1;  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getIndex()  +  1;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getIndex()  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	9	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  1;  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  1;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	9	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getLastChild()  +  1;  i++)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.getLastChild()  +  1;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.getLastChild()  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	9	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex  +  1;  i++)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex  +  1;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getFirstChild().getIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	9	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getLastChild();  i++)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	1	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.getLastChild();  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  left.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	1	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  intIndex;  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  intIndex;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  ==  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	8	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  left.getLastChild();  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  left.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	8	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  intIndex;  i++)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  >=  intIndex;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  >=  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	8	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  left.getFirstChild();  i++)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  left.getFirstChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	8	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  current!=  null;  i++)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  i  <  intIndex  &&  current!=  null;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  i  <  intIndex  &&  current!=  null;  i++)  {	  for    (int    i    =    1;    current!=    null    &&    i    <    intIndex;    i++)    {    	non-compiled	[CE]  	5	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getLastChild();  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  left.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	2	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  left!=  null  &&  i  <  left.getLastChild();  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  left!=  null  &&  i  <  left.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  left!=  null  &&  i  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	2	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS.length;  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS.length;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS.length;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	10	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS;  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  INDEX_OUT_OF_BOUNDS;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	10	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  INDEX_OUT_OF_BOUNDS;  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  INDEX_OUT_OF_BOUNDS;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  INDEX_OUT_OF_BOUNDS;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	10	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getType();  i++)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  i  <  left.getType();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getType();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	7	None	replace
33	[BUG]  [BUGGY]  elem  =  left.getNext();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  elem  =  left.getNext();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  left.getNext();	      	non-compiled	[CE]  	6	None	replace
34	[BUG]  [BUGGY]  Node  elem  =  left.getFirstChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  Node  elem  =  left.getFirstChild();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  elem  =  left.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
35	[BUG]  [BUGGY]  elem  =  current.getNext();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  elem  =  current.getNext();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	elem  =  current.getNext();	      	non-compiled	[CE]  	6	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  INDEX_OUT_OF_RANGE;  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  INDEX_OUT_OF_RANGE;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  INDEX_OUT_OF_RANGE;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_RANGE;    i++)    {    	non-compiled	[CE]  	11	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  right.getFirstChild();  i++)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  i  <  right.getFirstChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  right.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getFirstChild();    i++)    {    	non-compiled	[CE]  	4	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  right.getLastChild();  i++)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  i  <  right.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	1	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  left.getLastChild();  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  i  <  left.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  i  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	3	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  left.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  left.getFirstChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	2	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_RANGE;  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_RANGE;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_RANGE;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_RANGE;    i++)    {    	non-compiled	[CE]  	11	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  left.getFirstChild();  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  left.getFirstChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	3	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  left.getFirstChild();  i++)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  left.getFirstChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  ==  left.getFirstChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getFirstChild();    i++)    {    	non-compiled	[CE]  	3	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS;  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  inDEX_OUT_OF_BOUNDS;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	10	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  INDEX_OUT_OF_BOUNDS;  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  ==  INDEX_OUT_OF_BOUNDS;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  ==  INDEX_OUT_OF_BOUNDS;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    INDEX_OUT_OF_BOUNDS;    i++)    {    	non-compiled	[CE]  	10	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getLength();  i++)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getLength();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getLength();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getType();    i++)    {    	non-compiled	[CE]  	7	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  2;  i++)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  2;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  intIndex  +  2;  i++)  {	  for    (int    i    =    1;    current!=    null    &&    i    <    intIndex;    i++)    {    	non-compiled	[CE]  	5	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.size();  i++)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  1;  current!=  null  &&  i  <  right.size();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  1;  current!=  null  &&  i  <  right.size();  i++)  {	  for    (int    i    =    1;    current!=    null    &&    i    <    intIndex;    i++)    {    	non-compiled	[CE]  	5	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  intIndex  +  1;  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >=  intIndex  +  1;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >=  intIndex  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	8	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >  intIndex;  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  >  intIndex;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  >  intIndex;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	8	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.size();  i++)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.size();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.size();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    >=    intIndex;    i++)    {    	non-compiled	[CE]  	8	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  left.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    left.getLastChild();    i++)    {    	non-compiled	[CE]  	2	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  right.getFirstChild()  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	1	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  right.getLastChild();  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current  ==  null  &&  i  <  right.getLastChild();  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current  ==  null  &&  i  <  right.getLastChild();  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    right.getLastChild();    i++)    {    	non-compiled	[CE]  	1	None	replace
55	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  if(parent!=  null)  {  return  parent;  }  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  Node  parent  =  left.getParent();  if(parent!=  null)  {  return  parent;  }  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  if(parent!=  null)  {  return  parent;  }	      	non-compiled	[CE]  	6	None	replace
56	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  elem  =  parent.getNext();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  Node  parent  =  left.getParent();  elem  =  parent.getNext();  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	Node  parent  =  left.getParent();  elem  =  parent.getNext();	      	non-compiled	[CE]  	6	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getIndex()  +  1;  i++)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  left.getIndex()  +  1;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  left.getIndex()  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	9	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  intIndex  +  3;  i++)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  intIndex  +  3;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  intIndex  +  3;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	9	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.size()  +  1;  i++)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    return  n;  }  if  (intIndex  <  0)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  Node  current  =  left.getFirstChild();  Node  elem  =  null;    [BUGGY]  for(int  i  =  0;  current!=  null  &&  i  <  right.size()  +  1;  i++)  {  [BUGGY]    elem  =  current;  current  =  current.getNext();  }  if  (elem  ==  null)  {  error(INDEX_OUT_OF_BOUNDS_ERROR,  right);  return  n;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1451	1451	1	replace	for(int  i  =  0;  current!=  null  &&  i  <  right.size()  +  1;  i++)  {	  for(int    i    =    0;    current!=    null    &&    i    <    intIndex    +    1;    i++)    {    	non-compiled	[CE]  	9	None	replace
