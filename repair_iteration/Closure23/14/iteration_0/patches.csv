bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isAssignmentTarget(parent))  {  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(isAssignmentTarget(parent))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(isAssignmentTarget(parent))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
2	[BUG]  [BUGGY]  if(parent!=  null  &&  isAssignmentTarget(n))  {  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  isAssignmentTarget(n))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(parent!=  null  &&  isAssignmentTarget(n))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
3	[BUG]  [BUGGY]  if(parent!=  null  ||  isAssignmentTarget(n))  {  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  isAssignmentTarget(n))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(parent!=  null  ||  isAssignmentTarget(n))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
4	[BUG]  [BUGGY]  if(parent  ==  null  ||  isAssignmentTarget(n))  {  [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  isAssignmentTarget(n))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(parent  ==  null  ||  isAssignmentTarget(n))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
5	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  isAssignmentTarget(n))  {  [CE]  orphaned  case  [FE]            AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  isAssignmentTarget(n))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(parent.getType()  ==  Token.NAME  &&  isAssignmentTarget(n))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
6	[BUG]  [BUGGY]  if(parent!=  null  ||  isAssignmentTarget(parent))  {  [CE]  orphaned  case  [FE]              AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  isAssignmentTarget(parent))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(parent!=  null  ||  isAssignmentTarget(parent))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
7	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]                AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]    [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	  	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
8	[BUG]  [BUGGY]  if(isAssignmentTarget(left)||  isAssignmentTarget(right))  {  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(isAssignmentTarget(left)||  isAssignmentTarget(right))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(isAssignmentTarget(left)||  isAssignmentTarget(right))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
9	[BUG]  [BUGGY]  if(parent  ==  null  ||  isAssignmentTarget(left))  {  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent  ==  null  ||  isAssignmentTarget(left))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(parent  ==  null  ||  isAssignmentTarget(left))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
10	[BUG]  [BUGGY]  if(parent!=  null  ||  isAssignmentTarget(left))  {  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  ||  isAssignmentTarget(left))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(parent!=  null  ||  isAssignmentTarget(left))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
11	[BUG]  [BUGGY]  if  (isAssignmentTarget(left))  {  [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if  (isAssignmentTarget(left))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if  (isAssignmentTarget(left))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
12	[BUG]  [BUGGY]  if(isAssignmentTarget(left)||  isAssignmentTarget(parent))  {  [CE]  orphaned  case  [FE]            AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(isAssignmentTarget(left)||  isAssignmentTarget(parent))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(isAssignmentTarget(left)||  isAssignmentTarget(parent))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
13	[BUG]  [BUGGY]  if(parent!=  null  &&  isAssignmentTarget(parent))  {  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  private  Node  tryFoldArrayAccess(Node  n,  Node  left,  Node  right)  {  Node  parent  =  n.getParent();      [BUGGY]  if(parent!=  null  &&  isAssignmentTarget(parent))  {  [BUGGY]  return  n;  }  if  (!right.isNumber())  {    return  n;  }  double  index  =  right.getDouble();  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldArrayAccess  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  index  lv  lval  negNum  numValue  result  rv  rval  val  value  int  i  intIndex  Node  current  elem  left  n  parent  right  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865475	1427	1427	1	replace	if(parent!=  null  &&  isAssignmentTarget(parent))  {	if  (isAssignmentTarget(n))  {  	non-compiled	[CE]  orphaned  case	27	None	replace
