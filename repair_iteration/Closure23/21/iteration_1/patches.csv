bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
2	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
3	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n)  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
4	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
5	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
6	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
7	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
8	[BUG]  [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
9	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
10	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
11	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
12	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
13	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isAssignmentOp())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
14	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
15	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
16	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
17	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  Node  parent  =  n.getParent();  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  parent  =  n.getParent();	      	non-compiled	[CE]  ';'  expected	8	None	replace
18	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(n.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
19	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(n.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
20	[BUG]  [BUGGY]  if(n.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(n.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  false;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
21	[BUG]  [BUGGY]  if(parent!=  null)  {  if(n.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null)  {  if(n.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null)  {  if(n.getType()  ==  Token.NAME)  {  return  false;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
22	[BUG]  [BUGGY]  if(n.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(n.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.ASSIGN)  {  for(Node  parent  =  n.getParent();  parent!=  null;)  {  return  true;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
23	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getLastChild();  [CE]  ';'  expected  [FE]                                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  Node  rightLiteral  =  parent.getLastChild();  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getLastChild();	      	non-compiled	[CE]  ';'  expected	8	None	replace
24	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
25	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
26	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
27	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
28	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
29	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
30	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
31	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
32	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
33	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
34	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
35	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isLocal())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
36	[BUG]  [BUGGY]  if(parent  ==  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent  ==  null)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null)  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
37	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  ||  parent.isInc())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isInc())  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
38	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent  ==  null  ||  parent.isInc())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.isInc())  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
39	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
40	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
41	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.isInc())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.isInc())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.isInc())  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
42	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
43	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.hasNext()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
44	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
45	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
46	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
47	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getLastChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
48	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
49	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
50	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.NAME)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
51	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
52	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getType()  ==  Token.ASSIGN)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
53	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
54	[BUG]  [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
55	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
56	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
57	[BUG]  [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
58	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
59	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  &&  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
60	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getLastChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
61	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
62	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isReturnType())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
63	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
64	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  this);	      	non-compiled	[CE]  ';'  expected	8	None	replace
65	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getLastChild();  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  Node  rightLiteral  =  n.getLastChild();  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getLastChild();	      	non-compiled	[CE]  ';'  expected	8	None	replace
66	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget());  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget());  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget());	      	non-compiled	[CE]  ';'  expected	8	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n));  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n));  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n));	      	non-compiled	[CE]  ';'  expected	8	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this));  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this));  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssignmentTarget(n,  this));	      	non-compiled	[CE]  ';'  expected	8	None	replace
69	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent));  [CE]  ';'  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent));  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget(parent));	      	non-compiled	[CE]  ';'  expected	8	None	replace
70	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()!=  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
71	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
72	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
73	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
74	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
75	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
76	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
77	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
78	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
79	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
80	[BUG]  [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
81	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)&&  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
82	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
83	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
84	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.STRING  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
85	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
86	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
87	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInitializingDeclaration()  ||  parent.isDec())  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
88	[BUG]  [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isName(parent)||  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(parent)||    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
89	[BUG]  [BUGGY]  Node  rightLiteral  =  n.getFirstChild();  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  Node  rightLiteral  =  n.getFirstChild();  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  n.getFirstChild();	      	non-compiled	[CE]  ';'  expected	8	None	replace
90	[BUG]  [BUGGY]  Node  rightLiteral  =  parent.getFirstChild();  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  Node  rightLiteral  =  parent.getFirstChild();  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	Node  rightLiteral  =  parent.getFirstChild();	      	non-compiled	[CE]  ';'  expected	8	None	replace
91	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget());  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget());  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssignmentTarget());	      	non-compiled	[CE]  ';'  expected	8	None	replace
92	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDeclaration())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
93	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isFunction(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)&&  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(parent)&&    parent.getLastChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
94	[BUG]  [BUGGY]  if(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isFunction(parent)&&  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isAssignmentOp(n)&&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
95	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isName(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
96	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isForIn(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	  if(parent!=    null    &&(NodeUtil.isAssignmentOp(parent)&&    parent.getFirstChild()    ==    n)||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
97	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
98	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
99	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
100	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
101	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.ASSIGN    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	12	None	replace
102	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isExtern())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
103	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.hasChildren()  ||  parent.isInc())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
104	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isLocal()  ||  parent.isDec())  {	  if(parent.getType()    ==    Token.NAME    &&    parent.getFirstChild()    ==    n    ||    parent.isInc()    ||    parent.isDec())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
105	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
106	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
107	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.RETURN)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.RETURN)  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
108	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
109	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CATCH)  {  [BUGGY]    ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CATCH)  {	  if(parent!=    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
