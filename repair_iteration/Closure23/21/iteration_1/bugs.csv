bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
2	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n)  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
3	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n)  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
4	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
5	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
6	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]              AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(n)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
7	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]                AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n)  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
8	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]                  AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]    [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	  	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
9	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getLastChild()  ==  n)  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
10	[BUG]  [BUGGY]  if(parent!=  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(parent!=  null)  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null)  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
11	[BUG]  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent!=  null  &&(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n)||  parent.isInc()  ||  parent.isDec())  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
12	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(parent.getType()  ==  Token.ASSIGN  &&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
13	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)||  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDec())  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
14	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  private  boolean  isAssignmentTarget(Node  n)  {  Node  parent  =  n.getParent();  [BUGGY]  if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {  [BUGGY]  ||  parent.isInc()  ||  parent.isDec())  {    return  true;  }  return  false;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  isAssignmentTarget  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  boolean  equivalent  late  leftLiteral  lval  nullRight  result  rightLiteral  undefinedLeft  undefinedRight  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  Node  n  parent  	projects/Closure23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4082482904638631	1411	1413	1	replace	if(NodeUtil.isAssignmentOp(parent)&&  parent.getFirstChild()  ==  n  ||  parent.isInc()  ||  parent.isDeclaration())  {	if  ((NodeUtil.isAssignmentOp(parent)  &&  parent.getFirstChild()  ==  n)  ||  parent.isInc()  ||  parent.isDec())  {  	non-compiled	[CE]  ';'  expected	41	None	replace
